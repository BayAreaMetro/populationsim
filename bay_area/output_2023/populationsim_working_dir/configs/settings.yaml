####################################################################
# PopulationSim Properties
####################################################################


# Algorithm/Software Configuration
# ------------------------------------------------------------------
INTEGERIZE_WITH_BACKSTOPPED_CONTROLS: True
SUB_BALANCE_WITH_FLOAT_SEED_WEIGHTS: True
# GROUP_BY_INCIDENCE_SIGNATURE causes IntCastingNaNError - investigating root cause
# PopulationSim should handle categorical mapping through control expressions dynamically
# No preprocessing needed - expressions like "households.NP >= 4" should work on original data
# Setting to False to avoid sparse 29-dimensional groupby combinations that cause NaN merge failures
GROUP_BY_INCIDENCE_SIGNATURE: False
USE_SIMUL_INTEGERIZER: True
USE_CVXPY: False
max_expansion_factor: 30

# Tolerance Settings to handle floating-point precision
# ------------------------------------------------------------------
rel_tolerance: 0.005        # Slightly relaxed relative tolerance
abs_tolerance: 5.0          # Slightly relaxed absolute tolerance
integer_tolerance: 0.05     # Tolerance for integer checking


# Geographic Settings
# ------------------------------------------------------------------
geographies: [COUNTY, PUMA, TAZ, MAZ]
seed_geography: PUMA


# Tracing
# ------------------------------------------------------------------
trace_geography:
  TAZ: 56
  MAZ: 10001

# Additional debugging options
# ------------------------------------------------------------------
# Enable detailed debugging output
TRACE_ENABLED: True
DEBUG_DATA_PROCESSING: True


# Data Directory
# ------------------------------------------------------------------
data_dir: .


# Input Data Tables
# ------------------------------------------------------------------
# input_pre_processor input_table_list
input_table_list:
  - tablename: households
    filename : seed_households.csv
    drop_columns:
      - RT
    dtype:
      HUPAC: int
      NP: int
      hhgqtype: int
      hh_workers_from_esr: int
      PUMA: int
  - tablename: persons
    filename : seed_persons.csv
    # drop mixed type fields that appear to have been incorrectly generated
    drop_columns:
      - RT
      - NAICSP  
      - SOCP
      - soc
  - tablename: geo_cross_walk
    filename : geo_cross_walk_tm2.csv
    # created by create_tm2_crosswalk.py (linked from geo_cross_walk_tm2_updated.csv)
  - tablename: MAZ_control_data
    filename : maz_marginals_hhgq.csv
    # created by create_baseyear_controls_23_tm2.py with HHGQ integration
  - tablename: TAZ_control_data
    filename : taz_marginals_hhgq.csv
    # created by create_baseyear_controls_23_tm2.py and processed with HHGQ integration
  - tablename: COUNTY_control_data
    filename : county_marginals.csv
    # created by create_baseyear_controls_23_tm2.py


# Reserved Column Names
# ------------------------------------------------------------------
household_weight_col: WGTP
household_id_col: unique_hh_id
total_hh_control: numhh_gq


# Control Specification File Name
# ------------------------------------------------------------------
control_file_name: controls.csv


# Output Tables
# ------------------------------------------------------------------
# output_tables can specify either a list of output tables to include or to skip
# if neither is specified, then no tables will be written

output_tables:
  action: include
  tables:
    - summary_MAZ
    - summary_TAZ
    - summary_COUNTY_1
    - summary_COUNTY_2
    - summary_COUNTY_3
    - summary_COUNTY_4
    - summary_COUNTY_5
    - summary_COUNTY_6
    - summary_COUNTY_7
    - summary_COUNTY_8
    - summary_COUNTY_9
    - expanded_household_ids


# Synthetic Population Output Specification
# ------------------------------------------------------------------
#

# Reserved Column Names
# ------------------------------------------------------------------
household_weight_col: WGTP
household_id_col: unique_hh_id
total_hh_control: numhh_gq


# Control Specification File Name
# ------------------------------------------------------------------
control_file_name: controls.csv


# Output Tables
# ------------------------------------------------------------------
# output_tables can specify either a list of output tables to include or to skip
# if neither is specified, then no tables will be written

output_tables:
  action: include
  tables:
    - summary_TAZ
    - summary_COUNTY_1
    - summary_COUNTY_2
    - summary_COUNTY_3
    - summary_COUNTY_4
    - summary_COUNTY_5
    - summary_COUNTY_6
    - summary_COUNTY_7
    - summary_COUNTY_8
    - summary_COUNTY_9
    - expanded_household_ids


# Synthetic Population Output Specification
# ------------------------------------------------------------------
#

output_synthetic_population:
  household_id: unique_hh_id
  households:
    filename: synthetic_households.csv
    columns:
      - SERIALNO                # Housing unit/GQ person serial number
      - PUMA                    # Public use microdata area code
      - ADJINC                  # Adjustment factor for income and earnings dollar amounts
      - WGTP                    # Housing weight
      - NP                      # Number of person records following this housing record
      - TYPEHUGQ                # Type of unit
      - ACR                     # Lot size
      - BLD                     # Units in structure
      - HHT                     # Household/family type
      - HINCP                   # Household income (past 12 months)
      - HUPAC                   # HH presence and age of children
      - NPF                     # Number of persons in family (unweighted)
      - TEN                     # Tenure
      - VEH                     # Vehicles available
      - hh_workers_from_esr     # count of employed persons in household
      - hh_income_2023          # household income in 2023 dollars, based on HINCP and ADJINC
      - hhgqtype                # group quarters type: 0: household (not gq), 1 college, 2 militar, 3 other
      - hh_income_2010          # household income in 2010 dollars for tm1

  persons:
    filename: synthetic_persons.csv
    columns:
      - SERIALNO             # Housing unit/GQ person serial number
      - SPORDER              # Person number
      - PUMA                 # Public use microdata area code
      - PWGTP                # Person's weight
      - AGEP                 # Age
      - COW                  # Class of worker
      - MIL                  # Military service
      - RELP                 # Relationship
      - SCHG                 # Grade level attending
      - SCHL                 # Educational attainment
      - SEX                  # Sex
      - WKHP                 # Usual hours worked per week past 12 months
      - WKW                  # Weeks worked during past 12 months
      - ESR                  # Employment status recode
      - HISP                 # Recoded detailed Hispanic origin
      - NAICSP               # NAICS 2017 Industry code
      - PINCP                # Total person's income (signed)
      - POWPUMA              # Place of work PUMA
      - SOCP                 # SOC 2018 Occupation code
      - INDP                 # Industry recode
      - OCCP                 # Occupation recode
      - occupation           # occupation encoded
      - employed             # 0 or 1, based on ESR (from create_seed_population.py)
      - employ_status        # employment status for tm1. 1 is full-time worker, 2 is part-time worker, 3 is not in the labor force, 4 is student under 16
      - student_status       # student status for tm1. 1 is pre-school through grade 12 student, 2 is university/professional school student, 3 is non-student
      - person_type          # person type for tm1. 1 is full-time worker, 2 is part-time worker, 3 is college student, 4 is non-working adult, 
                             # 5 is retired, 6 is driving-age student, 7 is non-driving age student, 8 is child too young for school
# Steps for base mode
# ------------------------------------------------------------------
run_list:
  steps:
    - input_pre_processor
    - setup_data_structures
    - initial_seed_balancing
    - meta_control_factoring
    - final_seed_balancing
    - integerize_final_seed_weights
    - sub_balancing.geography=TAZ
    - sub_balancing.geography=MAZ
    - expand_households
    - summarize
    - write_tables
    - write_synthetic_population

  #resume_after: expand_households
