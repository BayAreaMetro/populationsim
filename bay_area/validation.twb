<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.23.0623.1506                               -->
<workbook original-version='10.5' source-build='2022.4.4 (20224.23.0623.1506)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='summary_melt' inline='true' name='federated.0c1618y0pzcyy314fgtcd18xl11n' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='summary_melt' name='textscan.1pnhni109lpp0v1c9n81r1sx10ir'>
            <connection class='textscan' directory='.' filename='summary_melt.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1pnhni109lpp0v1c9n81r1sx10ir' name='summary_melt.csv' table='[summary_melt#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='geography' ordinal='0' />
            <column datatype='integer' name='id' ordinal='1' />
            <column datatype='string' name='variable' ordinal='2' />
            <column datatype='integer' name='result' ordinal='3' />
            <column datatype='real' name='control' ordinal='4' />
            <column datatype='real' name='diff' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1pnhni109lpp0v1c9n81r1sx10ir' name='summary_melt.csv' table='[summary_melt#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='geography' ordinal='0' />
            <column datatype='integer' name='id' ordinal='1' />
            <column datatype='string' name='variable' ordinal='2' />
            <column datatype='integer' name='result' ordinal='3' />
            <column datatype='real' name='control' ordinal='4' />
            <column datatype='real' name='diff' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[summary_melt.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geography</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geography]</local-name>
            <parent-name>[summary_melt.csv]</parent-name>
            <remote-alias>geography</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[summary_melt.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variable</remote-name>
            <remote-type>129</remote-type>
            <local-name>[variable]</local-name>
            <parent-name>[summary_melt.csv]</parent-name>
            <remote-alias>variable</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result</remote-name>
            <remote-type>20</remote-type>
            <local-name>[result]</local-name>
            <parent-name>[summary_melt.csv]</parent-name>
            <remote-alias>result</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>control</remote-name>
            <remote-type>5</remote-type>
            <local-name>[control]</local-name>
            <parent-name>[summary_melt.csv]</parent-name>
            <remote-alias>control</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diff]</local-name>
            <parent-name>[summary_melt.csv]</parent-name>
            <remote-alias>diff</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Percent Diff StdDevP' datatype='real' default-format='p0.00%' name='[Average Percent Diff (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='STDEVP([Calculation_654147898635972608])' />
      </column>
      <column caption='Abs Diff' datatype='real' name='[Calculation_425590201242845184]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='abs([diff])' />
      </column>
      <column caption='Percent Diff' datatype='real' default-format='p0.0%' name='[Calculation_654147898635972608]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[diff]/[control]' />
      </column>
      <column caption='Percent Diff Average' datatype='real' default-format='p0.0%' name='[Calculation_654147898733780993]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Calculation_654147898635972608])' />
      </column>
      <column caption='Percent Diff Min' datatype='real' default-format='p0.0%' name='[Calculation_654147898734182402]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Min([Calculation_654147898635972608])' />
      </column>
      <column caption='Variable Group' datatype='string' name='[Calculation_870039169981157376]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if(findnth([variable],&quot;_&quot;,2)==0) then&#13;&#10;  [variable]&#13;&#10;else&#13;&#10;  left([variable],findnth([variable],&quot;_&quot;,2)-1)&#13;&#10;end' />
      </column>
      <column aggregation='None' datatype='integer' name='[Diff (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[diff]' peg='0' size='1' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='integer' name='[Percent Diff (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-2' formula='[Calculation_654147898635972608]' peg='0' size='0.01' />
      </column>
      <column caption='Percent Diff Max' datatype='real' default-format='p0.0%' name='[Percent Diff Min (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Max([Calculation_654147898635972608])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column caption='Control' datatype='real' name='[control]' role='measure' type='quantitative' />
      <column caption='Diff' datatype='real' name='[diff]' role='measure' type='quantitative' />
      <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Result' datatype='integer' name='[result]' role='measure' type='quantitative' />
      <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
      <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
      <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:variable:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;hh_size_4_plus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;gq_num_hh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;hh_inc_15&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;hh_inc_30&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;pers_occ_manual&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;gq_num_hh_county&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;hh_inc_100_plus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;hh_no_kids&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;pers_occ_services&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;gq_type_univ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;hh_wrks_2&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;hh_kids_no&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;hh_with_kids&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;hh_size_1&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;pers_age_20_44&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;pers_age_65_plus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;hh_inc_15_30&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;pers_occ_military&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;hh_kids_yes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;pers_age_00_04&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;pers_age_20_39&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;hh_size_2&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;hh_wrks_3_plus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;num_hh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;pers_age_05_19&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;pers_age_35_64&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;pers_age_20_34&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;pers_age_45_64&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;pers_occ_management&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;gq_type_othnon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;hh_wrks_0&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;hh_size_1_gq&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;hh_size_3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;gq_type_mil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;hh_inc_30_60&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;pers_occ_professional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;pers_age_00_19&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;hh_wrks_1&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;hh_inc_60_100&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;hh_inc_60_plus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;pers_occ_retail&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:geography:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;MAZ&quot;</bucket>
            <bucket>&quot;TAZ&quot;</bucket>
            <bucket>&quot;COUNTY&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='textscan.1pnhni109lpp0v1c9n81r1sx10ir' name='summary_melt.csv' table='[summary_melt#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='geography' ordinal='0' />
                  <column datatype='integer' name='id' ordinal='1' />
                  <column datatype='string' name='variable' ordinal='2' />
                  <column datatype='integer' name='result' ordinal='3' />
                  <column datatype='real' name='control' ordinal='4' />
                  <column datatype='real' name='diff' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Diff Histo'>
      <table>
        <view>
          <datasources>
            <datasource caption='summary_melt' name='federated.0c1618y0pzcyy314fgtcd18xl11n' />
          </datasources>
          <datasource-dependencies datasource='federated.0c1618y0pzcyy314fgtcd18xl11n'>
            <column caption='Abs Diff' datatype='real' name='[Calculation_425590201242845184]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs([diff])' />
            </column>
            <column aggregation='None' datatype='integer' name='[Diff (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[diff]' peg='0' size='1' />
            </column>
            <column-instance column='[Calculation_425590201242845184]' derivation='Attribute' name='[attr:Calculation_425590201242845184:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diff]' derivation='Count' name='[cnt:diff:qk]' pivot='key' type='quantitative' />
            <column caption='Control' datatype='real' name='[control]' role='measure' type='quantitative' />
            <column caption='Diff' datatype='real' name='[diff]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Diff (bin)]' derivation='None' name='[none:Diff (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column caption='Result' datatype='integer' name='[result]' role='measure' type='quantitative' />
            <column-instance column='[control]' derivation='Sum' name='[sum:control:qk]' pivot='key' type='quantitative' />
            <column-instance column='[result]' derivation='Sum' name='[sum:result:qk]' pivot='key' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:Calculation_425590201242845184:qk]' included-values='in-range'>
            <min>0.0</min>
          </filter>
          <filter class='categorical' column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;hh_size_2&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]</column>
            <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:Calculation_425590201242845184:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <lod column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]' />
              <lod column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]' />
              <lod column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:control:qk]' />
              <lod column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:result:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Diff (bin):&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Diff (bin):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Geography:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]> <[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Control:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:control:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Result:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:result:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0c1618y0pzcyy314fgtcd18xl11n].[cnt:diff:qk]</rows>
        <cols>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Diff (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Diff (bin):qk]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{89806F3F-8CD5-47E1-BAD8-951B11748867}' />
    </worksheet>
    <worksheet name='Pct Diff Bars'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</run>
            <run>&gt; Controls</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='summary_melt' name='federated.0c1618y0pzcyy314fgtcd18xl11n' />
          </datasources>
          <datasource-dependencies datasource='federated.0c1618y0pzcyy314fgtcd18xl11n'>
            <column caption='Percent Diff' datatype='real' default-format='p0.0%' name='[Calculation_654147898635972608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[diff]/[control]' />
            </column>
            <column caption='Variable Group' datatype='string' name='[Calculation_870039169981157376]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if(findnth([variable],&quot;_&quot;,2)==0) then&#13;&#10;  [variable]&#13;&#10;else&#13;&#10;  left([variable],findnth([variable],&quot;_&quot;,2)-1)&#13;&#10;end' />
            </column>
            <column-instance column='[id]' derivation='Attribute' name='[attr:id:qk]' pivot='key' type='quantitative' />
            <column caption='Control' datatype='real' name='[control]' role='measure' type='quantitative' />
            <column caption='Diff' datatype='real' name='[diff]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_870039169981157376]' derivation='None' name='[none:Calculation_870039169981157376:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column caption='Result' datatype='integer' name='[result]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_654147898635972608]' derivation='Sum' name='[sum:Calculation_654147898635972608:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control]' derivation='Sum' name='[sum:control:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diff]' derivation='Sum' name='[sum:diff:qk]' pivot='key' type='quantitative' />
            <column-instance column='[result]' derivation='Sum' name='[sum:result:qk]' pivot='key' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;num_hh&quot;</bucket>
              <bucket>&quot;gq_num&quot;</bucket>
              <bucket>&quot;gq_type&quot;</bucket>
              <bucket>&quot;hh_inc&quot;</bucket>
              <bucket>&quot;hh_kids&quot;</bucket>
              <bucket>&quot;hh_size&quot;</bucket>
              <bucket>&quot;hh_wrks&quot;</bucket>
              <bucket>&quot;pers_age&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;MAZ&quot;</bucket>
              <bucket>&quot;TAZ&quot;</bucket>
              <bucket>&quot;COUNTY&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]' field-type='quantitative' major-origin='0.0' major-spacing='0.25' max='1.0' min='-1.0' minor-origin='0.0' minor-spacing='0.050000000000000003' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]' scope='cols' value='true' />
            <format attr='height' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]' value='42' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]' value='39' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='solid' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline1' value='false' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='solid' />
            <format attr='stroke-size' id='refline1' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:control:qk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:result:qk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:diff:qk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:id:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]' z-order='1' />
            <reference-line axis-column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='stdev' id='refline1' label-type='none' scope='per-cell' symmetric='false' type='sample' value-column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]' z-order='2'>
              <reference-line-value factor='-1' />
              <reference-line-value factor='1' />
            </reference-line>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Variable Group:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Variable:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]>]]></run>
                <run><![CDATA[
Id:	<[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:id:qk]>
]]></run>
                <run fontcolor='#787878'>Control:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:control:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Result:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:result:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Diff:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:diff:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percent Diff:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk] / ([federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk] / [federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]))</rows>
        <cols>[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]</cols>
      </table>
      <simple-id uuid='{70ADDB89-C1DD-42F9-8A60-8F9F88195870}' />
    </worksheet>
    <worksheet name='Pct Diff Distribution'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</run>
            <run>&gt; Controls</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='summary_melt' name='federated.0c1618y0pzcyy314fgtcd18xl11n' />
          </datasources>
          <datasource-dependencies datasource='federated.0c1618y0pzcyy314fgtcd18xl11n'>
            <column caption='Percent Diff' datatype='real' default-format='p0.0%' name='[Calculation_654147898635972608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[diff]/[control]' />
            </column>
            <column caption='Variable Group' datatype='string' name='[Calculation_870039169981157376]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if(findnth([variable],&quot;_&quot;,2)==0) then&#13;&#10;  [variable]&#13;&#10;else&#13;&#10;  left([variable],findnth([variable],&quot;_&quot;,2)-1)&#13;&#10;end' />
            </column>
            <column aggregation='None' datatype='integer' name='[Percent Diff (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-2' formula='[Calculation_654147898635972608]' peg='0' size='0.01' />
            </column>
            <column-instance column='[geography]' derivation='Attribute' name='[attr:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[id]' derivation='Attribute' name='[attr:id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_654147898635972608]' derivation='Count' name='[cnt:Calculation_654147898635972608:qk]' pivot='key' type='quantitative' />
            <column caption='Control' datatype='real' name='[control]' role='measure' type='quantitative' />
            <column caption='Diff' datatype='real' name='[diff]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_870039169981157376]' derivation='None' name='[none:Calculation_870039169981157376:nk]' pivot='key' type='nominal' />
            <column-instance column='[Percent Diff (bin)]' derivation='None' name='[none:Percent Diff (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column caption='Result' datatype='integer' name='[result]' role='measure' type='quantitative' />
            <column-instance column='[control]' derivation='Sum' name='[sum:control:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diff]' derivation='Sum' name='[sum:diff:qk]' pivot='key' type='quantitative' />
            <column-instance column='[result]' derivation='Sum' name='[sum:result:qk]' pivot='key' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Percent Diff (bin):qk]' field-type='quantitative' max='1.0' min='-1.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Percent Diff (bin):qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Percent Diff (bin):qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]' value='104' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:control:qk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:diff:qk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:result:qk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:geography:nk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:id:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Variable Group:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percent Diff (bin):&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Percent Diff (bin):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Variable:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Id:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:geography:nk]>]]></run>
                <run fontcolor='#787878'>Æ  </run>
                <run bold='true'><![CDATA[<[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:id:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Percent Diff:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c1618y0pzcyy314fgtcd18xl11n].[cnt:Calculation_654147898635972608:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Control:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:control:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Diff:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:diff:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Result:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:result:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk] / ([federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk] / [federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk])) * [federated.0c1618y0pzcyy314fgtcd18xl11n].[cnt:Calculation_654147898635972608:qk])</rows>
        <cols>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Percent Diff (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[Percent Diff (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{8749F4F6-7F3C-4311-A411-6AADD5C4155D}' />
    </worksheet>
    <worksheet name='Pct Diff Histo'>
      <table>
        <view>
          <datasources>
            <datasource caption='summary_melt' name='federated.0c1618y0pzcyy314fgtcd18xl11n' />
          </datasources>
          <datasource-dependencies datasource='federated.0c1618y0pzcyy314fgtcd18xl11n'>
            <column caption='Abs Diff' datatype='real' name='[Calculation_425590201242845184]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs([diff])' />
            </column>
            <column caption='Percent Diff' datatype='real' default-format='p0.0%' name='[Calculation_654147898635972608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[diff]/[control]' />
            </column>
            <column aggregation='None' datatype='integer' name='[Percent Diff (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-2' formula='[Calculation_654147898635972608]' peg='0' size='0.01' />
            </column>
            <column-instance column='[Calculation_425590201242845184]' derivation='Attribute' name='[attr:Calculation_425590201242845184:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control]' derivation='Attribute' name='[attr:control:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diff]' derivation='Attribute' name='[attr:diff:qk]' pivot='key' type='quantitative' />
            <column-instance column='[result]' derivation='Attribute' name='[attr:result:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_654147898635972608]' derivation='Count' name='[cnt:Calculation_654147898635972608:qk]' pivot='key' type='quantitative' />
            <column caption='Control' datatype='real' name='[control]' role='measure' type='quantitative' />
            <column caption='Diff' datatype='real' name='[diff]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Percent Diff (bin)]' derivation='None' name='[none:Percent Diff (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column caption='Result' datatype='integer' name='[result]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:Calculation_425590201242845184:qk]' included-values='in-range'>
            <min>2.0</min>
          </filter>
          <filter class='categorical' column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;hh_size_1_gq&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]</column>
            <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:Calculation_425590201242845184:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <lod column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]' />
              <lod column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]' />
              <lod column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:control:qk]' />
              <lod column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:result:qk]' />
              <lod column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:diff:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Geography:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]> <[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percent Diff (bin):&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Percent Diff (bin):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Percent Diff:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c1618y0pzcyy314fgtcd18xl11n].[cnt:Calculation_654147898635972608:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Control/Result/Diff:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:control:qk]>/<[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:result:qk]>/<[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:diff:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0c1618y0pzcyy314fgtcd18xl11n].[cnt:Calculation_654147898635972608:qk]</rows>
        <cols>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Percent Diff (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Percent Diff (bin):qk]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{EF4D781C-9DDB-460C-B4A0-608FE037E9C5}' />
    </worksheet>
    <worksheet name='Raw'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</run>
            <run>&gt; Controls</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='summary_melt' name='federated.0c1618y0pzcyy314fgtcd18xl11n' />
          </datasources>
          <datasource-dependencies datasource='federated.0c1618y0pzcyy314fgtcd18xl11n'>
            <column caption='Percent Diff' datatype='real' default-format='p0.0%' name='[Calculation_654147898635972608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[diff]/[control]' />
            </column>
            <column caption='Variable Group' datatype='string' name='[Calculation_870039169981157376]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if(findnth([variable],&quot;_&quot;,2)==0) then&#13;&#10;  [variable]&#13;&#10;else&#13;&#10;  left([variable],findnth([variable],&quot;_&quot;,2)-1)&#13;&#10;end' />
            </column>
            <column-instance column='[Calculation_654147898635972608]' derivation='Avg' name='[avg:Calculation_654147898635972608:qk]' pivot='key' type='quantitative' />
            <column caption='Control' datatype='real' name='[control]' role='measure' type='quantitative' />
            <column caption='Diff' datatype='real' name='[diff]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_870039169981157376]' derivation='None' name='[none:Calculation_870039169981157376:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column caption='Result' datatype='integer' name='[result]' role='measure' type='quantitative' />
            <column-instance column='[control]' derivation='Sum' name='[sum:control:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diff]' derivation='Sum' name='[sum:diff:qk]' pivot='key' type='quantitative' />
            <column-instance column='[result]' derivation='Sum' name='[sum:result:qk]' pivot='key' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:control:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:result:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:diff:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[avg:Calculation_654147898635972608:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:control:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:result:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:diff:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]'>
            <groupfilter function='member' level='[none:geography:nk]' member='&quot;TAZ&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0c1618y0pzcyy314fgtcd18xl11n].[avg:Calculation_654147898635972608:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]</column>
            <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]' value='68' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]' value='52' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]</rows>
        <cols onLeft='true' total='true'>([federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk] / ([federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk] / [federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]))</cols>
      </table>
      <simple-id uuid='{364FBF2D-9B5D-4FBB-BB82-8B5376C3A425}' />
    </worksheet>
    <worksheet name='Summaries'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</run>
            <run>&gt; Controls</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='summary_melt' name='federated.0c1618y0pzcyy314fgtcd18xl11n' />
          </datasources>
          <datasource-dependencies datasource='federated.0c1618y0pzcyy314fgtcd18xl11n'>
            <column caption='Percent Diff StdDevP' datatype='real' default-format='p0.00%' name='[Average Percent Diff (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='STDEVP([Calculation_654147898635972608])' />
            </column>
            <column caption='Percent Diff' datatype='real' default-format='p0.0%' name='[Calculation_654147898635972608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[diff]/[control]' />
            </column>
            <column caption='Percent Diff Average' datatype='real' default-format='p0.0%' name='[Calculation_654147898733780993]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Calculation_654147898635972608])' />
            </column>
            <column caption='Percent Diff Min' datatype='real' default-format='p0.0%' name='[Calculation_654147898734182402]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Min([Calculation_654147898635972608])' />
            </column>
            <column caption='Variable Group' datatype='string' name='[Calculation_870039169981157376]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if(findnth([variable],&quot;_&quot;,2)==0) then&#13;&#10;  [variable]&#13;&#10;else&#13;&#10;  left([variable],findnth([variable],&quot;_&quot;,2)-1)&#13;&#10;end' />
            </column>
            <column caption='Percent Diff Max' datatype='real' default-format='p0.0%' name='[Percent Diff Min (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Max([Calculation_654147898635972608])' />
            </column>
            <column caption='Control' datatype='real' name='[control]' role='measure' type='quantitative' />
            <column caption='Diff' datatype='real' name='[diff]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_870039169981157376]' derivation='None' name='[none:Calculation_870039169981157376:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[Average Percent Diff (copy)]' derivation='User' name='[usr:Average Percent Diff (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_654147898733780993]' derivation='User' name='[usr:Calculation_654147898733780993:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_654147898734182402]' derivation='User' name='[usr:Calculation_654147898734182402:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Diff Min (copy)]' derivation='User' name='[usr:Percent Diff Min (copy):qk]' pivot='key' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[usr:Calculation_654147898733780993:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[usr:Average Percent Diff (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[usr:Calculation_654147898734182402:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[usr:Percent Diff Min (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[usr:Calculation_654147898733780993:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[usr:Average Percent Diff (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[usr:Calculation_654147898734182402:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[usr:Percent Diff Min (copy):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]' value='98' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]' value='128' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk] / ([federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk] / [federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]))</rows>
        <cols>[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{C2B3C95C-528D-4082-85E9-B3B32937B3DC}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Raw'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card mode='radiolist' param='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{06D6E99B-46A4-4544-9940-9C7BF4250ECD}' />
    </window>
    <window class='worksheet' name='Summaries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{026ED518-1921-4031-8A0C-3983F71BEEBA}' />
    </window>
    <window class='worksheet' name='Pct Diff Distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2BBCAAB-D4C3-4B0B-9073-B7AA18AD734D}' />
    </window>
    <window class='worksheet' name='Pct Diff Bars'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[io:Household Income:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{25295ACB-C244-40AB-9025-71937E04C3B8}' />
    </window>
    <window class='worksheet' name='Diff Histo'>
      <cards>
        <edge name='left'>
          <strip size='188'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:Calculation_425590201242845184:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='radiolist' param='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C3CF4F7-A79E-434E-A28F-7E3A3AAA498A}' />
    </window>
    <window class='worksheet' name='Pct Diff Histo'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:Calculation_425590201242845184:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='radiolist' param='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{54293E90-F17A-4407-89DE-918228520C78}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Diff Histo' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pct Diff Bars' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pct Diff Distribution' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Pct Diff Histo' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAKk0lEQVR4nO3dTW8bxx0G8IdcSiRFirIokRIphbQi2UoUxa6dFwRpgqBwgaIogrZAL/kA
      BXop0O9QoOeeei96yAdogZ6K9hS0RgPYsOFajmzHNCVSIkVKfFu+7C57UGXJDWmJNJczu/P8
      LkFIDv9z8OiZIf8aebrdbhdEivKKngCRSEMtANM0L/xawzAGfv9hxrCWmDHDjmu1WmOpc944
      X78nSoUMDG8MreoOLO8EKuVDJNJrmL8UGmoSRDLy9D8D1JDLAZNaFV6zgXowhW51D8lkApZl
      wePxXKiAZVnwegcLmmHGsJaYMcOO03UdwWDQ9jrnjeubAHu7RVR1DZ7OEabnEtBzj5BYWYem
      aQDw4r/nMQwDPl/fMiMbw1pixgw7TtM0KebX990WkpexAAB4AwCwGJsbuDBRPxf9AWo3fgpE
      QgzyQYqduABIaVwAJAS3QKQ0boGIJMAFQEJwC0RKk34LVCpksH+gI/NwCzq6uHfna1Qbg/dv
      EMms7xdh0VgUuZyJ6EwEJgxoXj8aDR1Tfh8sy8JFu6gtyxq4iWmYMawlZsyw43LFCv5+517P
      5764tQm/3z+W+Z3bCtEyq9C6Xfj8EwgEAmyFcHGtcc6veKTjz/982vO5L25t9nw/Qa0QRKMX
      mNSwEhffWTz4ciIagWbbxNP9uuhpcAGQGEwAUposCcDvAUhpTAASglsgUposWyAuABJC+gQ4
      uRWiWcggduUytu8/5K0QNDLSJ8DZVghDL2E2vQG9ugdzOsBWCJfWGuf8Jn2evglgmmbP9xPX
      CuGNoVnirRBurzXO+bWNbt8E6HdjhNhWiIXYwIWJ+pH+DEBkJ+nPAER2YgKQ0mRJALZCkNKY
      ACQEt0CkNFm2QFwAJIT0CXDSClEpPoE/Mo/DvSwuX93E9NR3f1mZaFDSJ8BJK0QgNIOuUeet
      EArUYivEGSetEFO+NoKhGeiNDm+FcHkttkKc8f+tEPPz8wMXJupH+jMAkZ2kPwMQ2YkJQEqT
      JQHYCkFKYwKQENwCkdJk2QJxAZAQ0idAqbADbyCGWun5cStEPovEyjrCAa4Zen3SJ0A0NoNc
      rg1ofjTzjxBMfA/lQh7BZIKtEC6txVaIM/Z291A81BDU6ghEEihnHiCRWmMrhItrsRXijIXk
      KhaSp/+/vLQ8cGGifqQ/AxDZSfozAJGdmACkNFkSgK0QpDQmAAnBLRApTZYtEBcACeGYBHj2
      5BuEo4s4yD1DIn2Ft0LQSDgmAZq6jlo+g3atDcvqwjRNtkK4tBZbIXoIhUPwTARR91TRbLUw
      Ew4AYCuEG2uxFaKH5fTqwAWJzuOYMwCRHRxzBiCyAxOAlCZLArAVgpTGBCAhuAUipcmyBeIC
      ICEckwDHrRALKOWe81YIGhnHJEBT11HbvouZtY94K4TLa7EVoodQOATP7DxKvBXC9bXYCtHD
      SSvEUjJ5ziuJLs4xZwAiO8hyBuAXYaQ0JgAJwS0QKU2WLRAXAAnBBCClMQFIaY5JgMzTbfin
      53BU2OGtEDQyjkmAarWCjseLOm+FcH0ttkL0eoFvAhq8CEVCvBXC5bXYCtHD+sa7AxckOo9j
      zgBEdpDlDMBWCFIaE4CE4BaIlCbLFogLgIRgApDSmACkNMckwHErRBSVQo63QtDIOCYBqtUK
      Oo1DBJeu81YIl9diK0SvF/gmoIXCKPNWCNfXYitED2yFIDs45gxAZAdZzgBshSClMQFICG6B
      SGmybIG4AEgIJgApjQlASnNMAnz7eAsefwSt6gFvhaCRcUwCJBfiKLUtlHK8FcLttdgK0cNh
      o4PFuRlUeCuE62uxFaKHeDwOALi6vj5wYaJ+HHMGILKDLGcAtkKQ0pgAJAS3QKQ0WbZAXAAk
      BBOAlMYEIKU5JgG+fbyFQCSGbruBeHIZmmcc0yK3c0wCpNNvIJvJwPDPI5vNYTkZZyuES2ux
      FaKH3d0ikstLuHP/CRLLKd4K4eJabIXoYSmVAgC8d/P6wIWJ+nHMGYDIDrKcAdgKQUpjApAQ
      Em6BWnjyYAdLG2+Cv/NFdpNlC3RmAWjYuncb28Usblx7H7FLU+JmRa4nYQJ00azrCIqbCylE
      wgSYwAeffYwnO3viZkPKkDABDDzc2oZ3UkPbOP2Wt1IuwNCmUC3uIrqY4q0QNBISJkATTR2I
      hH2olKtYmj9enVtbj7C6sYF8voxkeo23Qri4luKtEGH86Ce34PVPoNOyTh8Nh5HP5nApGkI2
      V8DK8vEvybMVwn21lG+F+Oqvf0EjOouNq+8jnZgBALy9yRYIcq+XFsDmjWu4u1tCODQpaj6k
      CAkPwUBgagL5TAara+9gLiJqSqQCCQ/BQOOwirp+hKNyA4hPi5oTKUDKBJiYnsNPf/4zGPqE
      qPmQIqRMAC86uH93G+/e/EjUfEgRUiYAvF3oTRPertXn5USjIWUCwPIiHNZQPmhgLsKuILKP
      lAlQLO5jL3eAtzfDLx47aYVoVcu8FYJGRsIEqOFv//ga3cAkPF3zxaNbW1tIxKMwpxLY2c1h
      aZG3Qri1lvKtEL/89a++84JYLAZD86O6n0EitcZbIVxcS/FWiBa+/MMfMbv5Ft478wsxl1f5
      hzFo9CQ8A/jx+S9+jNsPHgPei/10JxqWLGeAl26FMNodwGuhWtFFzYdorF7+Iswfwfc//RjV
      g46o+ZAiJNwCAf+5+2+U4MMHH34iaj6kCFm2QC8tgDdTiyjldXhwsY84iYYlZQL4whE8f3gb
      62tv8ZtgspWUCRCYnsWNd9KoNdgLRPaSMgG8XQP1jh+X46etEJmn2wjOxFDee45E+gpvhaCR
      kDIB9EoV1v8+Bo1Fjv+h12t1TE5Po15rw7K6vBXCxbUUb4Voo9yexGcfXkf24LTjLRSeQqve
      QigSQrPVwkw4AICtEG6spXgrhA87zx7i+TNg/eanLx5NrVwZuCDReSQ8A3jxyQ9+KG4mpBRZ
      zgD8AxmkNP6BDBJCwi0Q0fjIsgXiAiAhmACkNCYAKc0xCXDcCjGPw70dJFbWEQ5wzdDrc0wC
      1Gt1THo6CCauolzII5hMsBXCpbVGPT/DMHD3m1zPMcXDimytEL2FwlNoeSdRyTzgrRAurzXq
      +bVaLfzuy3/1HLMSD8nWCtHbi1aIVHrgwkT9fsonZgNjnklv3NCTrV61z5fhDMBWCFIaE4Bs
      xS0QKU32LRAXANmKCUBKYwKQ0hyfAHr1EEdtoLKf5a0QNDDHJ8B+6QhAi7dCKFBr1PMzTXOo
      BJCoFcKE0WyiaRi8FUKBWqOen6ZpQyWARK0QGlbX+QcyaHjDJECz2ez5uGmaiEQiI5nXCR6C
      yVbDJMBv//RVz+dW4iH8/jefj2xuAFshSHFMALLVMFugfs/Z8dEpFwDZatiPQcf1ESkXANmK
      CUBKYwKQ0hyfAFaniVoLqB8VEU8uQ/OcN4LolOMTILuTh9k8AKbTyGZzWE7G2Qrh0lqytEK8
      KgHG3gpRq1TQbLfQbewgsZzirRAuriVLK8Srnht7K8TGtWsDFyQ64fgzANHrkP0MwFYIUhoT
      gGzFLRApTfYtEBcA2YoJQEpjApDSHJ8A+ewzhKKLKOUziC6meCsEDcTxCdBFF4XCLgr5MpLp
      Nd4K4eJaKrZC/BdquJ1MK4nXrQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Raw' width='192'>
      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
      i37yh6oE9yK2a6H18Gqd8avVhqIompVgSZI0vwAmk6mn/v2uo5/8cUwJblQK/P7eA7JHu6Ty
      NQbC3Y0YOksJbn3917/+NaOjoxSLRf75n/8Zi8XCV199pRLZVhhy2u4tyzK/+tWvmJiYIJvN
      8vOf/xyn08nq6iobGxtqElSnSnALv/3tb9nf32doaOhcJfjw8JC7d+/i8/loNBr84he/YGtr
      qydK8Ndff029Xu9aCRZFka+++gpRFLsm0q2a516R4E5TIQRB4OHDh+zs7LCxscHIyEjHp3qL
      SMfjcdbX1xkZGXn5bLz6IYvDg9tuIhKKnKvGakGrWVEr5WFgYACj0cjo6CjLy8sUi8W2bcDL
      xliDg4Oq2JNKpVhbW+t6fRsbGwiC0BEJnpqaIpvN8uzZMxqNBlNTUxweHvLkyZOu19ELEixJ
      EgMDAz0hwVrqirVAp9Ph9XqJRCJ0q1m1nhe/36/eUsIJc4J1GNCZbFy7dv6E9G7RKn5fWVkh
      FArxve99j0KhgE6n4yc/+Yk6ZO4siKKIXq9nfn6eaDTKrVu3ODw8xGQy8dlnn2nSD65cuaIO
      324HV69eZWFhgUgkwszMjEqCe6EEm81mTXOCW5msWgjs0NAQ6+vrmtKytUAURcrlMsPDw0Qi
      ka5OIUEQKBaLDA8PH4tOVBKsZZd5Hf2UDt0PjbH6ifT1A/rJH+rTJQgCiiKTOEjg9bqpNhWC
      PndXRs9SgnO5HAaDgVKphMvlQq/Xqy3rcrkcHo8HvV6vPvgn7eStHTafz+P1erFYLGQyGYxG
      I7VaDbvdrl6F6vX6tpLaJEmiUqmolUyNRgOLxaLG/2e9AIqicHh4yMDAAOVyWU08c7vdqibR
      7S1bJpPB5XJpir3T6TQej6frGzVFUUgmk4TDYU0bQQvt+kNRFIrFIm63m4ODA/x+P7lcrqM2
      j6/baE0lbXXaOLa97i48Yb1kwLyxRjJf4e/+1/+lw1/tfFSrVRYXFymVSvz4xz/GbDazsbHB
      5uYmkUiEUqkEfHMXfxIqlQqPHz+mWCzyk5/8hPX1dRYXF/nRj37E0tISgiBgMpn40Y/ar2mu
      VCrMzc1x7do1NWPQbDafW5sMsL29TTKZVO+oHz9+jCiKOBwObt++3XXuuyRJ7O/vYzKZuH69
      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
      2+0yEvx/5LByaCF0MooAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Summaries' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
