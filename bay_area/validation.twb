<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0627.2230                               -->
<workbook original-version='10.5' source-build='2018.2.0 (20182.18.0627.2230)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='summary_melt' inline='true' name='federated.0c1618y0pzcyy314fgtcd18xl11n' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='summary_melt' name='textscan.1pnhni109lpp0v1c9n81r1sx10ir'>
            <connection class='textscan' directory='C:/Users/lzorn/Documents/populationsim/bay_area/output_2010' filename='summary_melt.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1pnhni109lpp0v1c9n81r1sx10ir' name='summary_melt.csv' table='[summary_melt#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='geography' ordinal='0' />
            <column datatype='integer' name='id' ordinal='1' />
            <column datatype='string' name='variable' ordinal='2' />
            <column datatype='real' name='control' ordinal='3' />
            <column datatype='integer' name='result' ordinal='4' />
            <column datatype='real' name='diff' ordinal='5' />
            <column datatype='string' name='type' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[summary_melt.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geography</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geography]</local-name>
            <parent-name>[summary_melt.csv]</parent-name>
            <remote-alias>geography</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[summary_melt.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variable</remote-name>
            <remote-type>129</remote-type>
            <local-name>[variable]</local-name>
            <parent-name>[summary_melt.csv]</parent-name>
            <remote-alias>variable</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>control</remote-name>
            <remote-type>5</remote-type>
            <local-name>[control]</local-name>
            <parent-name>[summary_melt.csv]</parent-name>
            <remote-alias>control</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result</remote-name>
            <remote-type>20</remote-type>
            <local-name>[result]</local-name>
            <parent-name>[summary_melt.csv]</parent-name>
            <remote-alias>result</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diff]</local-name>
            <parent-name>[summary_melt.csv]</parent-name>
            <remote-alias>diff</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[summary_melt.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Percent Diff StdDevP' datatype='real' default-format='p0.00%' name='[Average Percent Diff (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='STDEVP([Calculation_654147898635972608])' />
      </column>
      <column caption='Abs Diff' datatype='real' name='[Calculation_425590201242845184]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='abs([diff])' />
      </column>
      <column caption='Percent Diff' datatype='real' default-format='p0.0%' name='[Calculation_654147898635972608]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[diff]/[control]' />
      </column>
      <column caption='Percent Diff Average' datatype='real' default-format='p0.0%' name='[Calculation_654147898733780993]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Calculation_654147898635972608])' />
      </column>
      <column caption='Percent Diff Min' datatype='real' default-format='p0.0%' name='[Calculation_654147898734182402]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Min([Calculation_654147898635972608])' />
      </column>
      <column caption='Variable Group' datatype='string' name='[Calculation_870039169981157376]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if(findnth([variable],&quot;_&quot;,2)==0) then&#13;&#10;  [variable]&#13;&#10;else&#13;&#10;  left([variable],findnth([variable],&quot;_&quot;,2)-1)&#13;&#10;end' />
      </column>
      <column aggregation='None' datatype='integer' name='[Diff (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[diff]' peg='0' size='1' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='integer' name='[Percent Diff (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-2' formula='[Calculation_654147898635972608]' peg='0' size='0.01' />
      </column>
      <column caption='Percent Diff Max' datatype='real' default-format='p0.0%' name='[Percent Diff Min (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Max([Calculation_654147898635972608])' />
      </column>
      <column caption='Control' datatype='real' name='[control]' role='measure' type='quantitative' />
      <column caption='Diff' datatype='real' name='[diff]' role='measure' type='quantitative' />
      <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Result' datatype='integer' name='[result]' role='measure' type='quantitative' />
      <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
      <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
      <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.473684' measure-ordering='alphabetic' measure-percentage='0.526316' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:variable:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;hh_size_4_plus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;gq_num_hh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;hh_inc_15&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;hh_inc_30&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;pers_occ_manual&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;gq_num_hh_county&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;hh_inc_100_plus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;hh_no_kids&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;pers_occ_services&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;gq_type_univ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;hh_wrks_2&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;hh_kids_no&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;hh_with_kids&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;hh_size_1&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;pers_age_65_plus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;hh_inc_15_30&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;pers_occ_military&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;hh_kids_yes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;pers_age_20_39&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;hh_size_2&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;hh_wrks_3_plus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;num_hh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;pers_age_35_64&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;pers_age_20_34&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;pers_occ_management&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;gq_type_othnon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;hh_wrks_0&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;hh_size_3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;gq_type_mil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;hh_inc_30_60&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;pers_occ_professional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;pers_age_00_19&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;hh_wrks_1&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;hh_inc_60_100&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;hh_inc_60_plus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;pers_occ_retail&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:geography:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;MAZ&quot;</bucket>
            <bucket>&quot;TAZ&quot;</bucket>
            <bucket>&quot;COUNTY&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Diff Histo'>
      <table>
        <view>
          <datasources>
            <datasource caption='summary_melt' name='federated.0c1618y0pzcyy314fgtcd18xl11n' />
          </datasources>
          <datasource-dependencies datasource='federated.0c1618y0pzcyy314fgtcd18xl11n'>
            <column caption='Abs Diff' datatype='real' name='[Calculation_425590201242845184]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs([diff])' />
            </column>
            <column aggregation='None' datatype='integer' name='[Diff (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[diff]' peg='0' size='1' />
            </column>
            <column-instance column='[Calculation_425590201242845184]' derivation='Attribute' name='[attr:Calculation_425590201242845184:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diff]' derivation='Count' name='[cnt:diff:qk]' pivot='key' type='quantitative' />
            <column caption='Control' datatype='real' name='[control]' role='measure' type='quantitative' />
            <column caption='Diff' datatype='real' name='[diff]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Diff (bin)]' derivation='None' name='[none:Diff (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column caption='Result' datatype='integer' name='[result]' role='measure' type='quantitative' />
            <column-instance column='[control]' derivation='Sum' name='[sum:control:qk]' pivot='key' type='quantitative' />
            <column-instance column='[result]' derivation='Sum' name='[sum:result:qk]' pivot='key' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:Calculation_425590201242845184:qk]' included-values='in-range'>
            <min>0.0</min>
          </filter>
          <filter class='categorical' column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;pers_age_00_19&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]</column>
            <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:Calculation_425590201242845184:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <lod column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]' />
              <lod column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]' />
              <lod column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:control:qk]' />
              <lod column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:result:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Diff (bin):&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Diff (bin):qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Geography:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]&gt; &lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Control:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:control:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Result:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:result:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0c1618y0pzcyy314fgtcd18xl11n].[cnt:diff:qk]</rows>
        <cols>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Diff (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Diff (bin):qk]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Pct Diff Bars'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</run>
            <run>&gt; Controls</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='summary_melt' name='federated.0c1618y0pzcyy314fgtcd18xl11n' />
          </datasources>
          <datasource-dependencies datasource='federated.0c1618y0pzcyy314fgtcd18xl11n'>
            <column caption='Percent Diff' datatype='real' default-format='p0.0%' name='[Calculation_654147898635972608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[diff]/[control]' />
            </column>
            <column caption='Variable Group' datatype='string' name='[Calculation_870039169981157376]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if(findnth([variable],&quot;_&quot;,2)==0) then&#13;&#10;  [variable]&#13;&#10;else&#13;&#10;  left([variable],findnth([variable],&quot;_&quot;,2)-1)&#13;&#10;end' />
            </column>
            <column-instance column='[id]' derivation='Attribute' name='[attr:id:qk]' pivot='key' type='quantitative' />
            <column caption='Control' datatype='real' name='[control]' role='measure' type='quantitative' />
            <column caption='Diff' datatype='real' name='[diff]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_870039169981157376]' derivation='None' name='[none:Calculation_870039169981157376:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column caption='Result' datatype='integer' name='[result]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_654147898635972608]' derivation='Sum' name='[sum:Calculation_654147898635972608:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control]' derivation='Sum' name='[sum:control:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diff]' derivation='Sum' name='[sum:diff:qk]' pivot='key' type='quantitative' />
            <column-instance column='[result]' derivation='Sum' name='[sum:result:qk]' pivot='key' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;num_hh&quot;</bucket>
              <bucket>&quot;gq_num&quot;</bucket>
              <bucket>&quot;gq_type&quot;</bucket>
              <bucket>&quot;hh_inc&quot;</bucket>
              <bucket>&quot;hh_kids&quot;</bucket>
              <bucket>&quot;hh_size&quot;</bucket>
              <bucket>&quot;hh_wrks&quot;</bucket>
              <bucket>&quot;pers_age&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;MAZ&quot;</bucket>
              <bucket>&quot;TAZ&quot;</bucket>
              <bucket>&quot;COUNTY&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]' field-type='quantitative' major-origin='0.0' major-spacing='0.25' max='1.0' min='-1.0' minor-origin='0.0' minor-spacing='0.050000000000000003' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]' scope='cols' value='true' />
            <format attr='height' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]' value='42' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]' value='39' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='solid' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline1' value='false' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='solid' />
            <format attr='stroke-size' id='refline1' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:control:qk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:result:qk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:diff:qk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:id:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]' z-order='1' />
            <reference-line axis-column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='stdev' id='refline1' label-type='none' scope='per-cell' symmetric='false' type='sample' value-column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]' z-order='2'>
              <reference-line-value factor='-1' />
              <reference-line-value factor='1' />
            </reference-line>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Variable Group:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Variable:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]&gt;</run>
                <run>&#10;Id:&#9;&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:id:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Control:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:control:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Result:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:result:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Diff:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:diff:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percent Diff:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk] / ([federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk] / [federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]))</rows>
        <cols>[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Pct Diff Distribution'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</run>
            <run>&gt; Controls</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='summary_melt' name='federated.0c1618y0pzcyy314fgtcd18xl11n' />
          </datasources>
          <datasource-dependencies datasource='federated.0c1618y0pzcyy314fgtcd18xl11n'>
            <column caption='Percent Diff' datatype='real' default-format='p0.0%' name='[Calculation_654147898635972608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[diff]/[control]' />
            </column>
            <column caption='Variable Group' datatype='string' name='[Calculation_870039169981157376]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if(findnth([variable],&quot;_&quot;,2)==0) then&#13;&#10;  [variable]&#13;&#10;else&#13;&#10;  left([variable],findnth([variable],&quot;_&quot;,2)-1)&#13;&#10;end' />
            </column>
            <column aggregation='None' datatype='integer' name='[Percent Diff (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-2' formula='[Calculation_654147898635972608]' peg='0' size='0.01' />
            </column>
            <column-instance column='[geography]' derivation='Attribute' name='[attr:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[id]' derivation='Attribute' name='[attr:id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_654147898635972608]' derivation='Count' name='[cnt:Calculation_654147898635972608:qk]' pivot='key' type='quantitative' />
            <column caption='Control' datatype='real' name='[control]' role='measure' type='quantitative' />
            <column caption='Diff' datatype='real' name='[diff]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_870039169981157376]' derivation='None' name='[none:Calculation_870039169981157376:nk]' pivot='key' type='nominal' />
            <column-instance column='[Percent Diff (bin)]' derivation='None' name='[none:Percent Diff (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column caption='Result' datatype='integer' name='[result]' role='measure' type='quantitative' />
            <column-instance column='[control]' derivation='Sum' name='[sum:control:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diff]' derivation='Sum' name='[sum:diff:qk]' pivot='key' type='quantitative' />
            <column-instance column='[result]' derivation='Sum' name='[sum:result:qk]' pivot='key' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Percent Diff (bin):qk]' field-type='quantitative' max='1.0' min='-1.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Percent Diff (bin):qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Percent Diff (bin):qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]' value='104' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:control:qk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:diff:qk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:result:qk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:geography:nk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:id:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Variable Group:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percent Diff (bin):&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Percent Diff (bin):qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Variable:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Id:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:geography:nk]&gt;</run>
                <run fontcolor='#787878'>Æ  </run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:id:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Percent Diff:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[cnt:Calculation_654147898635972608:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Control:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:control:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Diff:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:diff:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Result:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:result:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk] / ([federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk] / [federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk])) * [federated.0c1618y0pzcyy314fgtcd18xl11n].[cnt:Calculation_654147898635972608:qk])</rows>
        <cols>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Percent Diff (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[Percent Diff (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Pct Diff Histo'>
      <table>
        <view>
          <datasources>
            <datasource caption='summary_melt' name='federated.0c1618y0pzcyy314fgtcd18xl11n' />
          </datasources>
          <datasource-dependencies datasource='federated.0c1618y0pzcyy314fgtcd18xl11n'>
            <column caption='Abs Diff' datatype='real' name='[Calculation_425590201242845184]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs([diff])' />
            </column>
            <column caption='Percent Diff' datatype='real' default-format='p0.0%' name='[Calculation_654147898635972608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[diff]/[control]' />
            </column>
            <column aggregation='None' datatype='integer' name='[Percent Diff (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-2' formula='[Calculation_654147898635972608]' peg='0' size='0.01' />
            </column>
            <column-instance column='[Calculation_425590201242845184]' derivation='Attribute' name='[attr:Calculation_425590201242845184:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control]' derivation='Attribute' name='[attr:control:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diff]' derivation='Attribute' name='[attr:diff:qk]' pivot='key' type='quantitative' />
            <column-instance column='[result]' derivation='Attribute' name='[attr:result:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_654147898635972608]' derivation='Count' name='[cnt:Calculation_654147898635972608:qk]' pivot='key' type='quantitative' />
            <column caption='Control' datatype='real' name='[control]' role='measure' type='quantitative' />
            <column caption='Diff' datatype='real' name='[diff]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Percent Diff (bin)]' derivation='None' name='[none:Percent Diff (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column caption='Result' datatype='integer' name='[result]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:Calculation_425590201242845184:qk]' included-values='in-range'>
            <min>2.0</min>
          </filter>
          <filter class='categorical' column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;pers_age_00_19&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]</column>
            <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:Calculation_425590201242845184:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <lod column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]' />
              <lod column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]' />
              <lod column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:control:qk]' />
              <lod column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:result:qk]' />
              <lod column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:diff:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Geography:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]&gt; &lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percent Diff (bin):&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Percent Diff (bin):qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Percent Diff:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[cnt:Calculation_654147898635972608:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Control/Result/Diff:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:control:qk]&gt;/&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:result:qk]&gt;/&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:diff:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0c1618y0pzcyy314fgtcd18xl11n].[cnt:Calculation_654147898635972608:qk]</rows>
        <cols>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Percent Diff (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Percent Diff (bin):qk]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Raw'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</run>
            <run>&gt; Controls</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='summary_melt' name='federated.0c1618y0pzcyy314fgtcd18xl11n' />
          </datasources>
          <datasource-dependencies datasource='federated.0c1618y0pzcyy314fgtcd18xl11n'>
            <column caption='Percent Diff' datatype='real' default-format='p0.0%' name='[Calculation_654147898635972608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[diff]/[control]' />
            </column>
            <column caption='Variable Group' datatype='string' name='[Calculation_870039169981157376]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if(findnth([variable],&quot;_&quot;,2)==0) then&#13;&#10;  [variable]&#13;&#10;else&#13;&#10;  left([variable],findnth([variable],&quot;_&quot;,2)-1)&#13;&#10;end' />
            </column>
            <column-instance column='[Calculation_654147898635972608]' derivation='Avg' name='[avg:Calculation_654147898635972608:qk]' pivot='key' type='quantitative' />
            <column caption='Control' datatype='real' name='[control]' role='measure' type='quantitative' />
            <column caption='Diff' datatype='real' name='[diff]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_870039169981157376]' derivation='None' name='[none:Calculation_870039169981157376:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column caption='Result' datatype='integer' name='[result]' role='measure' type='quantitative' />
            <column-instance column='[control]' derivation='Sum' name='[sum:control:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diff]' derivation='Sum' name='[sum:diff:qk]' pivot='key' type='quantitative' />
            <column-instance column='[result]' derivation='Sum' name='[sum:result:qk]' pivot='key' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:control:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:result:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:diff:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[avg:Calculation_654147898635972608:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:control:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:result:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:diff:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]'>
            <groupfilter function='member' level='[none:geography:nk]' member='&quot;TAZ&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <rows>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.0c1618y0pzcyy314fgtcd18xl11n].[avg:Calculation_654147898635972608:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </rows>
          <slices>
            <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]</column>
            <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]' value='68' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]' value='52' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]</rows>
        <cols onLeft='true' total='true'>([federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk] / ([federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk] / [federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='Summaries'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</run>
            <run>&gt; Controls</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='summary_melt' name='federated.0c1618y0pzcyy314fgtcd18xl11n' />
          </datasources>
          <datasource-dependencies datasource='federated.0c1618y0pzcyy314fgtcd18xl11n'>
            <column caption='Percent Diff StdDevP' datatype='real' default-format='p0.00%' name='[Average Percent Diff (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='STDEVP([Calculation_654147898635972608])' />
            </column>
            <column caption='Percent Diff' datatype='real' default-format='p0.0%' name='[Calculation_654147898635972608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[diff]/[control]' />
            </column>
            <column caption='Percent Diff Average' datatype='real' default-format='p0.0%' name='[Calculation_654147898733780993]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Calculation_654147898635972608])' />
            </column>
            <column caption='Percent Diff Min' datatype='real' default-format='p0.0%' name='[Calculation_654147898734182402]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Min([Calculation_654147898635972608])' />
            </column>
            <column caption='Variable Group' datatype='string' name='[Calculation_870039169981157376]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if(findnth([variable],&quot;_&quot;,2)==0) then&#13;&#10;  [variable]&#13;&#10;else&#13;&#10;  left([variable],findnth([variable],&quot;_&quot;,2)-1)&#13;&#10;end' />
            </column>
            <column caption='Percent Diff Max' datatype='real' default-format='p0.0%' name='[Percent Diff Min (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Max([Calculation_654147898635972608])' />
            </column>
            <column caption='Control' datatype='real' name='[control]' role='measure' type='quantitative' />
            <column caption='Diff' datatype='real' name='[diff]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_870039169981157376]' derivation='None' name='[none:Calculation_870039169981157376:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[Average Percent Diff (copy)]' derivation='User' name='[usr:Average Percent Diff (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_654147898733780993]' derivation='User' name='[usr:Calculation_654147898733780993:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_654147898734182402]' derivation='User' name='[usr:Calculation_654147898734182402:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Diff Min (copy)]' derivation='User' name='[usr:Percent Diff Min (copy):qk]' pivot='key' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[usr:Calculation_654147898733780993:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[usr:Average Percent Diff (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[usr:Calculation_654147898734182402:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[usr:Percent Diff Min (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[usr:Calculation_654147898733780993:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[usr:Average Percent Diff (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[usr:Calculation_654147898734182402:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[usr:Percent Diff Min (copy):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]' value='98' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]' value='128' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk] / ([federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk] / [federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]))</rows>
        <cols>[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Raw'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card mode='radiolist' param='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Summaries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Pct Diff Distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Pct Diff Bars'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[io:Household Income:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Diff Histo'>
      <cards>
        <edge name='left'>
          <strip size='188'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:Calculation_425590201242845184:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='radiolist' param='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Pct Diff Histo'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:Calculation_425590201242845184:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='radiolist' param='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Diff Histo' width='192'>
      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
      r5MWgCbV/H8jEaqSPhUpLgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Pct Diff Bars' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2daZfcxr3efwC6gd737tk37hSpXVas3Di+13Fu/PH8UfLCJ+ck5yT32pbi
      aLMsiuLO2Xub3hd0N9bKiyZH5JAUZyi2ZijU7xyemQEKf1SDeFCoqqfrrwghBBJJQFFPuwIS
      yWkiBSAJNFIAkkAjBSAJNFIAkkAjBSAJNFIAkkAjBSAJNKHTOnGn00HOwR0P3/dR1dk9q4QQ
      KIoSyPjK0Zlg4fvYto1QFHRdx/c8QpqG7dj4PuiGgTq7zyJ5Du12m1wuN7P4juMQDocDGf+Z
      x4rnTPjHV5/x5T/uYI2G/PXPf2XkCaq7W/z53/6M5f/k+kokZ4ZnWgCAVm0HJ5RHdxr0LAVF
      T1EwLDpelJVS5jTqGWhkCzC7+D/aByhXqow9FU/t8aBVpji/RimfwdBe6VwSyZnjuQLIza0C
      UMr9GlVV8H2B5701PeA198XGoxFGLIZwbVxfwdBn96RwHQsfDT2sMRpNiMWirxBFMOy28PUU
      qZj+2uso+Xl5rgAe96gf/1RVZWajEPX9HZxQhEImQXm/TmlljVI2CYBnj9jcqbK2mKU+hEmv
      QTI3j+b0EZHMYbnjMhp02as2mVte4WBni2imyPrqIgrTkYTK7iaR7AKjfhsdl6GrsZBPUu+M
      WFtZnHb+fZ+eOcAbClKx4uu/ICfE8iboqjGzURbP9/CEh649LXYhBJY/IaK9ykPkZDi+jYqK
      poam5/UmKIpCSAljugNCIszYNvGFT0SLYvs2tm+hKiqu75AKZxh7JiPXBBSE8NHUEK7vnt4w
      6GM8zyOiqzS7HUKRGK169fDG7tUrVA4azKVD9OwMKdXHGbf5+sZdIqk8//KbX51sIkP4hKMJ
      mtUKnlDwex1MFkkAYPPw/hYrV1OY/T6rczla7QnfffMFnYlCMpOnkDJA1SgVCtQak9d/MV6B
      2qjMUnyVkDKblnPsjRg6feZjS09tFwgq5h7nUpdmct4n6VgtIlqMlJ4GoDLaJazqZI0Ct7s3
      WI2dozLew/LGzMeW6Fgt2lYLXdMxnSHXc++z2b9HY1JDRcUTLroWwfYmz+8E/5zUymVSqRTt
      YZdoJMNk2EHBx/YUdA22tre4eOECHUuw//AB5y6ep1EuE8vN89bljRMJwOx1cFQDs98EdGJ4
      jI0Q9nCMHo3Q2NlCzS4RC7l0qzuoqUXiypjeRGFxoYBjO4SMCN3aNo2e4JPffELkZ+gPyU7w
      7OKfugCOInyfTruJ60M8lSEeme17ttnvYk5sQnqUXObFr1TmoIc5ttD0CPlMaqZ1OooUwOzi
      n/or0FEUVSVXKP1s54unMsSPcT/Hk2niJ+tySN4ApBdIEmikACSBRgpAEmikACSBRgpAEmik
      ACSBRgpAEmikACSBJlACGHSatHpDwGN7e++F5drt9gv3Cc/l9o2v+cunX+LOoI6Sn5czNxM8
      S4Rvc/vmbRK5Ek63zt72Pr/650+IAEJY/M///j+4/OvfYg2aDJr73KuYzCdcbu92+P2//oFc
      QgdVY23jHGq9i/xaxJtHp/YPIol5Qnqcbv1GsFoAlBCX336fdFQlv7DGldU5nMOdKgtLczQa
      TVzXxRxNWF9fw3J8zm+sE370qBCezXc3b2PoBvLboW8e6eI1IrEioXCc/OKvzp4Zbpb4notA
      xfddQEEFKvub1Jp9YukCi/kERiKDpviMh31cESYZ1+kPJ0wGTWrNHkYyx1Ihiedr5Ev5n6UV
      kGa42cUPlADeVKQAZhc/WK9AEskRpAAkgUYKQBJopAAkgUYKQBJopAAkgUYKQBJopAAkgSZQ
      ApiYA4YjC/BpNl9seBsMBi/cJzyXO999w99v3kPOIL75BMoMZ0+G3Lq7RWF5nX5lm+3dFO99
      cJ0QIITLza//Tm7tMt6kT7u2R7XncH4py35jyFtXr2CEVVA1inMlNvdaCECmSjhdfKsJQoXw
      82fKfasBWhRFCeE7HRRFAy0OwsG3DoIlABSV9UvXMHt1kvl50opgDEyX+xG4nk+/38ezBiyX
      skRyce59+xlEc5iWgxE2pssr6lEMfBzAONUPJEENg/fj+xVFBUVFUXVAnf5NCEWLBUsARjRB
      SAljaAVAw8CnvnWXO80+sXQOw9BJJBIYqQjV/S3scIYLl69SbgzpVLd42B2gx1Po7gglnmZ2
      7hbJcVHDabwnPL3P7v8hn4Wi55/ap4US0gz3JiDNcLOLH6hOsERyFCkASaCRApAEGikASWCp
      1+tSAJLgcv/+fSkASbCRApAEGikASaAJlABcx8ZxPUAwGb96lkfhey80001GJp6cWnxjCJQV
      YjToUG30KS0uUN/ZJpEvsbRQOswTfFDdw0iVGPZbRDQYuxqFTIx2f8LCfGmaJxg42H/I7X2T
      fy48np31OahWUYwkw8YuueVzJAwdy/UYdhroiTyZ5Ozz6Z5FJo6D5TikZzQTbNoWwvMJh8OY
      toWCQkzXGdk2RijEwLIQQuAJHwTYnosvBBPHYa/bCZYAED4+CtX9fVzHxazVMBdKh3mCb924
      xfo7Mcxuj6VCinZvSOXhDQ4GHp/85ncUUgbuZMDD/Raq42J7oGvTY6u1DqraIBwOcVDeRCkt
      snPQob2/zfKldwIrgP1ul954xIerazOJf7deJx4Oczka5Ua5jKaqfLy2zq1alQvFIv92/x6u
      7zN2bDxf0BuPsFyPg+GA3e9vBcsLZPba2EoEs9cAwsTxsJMx/LFNyAhTvn8P0gvEwx692i5q
      aokYJgNbY2VlAeF5qJoGvsfeXoWNjTVsx0GPhrn55T+IFxcopnQ0TbC3f0C8tAr9Cn6sxHtX
      z71yvaUXaDbxP/3002AJ4Hn02w36I4twJM5cIfvicp0mfXNCyIgxX8wBgm6zwXBiY8SiaITJ
      5WaTP1gKYDbxP/3004C9Aj2HVK5I6hj3VipbIPWUPhQyhRKZFx0geSMI1CiQRHIUKQBJoDm1
      VyDfl6vrHxchxEyvV5Djn5oA+v0+Ae9/H5vRaISqzq6x9jwPTZtdpoOzGP9Pf/oT77///ukJ
      IJOR3cfjIoQgm33xCNVP5ayO0swyfqvVIhQKyT6AJNhIAUgCjRSAJNCcugDKu7u4wHjYodHq
      v/yAUZPdpvlK5xp2m7R7JuCxu1s+1jG7u7vP3S58h6/+9imf//2m7My/wZz6TPCo2+DzvTIL
      y3OUt/fYzy/y/vWLANR2tkAP0Rj5JFRBr7FPOpujNvBR3QLb39+gcO5trmwsHOtcvmdz69Zt
      koV57HaV3e09PvrPv57mCfZMtve61GtlFhdK+NaItq0RcoeMbQ910qI60PiPn0xHDjyvT27+
      LVyniRCgvGFrJI5vfIdx4TxqLHai47xOB7fRwLh0aUY1myIch9EXX6Im4kTffRe33cZrtTAu
      Xny2Tq0W/nCIceHCC+PZW1t4zRb23h6R69cIf/kVoXTm9FsAI5Hl3WtXEfhcfOtdMrEfhrNK
      pQQ3HzQwhhVENE8iN8/6YgHh2jieQqFUoN1uHv9kj/IEpwzIL6xxebn0w5piaox+5S6pbI6D
      gUUorHP1yiVCisCyHZKZPGLSxbQfFVei9Np7DMzxG7lAqHHlMkokcuLj1FQKfX1jBjU6QihE
      9MMPMK5cAUBLp9HX159bVMtm0dd+3G0aXl7GePs6if/6e/T1ddy3r+O+9+7pm+Fsy0ILhXA9
      F1UN4dkTHty7xdiB5Y3LJAyFkKIQisXxHRsjrGJ5Kp4zYWIOUCMpMsnjPcU810UoCp47zROs
      IahWth/lCS6ytpgnFjEwLZ9IWEELGzi2BcLDcRwGYwerW6fRG5EqLLKQMRDhBOnEyW+kkyDN
      cK8//h//+Ef+8Ic/nP4rkG5Ml5d9PJERDsW5/t6vnl/4UVlDBcJxYrH4ic6lhaYfN/TEpMnK
      xmVWjjzQkk9cFePxOSOQSAKlAusnOqvkLHPqr0ASyWkiBSAJNFIAkkAjBSAJJO+88w5LS0un
      3wmWSE6D3/3ud4BsASQBRwpAEmikACSBJlACmIyGmONpnuBWq3OsY1rt1nO3C+Gz9/Amjf6L
      E7RJzj6B6gTb4wG3721TXFmnV95mZy/Fu+9dQwOEN6LVE/S7dbKZNL7r0OyNUFUf13bAt6i1
      Jlx7+/Kji6ZQyMWpmR7FlMwX+UK6jx40ugHHMd4JAZ025J7O6IhlgW1DMvn0dtNEEQIeWyE8
      FwZDeNk3DjsdSCaD1QKAyuqFq4jJgHi2xFLCYHS4K0Jj51vqLZNyvcmg26a0tEK/tkOtb+Pb
      FtZ4gOVOiyuKcmiTkPwYCid3Cz6n/LHDKMcr96jMqZvhfk4moyGeEsYaD5jmCRbUew1aj8xw
      Cc2lNJen0nMpxjRi6Rz9bgvPnuB6LrXWgISu0B2MSOZKOJ0yfT/Jf/jVdUIz9ENLM9zs4gdK
      AG8qUgCzix+wVyCJ5GmkACSBRgpAEmikACSBRgpAEmikACSBRgpAEmikACSBJlACeNIM1/7J
      ZjiP+99/y3d3NuXKcG8wwTPD3d+muLxBr7LF9l6ad9976ykz3KBbJ5NN4ztPmuFcFH9C9YgZ
      bnnjIpvbOwjO1tpY7VaTWDxB5BUWvmq3WsRiMSLR2aR1rVerhMIhLMtCVVTmFxepVsrMLyyi
      nNBOUqtUKM3PH/5d2d9HVVVK8/M06nWKc3Mc1GooqkK/26Xb6fDuhx/h2Dbl/T1S6XSwWgBQ
      WT1/BTHpE0+XWEroz5jhai2Tcu2oGc7CtS2syfDQDIcQVMr7rG2cR33T1kX8EWb9Sc5aWxko
      L9ChGW702AznU+83D81wcdVlbv6xGU4lls7T67bwrAme51JrP2GGy+bo1+soiSwfvXPlxE+v
      kyC9QLOLHygBvKlIAcwufsBegSSSp5ECkAQaKQBJoAnUMKjkdDFNk3a7TTqdfu2xx+PxKx0n
      BSD52Wg0Gnz++ee8++67rzVuNBp9ZQHIVyBJoJECkAQaKQBJoAmUADzXwXU9QGBZ9rGOsSzr
      uduF8GnUKrS6w+dO70/GkzM37S95lkAJwOx32NndYzAas/3wIQfNzuFNKnwXy/YwTRPbtrEt
      i16vx165jDWZMBkPqTfa+I+DCQ/X9bl37+4PblDfodlo0Dcn7D7cZDSx8DwX27ZpHdQZWbNf
      RtHzXIQQeJ43E5fq4/hHmZ7Tfc4Rz5YTvv/0Nt/Hf0l9hRD4R47zXBff9/A8d3q87+P7Pp7r
      4joOruPguQ6OZb3wX7BGgYTLaDRmZ3sXbzyivrVNvJBlmmrPY2fzIdWDPgvzOVR3hBefo1/d
      YeyqRKwG1aFGtpBDV0BRQ3j2ADUc/cFAZjbZrI8IOTViYY2dBw9ZXi5Sa3TZvv+Aax//EzFj
      tssodlst0tkcvW6HVCb72i0Ij+OHjsT1XJdep02+NPejx/uehz2ZYDyxTKJjW1jjMYlM9oXH
      Cd/HnoyJxBOH24bdDrph4FkTLNtGNyJ4ros1HuE6NgiBqoWwx6Ppg04BHuV0FmL6Z6AEoGoG
      SyurDHsHkEiSwGNsDrAsBy1sMO62uXRhjXLXZiWVI7OwQI0xk/GYaCqH19ih0+kTxkVTfQ7a
      Q2xPY9Dv4noCw7Potg4o5POEwwr4Y767eZfi8hrZVIxOb8BSITXTz/j4BswXSzONf5RQOPzS
      mx+mmTqNI2uE6pEoeuTH7deqpj118wOkC0Xg2WHQaOLI+qE/QuDNcO2DCu3+CCOWZmWx+JLS
      gkZln97IIpbKsViaGtSqe1uYlkcybqAl5ygk9Ndbx1+IGW57e/vMzQMEqgV4HrnSIrljPywV
      iosrHJXJwtFEw5I3hkB1giWSo0gBSAKNFIAk0JxaJ7jT6cjVFI7JcDgkkUi8vOAr4nkemqa9
      cP+dO3dQFIXk0ewsx0TXdWx7OvHo+/5r//rok/FPyql1grPZF4/5Sp7lNEeBXHc6wRUKvdrt
      YhjGM5NYr5NIJPLKD1P5CiQJNFIAkkAjBSAJNFIAPwUhuP/9N/z1sy/otKr87W+fcW+nfrjb
      7Db421ff4jlj/v7l/+OrG3ekQ/SMceozwTt3v6PaGTK/tMTm7dvk1y6hDZtE8nm27z7k2kef
      sJCfjoDUd+7y9e09PvzgGjtb24SiGRSzQcuO8C+//ZgXj2NMMTsHfHfnAbFMEb9XozHRubCW
      pTf0UMZNSC3zzpUNFMAZ9fj0s//L3Lm38XtVugOPpdUM9+7t8t7H/4m5bAyBQOgJPtxQ+Kbc
      44MPf83O1n1g6omJZ4rM5YZTp6Tr0WtVGb9zhWNkyz3TKL4gNfbpxV92xSHkCbSJS2ziM4o8
      /bw1HIGrgqcphF1BauRjhxWilo8ZUQl5gogjGERVRrpC3BKEXYEqQBGgCVB9wdiekDZdNB9c
      FYSqoHlTt5vqM80jfGhZfPIRpJy+AHzCrCwWOWjW8MJJooaGohY5tzzH4OCAZqt1KIBOb0gM
      Qa3dpjC/Qq9RpzW0KRTzePBSAXi+T2lhiWGvTWtgUSjksDyVt69fZP/+LXbabYTYQFFg0O8S
      TaZpH1RIJzOkIwPqjQbZfBFFmV5EBQVrbLI3hmI8RrVWwfV/uKSONWYwGDBx5rl45QoPNvc4
      +WqdZw+hwDByvJcHVwVP17C8Z4c+7dAPt6OjQTeuIhQYhzV8FUBhZID36FRjXWES/iGO8sjR
      GY7pjBX/sG6P9z2+7ZXHvzw+2ePflTPQAiA8JiR5+50PqZf3iKRzxI0wiqqRL5aIxnW++vJL
      BGE2zq0Szy2STqj8+//5K0uXP+JXG0v0JsdTsqIoDAcm5y5dY225Q3cMxUIaDUhmslzMGtz5
      9itMRzC/tMri4grpbIY7X33GgRXn9//8AdVKA6d/wJf3myhGkuvn1mmZHoulDOW9fUorRb75
      +ktcX2VxeZF4PMZgNAZryPlLl38Z75yKgvfyh/9hWVQFX31WAOLJ+YAnYvpPXKSnfn/B9EFI
      U7HDrza3EHg36JvAabtB//KXvwBQKr2axfqnuDVnHf8X8UCSSF4VKQBJoJECkASa0+8ES848
      uVyORCLxk/xbmUzmNdbo9cWXApC8lOvXr/+k42V+AInkjCIFIAk0UgCSQCMF8FMQgoP9Tb7+
      5iaTicm333xNo3eYdxKze8DXX39No2vi2SPu3Ns6xcpKnkegOsHWaMDde/fIzm8Qttt0bJ35
      XIxmu09UdTCJc+ncMgrgWibf37rDwsZlnE6Zg57PuXMltreqXLp6lag+nbePZ+eYH+9yf2eP
      1YtXqeztUUxfBkCPplgqZWh1upiNHv1h8CbdPcfCs218awQo6PEEivL0c1cIn3G7QTRXeubr
      kq41QVEU1LCObQ4wEtOFxXzXwXNswtH4U+Wd0RBNj2ANe/iOjarrIMCdjPE9F99zULUwnjVG
      iIC1ANZ4RGn5HL36Jt/d3qRdq1M9OGBuYZHRaIRpmoeGqbHZZzIZc//2bXpOlLTmcfPWTUyz
      T6tnHsYctg/Qcotk9BAhVUM5Yni2XQ932OLe5j7V3U1Gs18e9Ewh/OlaoL7rIjz3+YmCBXiO
      zfN2Ct8/XEtUeD9cvOkao94z5X3fQyAOBeK77qPfLTx7gmdNf7r29GegvED9Zplvb2+xeuEy
      TqeK6RnMLeSZz+fZfXiHnhtCHfcYuYJsLs+g3yOVLdCv7lDv2Lz7wXn29tvkswna7S6KkSDi
      9Rm7KhcuXmLzwV3mFldpVPdwfZVcLk2n02V+9QLLpRTVygELi/Mvr+gRTtsL9EuOHygBuI6N
      j4oePsmbn095ZxsRSbM8l59Z3X4MKYDZxQ9UHyAUfpU1O1WW1s699rpIzgaB6gNIJEeRApAE
      GikASaCRApAEGikASaCRApAEGikASaCRAvgpCIE56NJs9xCew8FBnf5w/MRun06rydhyEb7P
      YGj+SDDJaRCoiTDfcxkMBhixJIo7wRYaET2EZduEFB/b10gmYtN1kzyXbq9PPJnGd8ZMHEEi
      bjAYjkmnU6iPTFvDQZ/KThl7pURlAOeMH9bxb5c3qQwVViMJzGaZbze7/JfffHhKn/50EL44
      1tLlvuejqMozZjjfm/qAVE19trwyje+7Pj4eKI+3T+P4no/wH51bAR79/mRtAiWAYafBdqWJ
      53s09zbpOjGuX11E1TP09u8Qyp/jg2sXQAF71OPTP/9v8qtvEVM97OEYLeby4EGFj3/739iY
      T4OiENFDmJ6CHo7iDvY4aBnk0lOHYq/Tw7R8yvsCazwibYDngxagdtcxLZyJjV788Vn4YaVL
      cikzXUjrCUYHAxRNIV5KHdneRzPCTDomru2AD1pYwzwYEI7phKI6o4M+jmkhxHSfO5km+RbC
      P1RBoAQAPv1ul1ShRLYwRzGWQ4/GuLC2wpbT4cFBk/FoAQGY/R6FhVV0VeBORgxHFvPFLGsb
      F4jrTJ2jikq9VkMTNkMHQoqCbVmMTBMBZEslDrYruJ5HMmaw227jBEwAejKCEnn5MnKpled7
      nRIL6Rdsn34JPpqLP+UFyl16wmx4deGl5w2UGW5s9nEVnWTsRSt0emzevcfEExTmVyjlkoDH
      vZs3GStx3r52ARXoNWuUD9oQjvHWxfWnI1gjHmxt4/kKy+vnScV+es5gaYabXfxACeBNRQpg
      dvED1BhLJM8iBSAJNFIAkkAjBSAJNFIAkkAjBSAJNFIAkkAjBSAJNFIAPwUh2H3wPV/8/Sbj
      boV//+xztivNZ8v5Ng+393/++kleSqC8QGa3wc0794ln51DMJs1JmPWlFJ2+Q8juIhILXL+8
      Ps0TPO7z+RdfUlp/C7dTpjPwWFnL83CzzPX3P6aYjgJQqdYxUnMMeyNQIfaEzaK1/4C7+y3m
      l5YZT8Zsbe6SwGMY9tjb7fLxJx8SeU72xF8SlQe3mIyGnHvn41c6vrZ1j+zcEkZsajB0HZv6
      9n2WLl7D81yqD24zd+4Ko36XUb+LPRnTb9WJJlKsXfuAdmWXne+/IZHN067tM+53EYDwPcbD
      frAE4Hk+iysbdJpV6o0eheIiI1vw9vUr7D+4xX6ngxDr0zzBvQ4hPUK9vEs2UyQb7bFfKROL
      J/HFD0vyJTIFSjGfukjy/ls5HmxtU3pvmlDC9wRr59fptfuAYDjoMzZNUpdX0b09eiOfSOK4
      +UbfTHKLqziW9erHL6w8tZ6TpoUoLm8AoKoaxdXzABixBGEjghA+mdI8qja1RiTzJS589E+E
      wjpz6xdx7Ed1ET6ObQXLCzRoVbm7XefS1at4wyYtU7AwlyMejdKo7jFRIgzqu5iOYG5xBXti
      ki8UuP3FX6hNEvzh9x+xu1MlEQ1RPWihGEnePj/PTq3PudUSW5s7FEoltjcf4PoqqaiGqSa4
      dnEdx7axhm36IyiVEuyV21y8sIF2jBZAeoFmFz9QAnhTkQKYXXzZCZYEGikASaCRApAEmsNR
      IMdxGAwGp1kXyQsYDoczje95Hpo2u9GosxxfdoLfAGQneHbx5SuQJNBIAUgCjRSAJNA81wrR
      Odhnpz7g0vkVHt67R27pHHHFI1HIY3a7jHsdkotrTHodWvVtmj2HxdVVSsUS40GXXKHAL9nh
      4nsew9GIVDJJr9sllcn8oj/vL5lnBSAs9usm165eYOfeXdauXGf77l1Gmka0kKfdbiNck4P7
      24T9CZevX8K92WG5kODmre+IZebIF45fgVGvyZ37e2xcvsjB7kPUeImL69MFjVyzy62tXXKl
      VWIhj5A6vfm2dqtEIyHi2QVW5o/fOfRdm7u3b2FkFkgoI8qNEdfev4bONO3mzoNbDL0oS6U0
      iaiOaftU9ndBDeMT5q2r51EB4brcufl30vMXwDzg4abGtXevYwRpxatfCM/+jwkPLaSjaRpC
      UTHCIcKaCgp4vo/juCjhOKnQhL71gyksFEkR02Bh+WRpQPerDTZW5ijvPSSWX8Me9g73Ob0m
      qeXLjPtNarUqzXqFTrfH0vwcoXQRe9g50bm6rSqZhQ3G7RrNoSAfhidtWmNXJaF71KpVJsMW
      jWYLLb2IInyyYcHkibKZ0jKaN0IJRbg4n6Q5fjZnreTs82wLoMZIR2y++fYWF1bnuPH1V2Tm
      VljJhfn2i68oLK+RMFQK2UVaNx6gECadnVpVSwvLGOGTPQXjYcE3N26zfPEiB3t3GTkaN//x
      JWMHSrkcmYKBk07TLLdpemHOrWWIGlFCiooXPtmLRywW58633+KHM5S0Pg/32izGQ/SbfWLp
      IqVCAU0BI9TjzsMKi+sX0KNxMIro+OzdvUm/PyaVnaeQy+J705s+Yqi4J/zckrPBqc8DdBsV
      yq0Rly6eJ6zBoD8kmUrO5FyuZXLv3iYLGxfJJiKM+wPCqeSZ94RXq1UMw5hZ/LM8UTXr+Kcu
      AMnLcV2XUOhpmR79T5+ueixQVfWFZV607Wh8IQS+7z9Vzvd/WHb8dcQ/WtdZx39RLCmAN4Cz
      /AR90+NLAUgCzVl//ZW8TjyLze09fDXMYilLpVKnuLhKOm4w6rfpjAWFRIj2yKeYjCD0COET
      fme5tr/NRBgsldJUDjosLy2iqQrDboOBEyITgYGjkY2GIRLlJOMYQgga1X2IpEmEXMr1Fktr
      54npKr1WHUuJElNtJkRIGRpqJEroJfGlAIKEEiJfKLC1uUWbMXpqjogeAuHycLtMRHH4pm4Q
      UQTuKMHCytoJTyBotLqsnb/I9sOHGEaI3UaSjaLB5k4dXXHYJ4yhwiSZYnl19WTRfQvXD1Hf
      2yFuqBTmlghrCvgjtvZahFUbC42wqmAm06ysrrw0phy7Cwi9RpkH+w0iqkuquEwsEqG6dYdy
      owu+ixFPs1xKEo+nEZ5Lo9Xkmxu3H6fVeimt6g5blQN8e8ytuw/wVIPlpRL22AbPJpLMM5eP
      k4gn8T2fRqPGP76/d+z61/c3KTdHCH/E4vIacUPj/p3vafYtcCfEMiVy6SjJeBzPh+ZBme/u
      bL40rhRAQEgXl7iwOk+zPWBxPo/nCxRFQcOnPbARoybfbPa4tLFIIV+gkIo+k8FJ8jQAAACY
      SURBVLDux8gvrLExl0KoYVRFJWEI/vbVXfIZnfYY3P4+dysjzq8vkS8UyCYiJ4o/t3yO+ZTg
      zt1dKrUaj3uuqj+hbRlMmg/Ya9lsrC1RKBRJRvXDRIY/huwESwKNbAEkgUYKQBI4HGtMp9vF
      8Xw5CiQJHl/++/+ir0dxvbRsASQBRHj0e0PCmLIFkASQUJzf/uu/UFKH/H/wEGNLqbkrCAAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Pct Diff Distribution' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dWXMbWZbY8X8mgMSS2DeCIEiKovalSrV29VbjGE+MY+wYeyIc4f6AjnB4
      YsIPdsz0TMy43dVdS3dXddeilSIl7htI7EACuacfKJFUSV0CSZCgyPt7kZjIxL1cDjLvvSdP
      Sp7neQjCOSUPuwOCMEwiAIRzTQSAcK6JABDONREAwrkmAkA410QACOea//l/ut0upmkOsy9n
      im07+P2+vvc3TRNFUY6xRzs8z0OSJNHOM5JYCDsODosL61yYGu/7iEajQTKZPMY+7bBtG7/f
      //od34B2PM/DcZwjtXP8P4lzxnMdOp02/sDxf5oLRyfGAAO2+ehrfvP1fUxxXn0jiAAYsFi+
      QNCxsGxnd5vrmMw/mUPTLcpry3R0E1030DRtiD0VQFwCDZzearJWaRGLbsFUEQDPhVg0zMLs
      I0KJNI2leSTHRY4kmI5EdvbxPE5iOHaW2nnexlHaEQEwYNFMDlV6SDST3dsoyRiGgU+SCASD
      uEYHrdMiEcsA4Lounufhuu6x9+8stfP8j/8o7YgAGLDq6io/+uu/Yf3xU7hUAsC1DVrtHiMT
      U3Qqa2QL4xSLE5imDpKEz+dDlmV8vv6nTQ/L87wz087zT/6jtCOmQQesU17h83uzvP3ejyik
      on0fJ6ZBD24Q06BiEDxgjmtQr7do1JvD7orQBxEAA2brJrbkp1WtDrsrQh9EAAxYJJkmYGuE
      k6lhd0XogxgED5De2uZfP/kdxYs3uH15Lw3CNjRmZp8QVGNojTqRVJZYMEhX15m+eGF4HRZe
      DoDq5gZqboTm9ibJTIFGtUwun2X20WMCsTTTE8Vh9PNEuI6D5PPhPfv3oClW3WaNru6y8ccv
      SCaT3L4yAYBPCZNJJvE8mdjUJXr1LRZm5pi4/eHuFKjjONi2Pfhv6nscx3n9Tm9IO4OYan0p
      ALqdKg1LZnNpjtvRJBvLi/giaSbGR2kYR79iajeqmAQIyQ5dSyKX2Zn50LsdGu0eyWQcvwyW
      7dJotAn4IZHKEvC/vm3Pc6lslYnE0+jtOoqaJKaGAGjVK9hSEDW8k6Njmz003QYkcrkMErC9
      uowRjBA2emihMKVsDr+v/+85MXqRv/svEyjhEL59GYpGc4v59W0mSkW2F5+gpvNcvP4WWruK
      lIsjszOVdxKzM8CZaedYkuFkJY7ZXCUcS9NcX6BhgbS2jBpUmL44eaQO4+isbdaxrR6BQBDT
      sncDYG1tFRmXcrXOeAI2ND+K2cEMJbHkJqOZ119Td+plOobFxqP7hBJZ3NoG165NAbC6voGs
      hPDj4UmA69DTLdRAkHguQwhwHRu7VWXb8RN0bLaDUUaTat/fnt7a5u//+/9CvTjFjatv7Z4B
      QskCP/1RAYDxsbN7Bn0TvbQOoPd6WKaBrCjYlksiHqVV32ZldQM1NcKF0sjhW/Nsvvrid+g+
      lWIyyGZDJ58I0LNkMiMF0hGZSqNDdXuLwvhFYgGwAioyNnH19X+IeqfKH776hlR+Euw2liUR
      UHwo4Ri5TAJJgvrWOh07wHgxBx4oeGzWK3Q1k1QqSy4VpqE5JOJBTAIkwsEDfYtadZ1P/3Sf
      a7ff48Jopu/jxDrAwQ3iDHDCC2Eela0yipokroYwDINg8GB/YD/EtU02yxVyhQIBn4RhWASD
      J5uWvPnwK2Y0H07P5d9//H7fx4kAOLg3MADOPs91KG9uksyOEFL6/8WIADg4sRJ86ngsPniI
      4fcx/3Rpb6tjMb+4DJ7LwtwM240W7bZGVSyWDZ1YBxgol831Fdq1Oteu3tq3XcJ1HYx2A188
      S2N7nWalRm7yCql9maBiGvTk2xEBMFA+pkoj/H69ia7re5slCde2sBwXXevgepBMp9F7XSQp
      gyRJIhv0CI7SjgiAAVOzGYJrDfavz7i2RcDvo+v6SasKkeQYPjwcxwZJ2l1wO4kqCpIknZl2
      ng9fj9KOCIABk5UI0aDE+kaZaxd35vx9Soipi9PP9tg/0BU3zg+bGAQfA8fxSCbiw+6G0AcR
      AANmtuu0TQfDtIbdFaEP4hJogDzPw6coyHgoSuCl111T49t7D4kkMkSDQbqGwZVLF4fQU+E5
      cQYYoHZ5ibVemP/4Vx9j914ueWJ2DUYvXiYoO6w8eUQ43n+qhHA8xBlggNRUlpVvf8vqYyhd
      e/el14NRlcqDh0QzI0zfvEO318R1Y3ieh2VZr6wTtH+G41WL9gd93XGcF6YNB/3+zz1fCT6u
      93/Odd3d7+dQ739SqRAnschzKngeHgefmms2myQSiePp0z4iFeJFJ3YGMAzjRAoynQ4u21t1
      cvn+L3Esy3px8eyYnOSNN29COycWAGof6cxnh83WZp1otP+yKLZtH2j/wxJngBeJQfCAdWub
      /N9f/QZTFsOrN4EIgAFrri9jBlTCJ3wfgnA44mNqwHLTV8l0nyDL+2ZE9A4zs09J5kdpb2+g
      ZkdRFQXD6FIsilskh0kEwIBtP53j7uMn9HSP8dE8AP5QlLAi0anVSIxNote3mJtdY+z6O6Iq
      xBEcS1UI4WiSpQk+cBWS6cLuNqPbwnRlLNtmc2meUDTO6MQUnXoFKZ8UVSEO6Y2aBj0vtEqZ
      zWqNVlfiQmnnDKCEo0xfuoLfH8B1beTdAfJ5mRY+vUQADJg/HOXCxQyXSntnAEmSd58AKcv7
      c4SOPy9f+GFiFmjAAkEfn/zzL/nT/blhd0XogwiAAWtulFESKfRWe9hdEfogAmCQPA9XjXF9
      apzbd27u2+6ysbqCpltUyut0DQvDMOl2u8PrqwCIMcBANTcXmFmpYxsGSXWv4Jdt6viDCktz
      M/jVGJXmUwKehKuoXLoQ3t3vrDy87iTbed7WYZ2aAGi328RisWN7f8uyCARevknlz3MxdJue
      rpHss9a/PxTGbNcxLINH82vcvLRTIl2WJdrtHhPjY9QMF6OlU69WyIynXnjQ20nMnZ+1dt6s
      siiexYO7D9A9P6rfoWXIfPjebQAeP/iOdL5IWI2hay2q2xUS+TxPvv2akavv8O6N1985ZZtd
      Zh7PkcwUaFU3iWaKTBRzuFaPzz//PVPTV8glVSr1NvVGg4mJEuurG1y4dBk1FMDotpidncOV
      g+SLedyeRM9o9B0Asi/I9Ss3GJmeILKvqrRl6LTaTYJqFKdVIZUbo1AYxzR1JFlGBmRZPjPz
      8yfVzvNP/jdnHcDzMC0Hy3UwPbAs6GodXE8il88jhWNsL89RvHyN8kYZPIdYeoRMsr8zg9Zu
      kEjnqKwvEc0W0VptKOaQA2FKYyWyiRDfPVpgPJckn44w8/ARPcslWzJRQwEs06I4NUanLmEZ
      GkY3gHSAkjMBJcC3f/gN1qMU16/f2a0OHYymuPP2syAa2ff4VM5ThuzpdMK1QV3mZx/jj2aZ
      KOaoVqr0tAaGLTM2OYmCzcrGNmOFLLrhEo2GX/+W+1i9Jr/+5DOuvv0Riteh2dAwHRslHGMk
      rWI7Lg3NJhFw0CSFyUKWldV1AjJU6k2S2QLFfBLHkUBycB0JSXIJhfrvR3N1jt/ee0p+dIof
      3bna93GiNujBieK4p1BrY57ffjdHYWya929f6vs4EQAHJwLgFHJsG8nnwz3gL0YEwMGJXKBT
      x+ZX//D36LkcyWiBjz96CwDX6vH1gye8e+sy9+49IJLKEQuG6Oo9Lk4d8ak7wpGIABgoH2+9
      f4cvZuZJT+7NHMmBMPl0ErPTZeTCzkPy5h/NMvGWeEjeUYh06FNHwjO65MYvkU/vlUa0DY3l
      pQW8ySnqlS3UVJapa7fQGhWkrHhI3mGJS6BTSM2NsPXpl6iBIPnMTpkTf1DlZz//GIDJifEf
      Olw4YSIXaMAiyRw//ckHaM3msLsi9EEEwIBZeptPfv0pI+OlYXdF6IMIgAGrLS9w+f0fs7qw
      +IpXPdaX52n1DHo9nXZbpEwPmxgDDJBj9ggXL9L59hvykzdeet3qNDB8EdrL87imjRLPHGsC
      oPB64gwwQFp1g7m1Jj/+6D22N8ovve55IMkykgSWacAJPKpI+GFiJXiAPM9l5u6fKDcM3v3w
      Q+Jh5fs7sLzwhFh+DEUCyzKJx+N4nketViMSibz0nqI69BmpDn2cbNum0+kMuxtHomnaidRP
      /X4AvOntuK6LLB/+QuZMBMDp47C6skVpfLTvI0Qu0MGJ4rinkofrntztgMLRiAAYsO0nD/nl
      r36Ddk6eB/KmEwEwYAFFxrZcRNW3N4NYBxiwQEglEAjiWXtPe7H1Dg9nHiMrKrrWIpxIE1UC
      9Eyba1emf+DdhOMmAmDALMNkfWmOdCa/u80fiqKGFCzbY2z6Cr36FhuLTylef1ekQx+BSIc+
      hSzL4z//4hfU1/YWwnStSdf0iKcT1FYXiWVHuXQrh653kGRRHfqwRDr0KRRWA/zms8+Zunp7
      d1tITXD7rZ27wyjtfyBGf+VWhOMjBsEDpndatHUbxS9+tG8C8VsasHAsQTgYwtDe7JXp80IE
      wICZPYPNtQUamjnsrgh9EGOAAXLMLn96NMsHP/l33LmxN71pGxozs09I5Yu0t9eJZotEnj0k
      b3S0/3QJYfBEAAxQfWMJL5Rl7u7XjOYzjOZ2Brk+JcLE2CjVapN4cZJefYu12XWKV++IadAj
      ENOgB9BoNkkmEn3t69oWHd2k22lTKBRef8AzydELXHY38SZHCPj3MiHN9jb351a5OFFgc3WZ
      YCjMSGmSTqOKNCKmQQ9LTIN+T69d4dHcIoFAGNPoEYpmuXntAq7V49tvvqZUGiccVGi1u3R7
      LSIRlW+/uc/H/+E/MZaJ0qlvMjO/TtAnUdFMRuJBVpdWSGTiNKsVwskCRqdKNBKn1m5Qmr5N
      KbOXwtxrbPPHz75k/M5NQtG9zM6AmubtmxH8SpBUKoUvEERi5/4BYbjOVADs1NoH23YACVPv
      Ui6X8fkVRjIpMtksj2fnKaUjdHUfihLk6s0b+Jwe5bKGZ5vIkkQsncOiQiyVo1SQqZlw62qc
      +S0DCQklGOZGaQTNfnEOIZYb58MPmtxbXGUks3dtL/v8qNHos6/2P6NAzEEM25m6H8A2u8zO
      zlO6eIV4xEd1q4btufj8Cpl0il67huYoRPweoViM5xcp3U6TtqYTVuPED1iR+vvW73/Jshej
      W+/wlx9/0Pdx4n6AgxPFcU8hx2jz2RdfMX3zPUr5/sYcIALgMMQNMadQt23w4ccfo7BvRsfz
      aDZbgEejukXPtDFNC13X/+z7CCfjTI0Bhs/mk3/833Qzea5evk0+nwHAtQ0WVta4FSiyUWsj
      VeuEZB+mrHDl4sSQ+3y+iQAYKD8/+Yuf8ru5VULK3mBXDoRIx6M4tkM0kURvblPeXGdk6rpY
      BzgCsQ5wCknYmPaLvxTb0KhWtpD8Jcx2lURujJGREobR231InlgHODixDnAKBZN5cuo2HW3v
      Idj+oMo777737KuRfXtHEYZLDIKPgSSB1hZPgX8TiAAYMMn10C2bQiE37K4IfRCXQAPkeS62
      1cO0XDq9l6c4HUPj23sPCSfSxBSFrmly9bK4KX6YxBlggNrlJdZ6If7mrz7G0l4ufW71DIoX
      LxPyOawuzBJJZIbQS2E/cQYYIDWdZ+3Xv2Xlscfkjfdfej0Yi1J98IBopsClm3fo9dq47k5x
      XMuy0DTtpWNEcVxRHPe1XNc9kTn049RqtYjH46/f8YjOUioEHL0I75k4A3ied8oCwKW8WWXk
      AANhsRB2+HaO8hl+JgLA5/O9srb+8DhIyAfqk2maJ/I9nKUzgEiGO4W0yjr/9n8/QRc/2jeC
      +C0NWGtzhY7nx+8//odDCEd3Ji6BTpPcpetMmItElL0AsPUOM7NPSWRHaFU2iWYLqEoQ3ehS
      GhsbYm8FEQADtv10jq/uPuJqx6T4bBDsD0UJBUCrN0iXLtCrb/FkdpWxG++JbNAjENmgp1Bi
      tMTPP4oSje7V/dS1Jj3TBdlh7ekskWSa0clp2rUtpHxCZIMeksgGPYV6jQrL61vEohaTpZ0S
      6SE1we233xlyz4RXEQEwYL5ghAsXr3J5vP96QsLwiFmgAfMrEp/8yz/x1d3Hw+6K0AcRAAPW
      LlfwqzGM9st5PcLpIwJgkDwXQwlx58Y13nnv9gvbVxbn6fRMymvLdHQTXTdemfwmnCwxBhig
      xvo8T8saptbhnTt7P1rb1FHjCVaePiYQS9FYmkdyXORIguln6Q87Ve2OPy/xLLXzvI1znwvU
      D9M0URTlQMd4nodu6IRD/VWLU9QYTucptm0yt7jB9ekSALIEjabGxPgYlZ6Da3TQOi0SsWdl
      U56tBRx1TrsfZ6md53/8R2nnTAWAbWg8mpkjkRmhXdskmh5jspTHtXp88cXvmZq6TDalsl1v
      02jUGR8vsbG+yYVLl4mGFHqdBrak0KnX2N4ukypcALNBJJHHcwyymexreuBj+sIlClemUH17
      V5e2ZdJu1wlGIqDVyBbGKRYnME0dJAmfz4csy0dK6+2X53lnpp3nn/znPh36uW6nSSyVpra5
      SiSVR2t3gDxyIMzY6CiZZJjvHi0wkU+SSUZ4MjtLUzPIlS4QDSlYRpetRoV2S6c4No2ptzAs
      B23pMYnStde2r4TDPPjmn/nj4/vcuPEOt6/sFL1S1CRvv/Ws7OHI/iA6TRms59OZuCHmOUtv
      8elnv+fyzQ8I+Xo0qi16lokSjjGaS2BbFo2uQ9zvYPhDFLMpNstbSK7Fdq1JOlcgIHvE4nEC
      AQXP3ck1d2yLUFhFlqXX9qG+/JjPHi6RzU/w43dfHzTPidqgBydWgr8nEIrzl3/118++SpHL
      F1/a5/t34RaLO/uMll71js9OrcFg/30IBpHxCIYONt4QhuNMnQFOA9uykPx+HMtGUQKvP+AZ
      cQY4OHEGOHVs/u3v/wfdTI5capyPP9pZC3CtHn+6P8d7ty5z995DIqkssWCQrq4zffHCcLt8
      zokAGCgf7//kQ373eIlsdi8bVA6EGcmkMLUehalL9OpbLMzMMXH7Q5EOfQQiHfrUkbC7bSLp
      AonY3gyPbWisLC/iTU7RqJRR03kuXn8LrV1FysVFOvQhiUugU0jNFWjOfEk5GmdsJA3sFMf9
      6c9+DsDk+CtH28KQiFygAYskc/z0Jx/QbbWG3RWhDyIABswxOvzmk88YKYlP+jeBCIABqyzN
      c+n9H7OyMP/yi57H6uITmppOt9ujJc4SQycCYIAco0uoOI21tcxI8eVFOFNrYCkxNlcXWJh9
      TKUhniEwbCIABkirbzK7UuOdOzcpb5R/cF8PD1c8KX7oxErwAHmex9yDb9io67z/4YeoQf/3
      d2B16SmxfIkAHpZlEovF8DyPWq32ytKIojr0GakO3Ww2T+RGjDeVpmmoqnrs7Ry1mvJpa8d1
      XWT58BcyJ7YOkEj0/9T0N5/D6soWpfHRAx0lcoEORhTHPZU8XMcVZ7s3hAiAAduau88v/99v
      6Z5Myo1wRCIVYsCCYQXHevEM4HketmXh8wdwXRtZfv5j9450/SocnQiAAZP9QWRfAEfv7W5z
      jC5Pnj7FwY9p6oTUGGoggG67XL18cYi9FUQADJjruJRX58mN7C2E+UMqil/GsiXSkxfR61ts
      LM9TvPqOSIc+ApEOfQoZusXf/uIXVJfXd7fpWpOu4ZLMZmmuLRHNjXL5Vh5d7yLJKZEOfUgi
      HfoUCkdDfPrZ50xff2t3W0hNcPutZ18X9xfNPf5pT+GHiRHYgOmdBtv1Nt4JXWoIRyMCYMAi
      sRTZbA7P0ofdFaEPIgAGzDJM1pfmaGjWsLsi9EGMAQbINjp8eX+Gdz/6C969Ob1vu8bM7BMS
      2QKdyiZqdhRVUTCM7m5dImE4TjgAPCzLIRDwPfv3bMVfY3MF2xdn5ps/kM+mGC/slOHyKRFK
      owUajQ6JsUn0+hZzs2uMXRfToEcxiGnQE06Htnn43UPSYyUam2vEc0WKIzt/JK3aFh3bj+xZ
      OHoHKZTEZ3cIp0aJR/qrstZtN7CkIJGAS7PjkM3EX9zBsWjpNnH15WrPrqnx3cMF3rpzi8Pm
      MDqWQXmrggeosSTJ+E52p9Es84cHS0xPFilvbRGKxlH9frqmzbWrl5AQhbEO442cBvWHInRb
      dXyBEL1OE54FQGV7i56kEpBtMvEIptXm3uNlRksuN69M9fXermMyOztLNBGnWa1THSlxdXoc
      sPm3f/wlN995l64F9/44RzKb5e539/jZX/8d49kIsqIykk5wlE+Dbr3Mp//6W8bevsUFX2g3
      AJRYjo/eTyH7fIyMjLyQCiEM1wkHgMzISB5w2Km76TL36C49SyYejxCUFJLROOW1RaKZIqWR
      FLFk/2nUsi/IlRu3adfWyV+7hdGpsLKygl8JUBwrovV0fH4fjhwkGolw9fotfFaLlZUqQcXP
      wtIiTkhlPJ8+1HcXy43zs5+/y9ezC5QK47vbJVne92yC/eeX1xfbFY7Xmb4jzLVNmm0N2ecn
      HoshveLvTe9p9HQTJRRBDfdfBPfPWbv3BzaVLM1yjb/8+IO+jxOXQAf3Rl4CnSTZr5BK/fD4
      IRRWCYUHdyfW6LXbzH/+B67dfn9g7ykcH7EOMGCdeof3f/5zZHPfQpjnUavXAY9KeZ2uYWEY
      Jt2uqAoxbGf6DHDybD79l3+ik8xy/drbFJ7dEenaBqvrZWKKTE0zqTSfEvAkXEXl0oW9Gamz
      8vC6k2zneVuHJQJgoPz86Gc/4vdP1lH8e4NdORAiGVNxHYeQGsVo6dSrFTLjqRce9HYSc+dn
      rZ2jtiECYMB8PrDsFz+RbEOjVt1G8gdxtBqp3BiFwjimqSPJMjIgy/KZSVM+qXaef/KLQfAp
      osSzZNUyrXZnd5s/qHLnnXeffZXft/fxl0ERfpgYBB8DSZIweuawuyH0QQTAgMmeRaPdI5kR
      N7u8CcQl0IBp9Tr+SJhGrQGMv/Ca55g8ePCAaLqAGlTQ9R7j4oEZQyXOAAPUrW3SDo/yFx/c
      IR1/OeHOaHfIlKZwzTZPHnyLFIoNoZfCfuIMMEC+gI+7n37OQjiAWrj80uuBcJD1ew+JJNOU
      pq7QqW3jZnaK41qWhaZpLx3zquKum71VMsE8AVk5lcVxu06HttFmJDLa9/Ga3aHnaGSU/Ctf
      /3PH7y+O2zBrACQCOw8orJrbhH0RVH+U5e48fgJE/Cqma6DbPWRZPtu5QMPguS6O6+H3Hyyp
      WuQCHZzIBXrGtm06nc7rdzwxHr2eQTgc6vuIV336HwdRHfpFZyIA/H7/iXx69s+hXl1jdLTw
      +l33EWeAgxHVoU8h29B4cP8hpidy/d8EIgAGrPp0ho4/Si6Xev3OwtCJABiwaKFIdX6Gja3a
      7jbH0nn04D61lsbS08dUmx06nS71en2IPRXgjIwBTpN2eZNtzSK+tQWXJwCQZD9qRKG8skQk
      k6NaXkVrNEmNTZFM7mSCnrUszZNoZxBZtCIABiwzPklufo3CxMTuNse2UaNxmo0NLMPA80CN
      RjENA9jJBJUk6USeFXDUWZPT1M7zVPJzPwt0mmwvPiU/fYW1pRUuje8s6sgy1Bttpq7fQqtu
      EJ2cxoeLbVsgSUjsLPhIr7ppecBEOy8SATBgajqHV9F4973bu9t8gRCXLu+sDEfHJvbtffSb
      8IWjEYPgAfMFZGbv3WNxZXPYXRH6IAJgwLRqDcsfprm9PeyuCH0QATBg6fEL5FWZ0QuTw+6K
      0AcxBhggrbbOL3/1BYn8ONNj2d3ttqEx83gOKRCi12kRTqSJKgF6ps21K9M/8I7CcTtTAeDY
      Fh4ysgy246EcoPq057lsrK6SGikSVg73Y7FNA0nyszE/w73RUW5f2Rnw+pUg8ViCSCiENVKg
      V99iY/EpxevviurQR/AGVoc+Xp1GhaeLqxTHS6wuLDNx5RqZeATwWHoySyKbo6ubVLe2KE5M
      Ui1vMXX5EgFZwtY7VFst2l2JSxdGD9W+ZfTQOgZqKkFA3pua05vb3HuyymixSHN7g1h2lIii
      oOsaY6WSqA59SCId+iUeI6VJGttrZApjdGoVMvEJwKbV6uALBOjKKulUkmZ5mUpdQ60VGcuq
      SD6ZTsfmwuT4a1v5c2y9zf/5n/9AcGKSG1ff2j0DhBI5PngvB0BpdGTfESJfaNjOVAAEw1H8
      +An5RgkEVYxOlbt376KEVcKRCKFYkqBjsrJSozQ+RtwqY2vb3F1/ihoO0uoabNfjjGYP90kc
      TuT5r//tb/n1Vw/xHfCGGGE4zlQABIJhAkAouPPMATUyRjo/9tJ+udxOnn4+lxt4H7qNBr5w
      iK3NCjcuvty2cLqcqTHAadHragTDEeQDLNGLMcDBiRtiTh2Xbz75NY+WFvnyjw/2tlo97j2a
      Bddm5v53rG5uU6s12djYGGJfBThjl0CnQSiq0rXh6rW9+X05ECaTiGJ02qTGptCb2ywslBm9
      fHN3GrTX651I/8Q9wS8Sl0CnxFn7wzyJdp6vAxylHXEJdEqcROqwaOcVx4szgHCeiTHAKeLa
      Jt/cf8TbN6/z8P5dAtEs6DUsX4zbNy6z/GSGzaZBNubH8UWIqSqjhfyffb/q5gorG9uk0hm2
      t7cZGZ9mPB/l2z9+Qygao9NuMFK6RCKZ6PtZzK9itGvcf7LM5PgYy0uLpAqTTBXT3Pv2O+Rg
      BFNrkB27iBqLk469XDKyX55j8envvuT25UnmltaZvvE2MZ/B/QczRKNRqm2DidERcsVRFLm/
      M4O4BDoltEaFjWqHQi6DY1qkR8cJyS7hWJpk2IfjeXi+IFPZJF5Aoae1Ka8vU20br3y/8toS
      rY6OaTvUWho3b97C6nXAbJIYu4ESAEUJUq9usLi0jHvI64DK5iqzi6vIQLlS4eKl23imBrZG
      NDdFOCgTDIZoVMssLy7jHLKdlYUnPHk6TzAcodIyee/tyzSbXfRem8krd8AzCfo8KrVtFhdX
      +35fEQCnhJrMUkhHWF1eZHW7RmNzFRM/RqdBy/Dodtr4PJOlWosL45MUCnl8eGRhyTgAAACm
      SURBVNjWq5PORsYmiakhggEfiWiEhw8fEAyFaFlBWhuPcPxxJktj5NNJbNs+9CO7s4USV6bG
      kWUIKSEWntzHp0RoGRJaZRHDCzExMU4+ncJy7EMH2vjUJdKJGNgG4aDM13efklAlbCnC8tx3
      hFLjTJSKpOMq1gGSCsUYQDjXxBlAONdEAAjnmggA4VwTASCcayIAhHNNBIBwrokAEM41EQDC
      ufb/AfE5H3UY7y7KAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Pct Diff Histo' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Raw' width='192'>
      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
      Zf0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Summaries' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9Z3McZ5ao+WRmeYdCFTwKngDoSYny7afH3d2J2C/7g/o37Kf74W5s7J29
      NyZ2Zufu3pntlu2WKNGInvAeBZT3LrMqfe4HkJTUkloiVQDIBZ4IBSJUVfmeSuap95zzHiM4
      juNwyiknFPG4BTjllOPkVAFeQgzDOG4RTgynCvAS0mq1jluEE8OpArzkNKsFVlbXaOvWC32+
      Vsywur6FZtoAmHqbvVSWRjlPtdkGxyG9t4/5Pa5gs5JnZXWdtm6+0PrVQprV9S106+D6lt5m
      L5WjVspSbakYqsLGxgaK9pevn0lusbmbwn4hl9Vmb2ud3VSepx9vVYsUq02k3/3ud797gSue
      coh0Oh38fj8AN//4CYH+MPcf7NDrh47jQldllLZKp1mlpTkotSKaI6HJNXKFGmp+kT8sVJif
      HOLLT/+ALxTmzqMtLLVBcukGm3V4+NmnjM9fJOTR+af/+L/gnnmX4Yj7W7I8+uIPWN4IjzdS
      RD02miNhqAqyotJuVpB1aNcLtC0JXa5TKFWppJa5vZRjcmKUzz76kN7+EDcfbGK1m2x/eZ2U
      5eP2px8yMX+ZtS8/xPT3IeoN/v0PXzA5M4XX7fqWHO+//z6uTpGmZ5B2tYDX76NRr2FYDqVc
      BtHtIZdO4w0GKGeytDSL6x//d4RAP7EeNx++/ydEtUSxI1CuVPjjB/8dr0/g2yud8nJhaWys
      7RIPBvlf/8s/ExuZwW8WePvtd1ndznNpdoD/9n+9T2RijrigEcYkPjeKZgUAkFweJucvs7bx
      39hM1hhyWwwMxGlth4kEvJQ2bhK99A6Lt+5y9X/+FcKfLW+bGjs7ewz2hfnH//2/EpmYI9Qu
      87O//QU37+zz6zdG+N/+6X1iwzPE/BqxsB/L7caw+wAQXV4mZ8+ztPh7drcbBDUYGu4juxGg
      J+AmcuVNrn9xC3tqBk01EIQ/l+CAdqNMThqhtfQZy2u7zF24TKZQ562ZCA3PGJ6V33NzM8Pl
      a1cobytIHg1RVBHFAyPHH+rh4rlJPlvYwfFFENxeeoOuUwV42fFF+vntz39JSKuSyVeZPjtH
      vRZiZnKc1ZUNakofYxPjjJ+fo10skQhYeEamMTZXMB0H0db55A//ztjsVZrlJPHeCN6REdTx
      MSJBD48yHS7OzbK2ssnu9hYel0RsZJyAWwIgGO3nr3/9d/TYJUrp/JN1epkYTXDXfExJGWYy
      McrkuTmUeoGJwTAtwcfW2j6GDW5UPvrD+4zNX0DJ7dPXE2YwMUJpbJxIwMv2TgEkCccdIuoz
      qZTzVAUvlqUxPTH+7D6Mzlzgt3/9W1LLd2jpHmYSAwTio4zGTLYXkkz0xRifCDCZGMSjmzhm
      kWgoSqZQZjoRoVlK8fFtlWtvvMZ2oUVgbJyR0RGE03OAl49qtUosFjtuMU4Ez3YAwzBOow8v
      CbIsH7cIJ4bTHeAl5HQHODq+Iwpk8H/+439mcOYitz/4F4zIGLsPPyXVFBDbBT77+H1yZpTJ
      oeixCPyyILdaeLxelFYLl9f7Lefxp/D1KFA3MTtN/vTHj6nrHob7o9Qym3xy/Rb+kJ/rn1wn
      OjREpSITjQS6vrZjm3zxyfukqzpjwwM0yyk+/+I2suWhnFxiLVlGbWZZ3CkSQEUM9OAWu3lX
      v4mmlPnTJ9e/ywm2MZUWe7trVGsKIVkmX+1gVNd563/6e6y7j7h2YfzbH3tB9E6T1fUkk3Nz
      VNPbOP4+pscGAbBUha1kknDfGCG3g0sC27bZ3csS9LvxRAZIDPx4RXQci92NNcTQADGvwU66
      zvmr5/E8eT2f2qbaERkbiuHzeVF1k1IujSV60E04Pz/97EFfX3pAZHgWl1qlYQicPXcWn0vq
      2n05DCrlLHOv/Yb8/jIwyU6xxf/wH/6Ge5++j2aZrK3v4hZsRobiuKXuPnyWkiIy/i62vIXl
      OET6ErzxmkCuUmV9p8jI7Fk6Solm3SAjyARNH/OTQ12V4Rvy6CqG/T1h0PDQKMmFRwwMD6NU
      MiRTRYxOh7XFHnrn3yPk6t7N2dtLMz46QDq5TiCSQK2X4IkCGPUiUnwCuZajbmiEPWAIHmLx
      Plq6gd0ow3MogFzLIYWHkcsZ2i4vfS6HNjxTgEqzQyTgYX8/RWK0j0JFxnSFceQqvV4fMhB+
      8l5fOI5kyOi2yHh/mFJLZaw32LX7chi4JIlqq45hHli9kqnRbNUR+s7xD9d6WF1cR/f6STfb
      THX5uwguP6pcxdF0BKBRTFNoC5ybm6Fas+iVqvgn3iZaTZIq17FKKTgkBdhcvIuiaYyde+27
      fACL1H4OW1cIR3tptVWC0UHcnQJbqRzlSoOZC69zJtHXFWEy26vspIr0JcZolQp0bDeJPh8d
      A6IBP/6RKfR6gUp2j6YGM9MT+P1hVNvB7sgMDQ//6LW0dpWHD1fRBT8DYcjuVZi4Nk+n0sQb
      7CHkc+Fzg9ySyeQKDCSm8AcjCIaM34GK0aHdbBPo6SPgchBFsG3oDfloCX76Qr6u3JPD8gEc
      22Th/l0GZi4hGgrxHh+37q7w1nvv0GnWCIcD3H+wzNVrr+GRupsk4DgOm4t3cfWdIeI2sFSZ
      RyvbDE3OMezX2a2YvHlllnqzA+0yedXH+emRrsrwdWxT4/6Xt4/fCa4V0iQLDc6dO4fPLVCr
      1vH7fTiAy+3B3UWzwtTbrCytMTA5y1AsjFKtQSiAaNkIooTX4+F7zmEAB13TsWwbUXLh8bi7
      avd/nVMn+Og4NgWo1+vYtn0ka9m2zasU7FIUhWDw5Tan/v/CsZ0ER6NHF0XSdR3TfLFkruPA
      NM1TBTgiXu5UCFOm2vYQi3h++L1dQNd1PJ4XWcum0zGQ5Sb9/f1dl6t7OGw9uE7JO8G7FybY
      XLzP9u4O0aFZivkMr7/9BrbjY/wQQty21ebmp7fouIL89pfvIAoOC5/9G07iTZTsOtl8hbGJ
      UZq6i/OjPfSOnSHQxWDLn6OUU3zxcP34FSCX3GA3VWJgPEE1l8VxR3j72gUAypltvlzXmDsT
      Z6AnRLEuUykVCPYOYdXSFBWJX//Vz/D8yPtkmzqb62uIwT6ibp10vsX5a5fwApYmc/36LWZm
      z9I/NIjebtIoFWnjY2o0xs5umsnZeUK+g4zJ/P42+Xobj+AwPD2FUtNQ5PJLqwC1ch7bcZAJ
      4pNsQGD24jU0S2Ii0UellCOTzqCpNoN91/C6uusEi5Kfgb4wmfbB/ZPLGQj0Irp8vPPu2zxe
      SRIUZOqyQjavUtHdXJ6f7KoMT6lXinTkNrbzEtQDKKrB6HA/HblGsHcYia/8gr6hYUZGhhmJ
      BXm8niIS8DIwNIpjyNRlnYG+CM/jRrRbJUL945hKjapiMeB3oT55TfKGmDlzholEH6ntNRod
      A8cVJOZWebS4htzpUG18laLQNiDWE2JyfJB6Q0Zudbp0Rw4HQ9cp5bNkMymWN5KoagdDreN4
      o4T7xnjv2kUCCGAZNDS96+vbqoInNoKtNlDVDvl8jnRqj43dPQqpPYbGJpi9eI3ZsWEclwu5
      Ue66DE8xDQ1PdJAr584cfxQot7PEzUc7vPerXyOodXKlFl6hjaLDyOQZBFXB5bYotQTGet2k
      yi0mp6aw23XqHZvR4UF+6MDwqQ9gdBp8eecBQqCP8Zibve08g+fHkUsNvMFeQpKKKzxIJbPN
      1PmLrN67R7BvlES/n629AvHeCNVaHSQfY4lBXJJI2OeiodoYqo2AxsDg4E++J41Gg56enp98
      ne/CsQzauoVlaAQ8LgwpgN8t0G638Xtd7KWLjI+PIn5/OOyF193Z3sbfO0TYJxIMhsFSUW03
      jqHiD4UQHIuOaoAu0zTcDPUdzj0AsEyN3e2941eAo+CpAlimRjqVpXdghEjQi9ZuIwUC37AD
      bVOj0lTpj4VRVQOfz3vk8h6mApzyTU6EArxqYdBarUZvb+9xi3EiOHYn+Ch4WhX0qiCKIpJ0
      CHlFjoNl2wiiiCgIOI6DbduIovjsL/C9VVk/bemDtQRBQBBFcBxsy0KUJGzbwkF4ZnYJf/b3
      UHgiz4lQgB+LLMuEQqHn+oylddBFD51qmfDgIN+uqn15UOo5Pv3iHv74GH/13msUU5ssrieJ
      +F3s52ucvfomPq+fM2Pdj2Q5doebn96iZgj8j3/3V7RKKe4vrOENxBAtme3dNOOTozR1N+cT
      UYbPXCBwiE+nqpT55JObJ0sBTF1hcWEZKRinR1LJ5mWu/PJtAoCltvj888+ZPTNP79AIulyl
      ls/RdrzMTA6wu5tlcu4ssfBBmnJqa4VsTaPPZ7DVcjMZtFlL7jEzPU16fwfJHyPuNchXO5yZ
      GGJtP0df/wizEz8+d6nbyEqT1979W3KpFQD6R6cYrsn0D/ZTqi3QrKTZr6kM9P+CiK+7qixK
      fvp7/SgtFyIQjfcjWY8Jxoe5PBnG2zNEzN1hM1cnWyhS7Ii8+9r5rsrwdTSlxrm3/ub4w6BH
      SadVpX9sDkGTUWwPoz0Bngb8JF+YM2dmmZkZJ7P+CA033kg/w2FYWFxD0TSUtvbsWtW2ydyg
      D9vfx9mz8wRDUS6fnaGtyPQlpon4bGqyzfx4mHS6yuSF15Gs4w2VBv0hFu9fp6UKVCoVFm9/
      SqbepkOQt67OMxCOYOodmj/QouRFsNsNKupB+nulWqGYy+EJ9dKoFUjtJJmYnmZy/hJjwyP4
      PSJyq9F1Gb6ONxBl8+H1k+EEP8Xo1PnD//sBkbELnBsJsL6UZPDCOM1CDV84Rl/AwXSFKaT3
      OP/aVRZu3SI2dobx/gArG0nisSjFUhkkP1OjUbKVDudnE6yuJ0mMDhMK+uhoBqLLjW3o2GqT
      /VKbuYkhbF8Es90kEon8oJyHlgznOHQ6bVxeP9gWjm2hajpenx+XJCCKIp2Oit/v77r97Tg2
      bUVBcvtwSSAA7Y6KLxBEcGwkl+srH8W2MBwBn+cQDUrHQVU7J0sBHNtCURQ8/iAel4Rlmggu
      1ze2Qce20AwLn9eNadq4jqHI5TQb9Og4EQpgGMYrlQx3eg5wdJwIJ9hxnFfqHOCw5HUcm2Iu
      Rzg+SMDrAhwalRrBWA/FbJGhkUF07ZAO/xyHWjmP4O8lGvKhNKsUynVCPTFEo40h+ekNiLR0
      gd6gB8flPdSaYDho03iinOAfol6v/6TP1+q1LklyONTzu+xmCjxaXAUOiuQ/+tffk0mts765
      ysJmklrnxXqQ/hCWUWdhOcnjRw+f9fe0OjU2kllkpc3Wwn3uLqyxvLpKMrl3KDJ8A8dm5f6d
      k7EDPMXoNFlcXkfwRoi4dIqFFpd+/R4hDrJB7929y/T0NMHYALpSo14ooDkuRoZ62dhMMn/5
      GsPxg6rg5G6SHreLlmBRzBcJ947iFTVajRZhvwtXzyBh78tTJL++cAfVdJiYf4PCzgI4NguP
      HjM4MgDhPkSniFHJ8WB7l1/81S+JeLvrgDpqnfjEBZzWDrYDwUgMQUhz6cIscnoDVfAxOxRl
      L1Mhl8uQrav88q0rXZXhKdsrD1AtkYbjP1k7gKbKRPtHEW0NzXETD/l5+nsneUOMjycYSSQo
      7iwh+EJ4g1FiIReZXJFgT/Qb5ZIdpUWpWEQ1Ye7CFXyijqqp+CSTvZJC6CV6+AHmL7/Fmakx
      Hn/xAboUplgq0D84hKG30W0fs1MJhoeHsEwT6xDMLzE4RH71OqWWRb1awjI7tB0fEclgP1/G
      NtpEB6cYHhyiN+Q9VJ9t5vzrTCRGiPilk+EEP8sGVRt88uGfiE1e5NxYDzurSYLjcVpPskFH
      4n4MRyKVSnPx8gXWF5boH5uiP+JlP53H73WRK5ZB8jE11kdLNon39+LxeDB1Hdu28LolZNWm
      J/zivXVOneCj49gU4KjqgeHVK4lsNn/cecEpP51j8wFardYrFZk5SizLeqUU9lXm2BTg6Rbf
      VhR8wSCOqaOb4PcdTf3vy4xt24fSNMCxTRYfPmBk7jJ9YR+G2mK/0GJmrI+795d5/Y1LtBod
      otHwD1/sedd2HLaWH2AGhjk7PYKttrjzcIVLr1+jllqjaoaYjEtkWyLTA0EsX09Xa4JLmSRS
      zzAhUeXR8jZXX79Kau3x8TvBxfQ+a+vrNOUma0tLZEtfhSItTWFleRVVrrCXK7O6vEgqX6GY
      TpIpPn/Isd2qki/VAZvd3e8PtVWr1e+/iOOQ3FpgdSv33OsfN+X0Bu7eUTaWlwGo15s06jUa
      O8s46Nxe2MJyd6e515/jOCrB2CSNwi62DavLS0zPzbD46A47WRWpsc+djTz1UordTBF/V2MI
      OnK5Tllus7K0QmKohwePHlA3AsevAI7jEIv0UK5WCfTEaVWLz15rVUvUmg06bYWWIdEbCSBZ
      Cg+WN9jY2OK5vQjHZHPlMfcer1ErpPjs4+soz17U+cO//gsb+0XyxSLp7WX+8PF1Fu5d5x//
      yz+Rqz2pHhYEJs/M4j32O/d8rD66RapYJxIbwOs6MD37h4bxSAKRqXPYmorULPLp+x9Q6XS/
      JlgQfCj1fcZmLiIKcGZujtWFR1SrLQSzTqahMzfWh2FANrXDh9e/7Mq6xf0NFjfzjIz2IwCO
      y8dALIqqK0TC8eM/BwhGooR7ItiCiccTQe802dvZQDPB7/UgOSa67cLryKxtpxifnqG/N4In
      /AK5MoKL2fNX6LTKOOEEkwM2Xw0kFRkbT1AqlejxCzQbTRKJBJZc4Pz58wS8B9ux4zhk9nZJ
      pVqMjA/hO8TWHd3k3NV3UVtlPvv8AwZnLlMo5OnU8ywtrROIDTE2No7fK1FqbeA5hAIiW6/w
      6PEO8XELN2N4BBOto3HuyjUy64sgSMQHRrEsCaMlUFC7sxMNjM8xYKl8/tFHFJ0gr08P8P6n
      d3jtzbfYfPzlyxcGdRwHpdXEcsDrD3Q1I9Cxbewnf+GgJUYhmyT9JBt0anQAl9ePJDoYmopp
      CwR8HtodDaVeJF2o4g5GmR0bxLQhFA4jHcJx/Wky3NHx0inAYXCUIdducKoAR8exm0BHgWma
      r1RY0TAMVFX94Tee8pM5EQrwFNu2sB0BlyRgGCZu9wuYV46D2lFQTegJBw+3cLvL2KbGw3t3
      iE1cYGo4RqdVYytV4uJ8gptfPODKO2/SabXp7+t+RwrH1rh38zbu+DhXzk5RzmyxsJ4kOjhB
      2G5St/yMxz1kZZG5oRBipL+LYVCbvbVVfMPThOwGD5Z2uPrGNZIrD44/CnSUaEqDTCZHR9NJ
      7e3RaMl8Zf85tOUmHc2gWCrRUWQazRamodNsyc8mjDtAqVhgZ3ML3X61rMdaMUV09BylzO7B
      /xAkbMvArKQxXQ4PF7ZRdOsFp7H/AILE1OxZmpU8DtCfOMM7V+YJhTyUmiYevcZGtobSKJDK
      lbB07Qcv+eNxCHg8yKrK9m6Gy+cmWVp5jBhMnCwFAJtqpczWdpJ2q0FyZf1rYVCDLz//nGyp
      TqVaQWmWWVnfYenhLT766CPy9YN6XgHoiYTpHRjAc8j56t3GdhxcLs+zTnr+UAS3JOAeOEMi
      HiVkVFlfekS2dQjmlyOgKk0El+dJBoDDbrbM5FAvCA5t3WRmepKwz0+pWuLBo4WuLFtKb7G8
      lSXSE3wihojH7cK2TVwu98kygRBcJManUJUqTihIBBvd0OmYFoLo0D/QR6VSJRoQyaT28fj6
      8Yk9TE3H8Ek2nc6BEiwsPCLYM4I+Ooz3FdKBWP8om7dvERu/QLFYBLXB9vYWYqCXeE+c4cQI
      9burRLucCg3g6DLb+2k8kX6q1RKxaJhIbASvx0/AZdGy/MR7owiWQ1yRKHS6EwbtT5yh31K5
      9dl1avh5bTbBzfurvPbmG+ws3j0ZUaC/lAxXKaQpVlt4AhGmxke/t89otZilUGng8oWZnUoc
      orSn2aBHyYlQANM0sazDqXQ6DOr1+pEOEDnJnAgTyOVy4XK9Ol/V7Xbj9R59U96TyKvzVHQB
      y9QxLQGv10W73SEQeP6iFcdxyO1vo4ohphJDf2Go3suHpcl88fkXxCYucmk2Qb2QZnm/zHuX
      J3j/w9u89Zuf025qjI10ZwLon6NWU9zaqvObty5R3N/g0doO/ugQYVumogqMDYTIKyLnE1EC
      /YkuhkENFm/dpWfuEkG1wJ3FXd545x02H98+WQqgtVts72YYGJuglt3DFehlZnrsybRHh+ze
      Dq7IAKpcxyfZ1NsOieFecsUGk5PjPJ0dHYr2UdjcxhgZ6Po40cOkUsoweeFnFNJrQIJw3xCR
      Ug2zVcUQTRaXd4gEPAwPxXF1OcLlODaLWzk8TyzugfE53pREqmIf4zEv68tLFOst5LZBWmjT
      S4CJ4XiXVncxM5UgY5iU8w3+6r2r3F55yNDI5ZMXBnUHwlSLeSwbXEqT5rPXDJK7+zRbCs1W
      i2AwgGnZrDy+z872OoVaGzjoWKzJVXTHxSv18w+IgoCmtbGenF9IkgsBAXffNL+4doWI3kBp
      1Eg3ut/CsVPaYnM3x6OF9SfnJw57hTrjg2E21tYYO3uZd998kzOjAzQ1k+z+dlfWPcgGTSE9
      aXAm2CaKquKSPGj6CesMpypNFF1AazdwkAhj0/K50Jtt3D4vtWwaO9hP2AutUhrDGyfqtagq
      JiNDAxi6juh20yrmaWpw7e3X8R5C5uShDcq2dB7c+ZL+6Ut40aBT597yFlPnXmMo4iYc8XP3
      7jKvv/0mvi7PCHtKNp/DI4lEeyOUqxpDfT4+/9PnaJKPd995i7bSxlFKFFQfl+bGu7OopXLj
      s89p4ePNS2dYXkty7a1r7C7dP1kK8F105CaKqiO5vUQj4e/9Ue8oLZSOhujyEIsebr3uaTLc
      0XEiFMCyrNMw6CnfyYlwgl+1IvNXTd5XmROhAE8xdBXDEgj4PTQbLSI9323K/NDAbMc22d5N
      MTMzxZ9bTHK9iicSw/MShhfUVokvbtwjPnme185OkN/fZKeo8cZMlA++WOSt995AM9yHMigb
      oJnb4uZ2g7//+TVK6S0W1rYQPL34hA6FUv3ZoOxzoz30jEx1NQz6+ItbhOeu4pdTPNpIc/Hq
      NXaW750sBTA1hbW1XfoSEyilNEkpyIULcxzEB2x21lbwxhPYmoxkdig2DabGB0jlqszPzeKW
      BHAccvu7VJsa0/BEASySGxvo7jABq4XXEQgFQnQ6bZqlLFJkiLHB4x1611FalPNZzr/7Nwet
      EZlgaHyGqryBZZggmOzuZbANh+H+K7i7HN51bIPNnELMd1Cc1J84wyXLQg8nGO1x8WhpC5/T
      otRWyOba1AwP52d+esqJoXUwbJGz586QNi2KLZO//eWb3FxaITH95kkLg0Lf6ARmu4nLG2LY
      5+Kr0dcWLblDu91GVmR6+/qJ9/ezvbaC0qpRe5IhaZsKK+tJypk9FM1+9llLDOK3msgGyLU8
      ckcnXyrTUhQ67fYxfNNvUsqn6ZhQLabRTPGgU56uoaoqrtgYv3r7Nby6geiYVNVupiIf0Kml
      SWfzPFrcpGMYOI5NrtphuDdIKZ2kPzHB2Stvc25iBEN0I9cKXVlXblQoVOqoHRVVVRFMjUyh
      jN8bol4vngwn+GkynK4qdAwBQ5MBCT8OZbVJtdTAGwwjagru6CB+l0OzmEF3hYmHXBRqbaJh
      H42mjCvQw6X5afLZHLYhU6jK+CMR6tks4f5Rhnp9CC6R3WSWnv4hUCo4gTizEyM/Wt7DSoZz
      bJON1VUGJ+extSZqq8petsr4mXNEfALBgIe1jRTz82cOpdYZoN6o49gWkXCIVtsmGvHTrDcI
      RXsQbJNWW0dQ61R0D5PdOpG2NB4/WkDFzYW5aXaTac5eOEduZ+1kKcDhYdNuawQC/q5c7TQb
      9Og4NgWo1+tHVqxu2/YrVRjfbrdfKE/plOfnROwArxqnB2FHxysVBSqVyvT396G1ZTRHIhLs
      jsnxXShKHUEIEghIlEo1+vu7lZh1fLTref50/UtCg1P86u3L7K0+YGErxdT4GKsbO1x+811c
      kpuZsYGur22bCh/8+4cIPUP87a/fpZLe4MuHqwzNXEBOryNbXgbjXgqyyMWxXgamz3W1N+if
      oylVPvn4OtLvfve73x3aKj+CYmqH1c1tBLeErkGzXqVS2Gd9a49qMYMQ6CPoO9DTvc1lkukC
      Hq+LjdVVVNtN/DkaueqdFosLC9RVC0PVsOQmiiazvLZGIV+m3jbojx3Y3q1GgdWlDQzJQyG5
      QabQYGBk8EjCZp1OB7+/+8pdLacZmHoDXckzMjzCbjbPL372MzLJNTqag4NFIZtncDSBp8u5
      QJacQgtfJCQ16R8YIpdLc+mtX1Ldu4dv8BJzA1BQBCxdRVPbVGWD0cHD+9FRaimCw68dfxhU
      1WzmZmdpNYs0m23yhTImHhKxKDOXz9CqfFW27gn1Mjs5gqrqTM6dR7KeL7xoGjr9o9N4nA7V
      So1avkCr2Wb6ygXCoRierzVKRHQxe+48tqoQiQ8zHg1wvGOufzp+X4Ct5XvI6sEMAr+jc+/B
      XaTYWX72xkX6fF5sU6OmGj98sedE8MUpbt2nXO/Qllv4XBILD77E8AzTyG6wvlfl9TeuMZUY
      we0SkRt/oUFxF/D4wuyt3Tt+H6BZr+Pz++moCns7Sfy9g/RHg7gAX4+P3G6OQqWM4/YzkRih
      J+hF1U1cHh+G1nmunBlD66BZAqbeoVUpUGlYTE6P4usJoTY6YLXZ30+jmTbxkQQj8Tiq2gYE
      PDhI0ShHUad1mIOyq5US/nAMbAOvx0WxVGNgcADT0HC7XVTKdWJ9McRup3o7Ds16BcEbxi3Y
      eLweyqUyvX39GO0mmuMmGvajGxaYKh1LIvoTpuz8GHnq1fLxK8Ap3+bUCT46njnBhmHQarWO
      U5ZDw7KsVy4MahjdN0NO+Tbf2gFsy6BWq2MLEr3RHtqyQigSolmvYZjQ2xenm865ZZqILhfY
      NrYD0iGUGL5qM8IO7STYsWk1mvhCYTwuCXDoKG28AT/NRouenjCmaeN2dz846CN5gOoAACAA
      SURBVFgGlVoDQXIf1FPYFvVmi3BPFFOV0SyRgEdENQWCXglHdHX1NFpX2+Dy4hJsmq02kZ4I
      Hbn57SiQZajc/vDfWa9aJKIi/+k//ifGLr9NM7fNP//Lv3H1nXe6mumY3t1B9PmwdYVcoY4/
      4Mf1RAnMdo26LiFaOqbtIGCjagYul+u5qhGf7gBau0WrbeL3ucjni4RCoW+8r1av4fd9T/TF
      sdjeWGFrJ00oILGwuITtjtAT7L5XoGkaPl/3J7U0i0keLm9RqMqMjQxg6Qr/93/+F8JDAR4/
      WkQV3FiOm8ghfCfH6LC1u8fj5TXmZ2fYW18gVahQbsi0SkV2tzdIF6rsZwtgdAj19nWxLtlg
      7c5dmp4I1d0Vkqk0TVVna23j2wogujxImkJgdBYjt4I7NkSl6TDibeKbvMbsSHezGsu5fXL5
      EqpjU8rmqDRkRob6AdArexQdNxsP1ijVazQrWWTVJtob/d4GVt/FUwUw1BZLi8u0NIdmMcVe
      qkh/YuSZHVgulajk9tncTeN2i6ytbeKP9OL3uEAQESydWrODZjtcvnSJYm6feLz7obrDUID1
      hTuUGwoTF9/BaOYYGhxkbfExoUAP0akxqtkKktkhuZdmeCzR9WJ/weWh12dAMMFgLIRjauxn
      C7QUlXPTIxiuCIM9LhothbbcIFdVGB/56ecRpfQWyaLKmUQc2XHTUTq8cWmWjVSS8cT3FMUL
      goggCGzs5vF6XGR3V/jnf/8jamkfpcuWhCfQw/zcLC4RJmbmiUX8WNZBO3ObgyL0kYkZhuIR
      RFGg0/kpfSslpucvEnTb9PSPMjcU5+tXU9oKoi/C/FSCWqVIYnqesP+gLsCxbdyhXgaDNppu
      UWs1sexX5xxx/vJbTE+M8PD6H2jbPoqlPC6Xm3R6l6oicm4mQX88jtZuo1mH4C85Duu7Fc5N
      91MuF5HcHhyjw8joMJ988jmlUp746AxDA4OEfSLtLmXQ9ifOcGGqn7t37nLv/gMkq8Pv/3iL
      gb4xNlduvHxRIMe2WF95TFuH4fEzDPf99Prbpz6AZeoYloBt6oCAC4dSrUDxyaDsxHAcSZTw
      uEQcYD+ZRHRJNJoykj9C3OcgOz7mJobYXN9iYnYO7yEUj58mwx0dL50CHAanTvAp38ers4f/
      BNxu94sNwzgmDisV4pRvc+ypEEeBIAin/wkCAg67m6vUZA1BEHDMDkuLq5iOzcbKOhYOiqwc
      0tqwvbbA8kYSOJBlZ22JYl1mf2uVjWQWpV4kmS1jdmQ0u7v/bo1SnlbHwNQUVlbXMR3I7G6c
      DAV4SkeuUaw0AJu9vdS3Xv/LA7ItNlce88VnN8jl9rhx8wab+1/NNC5ntrn15T2q9Tp3b9/k
      9v0lXjbbslZIUusILC8tArC8sEAoLPHgTx+QqxW582iTpnE4GZi2bVKqH4RfATJbSyiuCEGv
      iC8Uo7K7wt3VJOm9LXb2s7i7+mTqlPbT5Boya4uLeESDRwuPSZc7J0sBHNtgfekRDxY3qOT2
      +PxPN/h6rKFcKbHy6C5ffHGD/b0dbt2+S/XptBRBIh7rxZbc1Fo67737Hlbnq2n1hXwJt0tA
      rssMTc8xHHTT/cran4Zu6gyOTOL3HDzkhuRhYnwKdzSO27JwtYt8+dkfKciHILngoDfr3Ljz
      EAeHptwivb3Ow+UdjFaJNj6mR+LYlkM2k+RPN+51Zdmng7LHJ0cQBQHT5WN6fARFbdDXN3Yy
      fIBnfH1QdjDBJDY68DTlyjQMfJE+Lo76KVZKROMDeN0HPSMc20I1HWJeA9ty2NjZxha/itX3
      RKN4Eai3ZKxGFcuCsaP/hn+RaLSfT69/THR0nkKhwEjEy+/f/5Dz137JiF5GdEnkKi2kw+h5
      amo4kgeXy0W5VGQkMUG6tIJXtEjmqpiGRe/gOIYloTehoEpdWfbZoOwPPiDvBLk62cfv//gl
      l1+/xtbCrZMRBXqKbVnYzsG0SAAJyOf3yT4ZlH1mchRJFJFEEQeHerVGR2mQL9dxBaJMD/ei
      Oy76YmHKxTKhoJeVtU1sR2T2/HkMpUU03ocm13HcAcKBFzvMOk2GOzpOhAI4jsOr9DVrtRq9
      vcfbR+ikcCJMIMMwXqlzAF3XTwdlHxEnywl2bOwnvelfpFmubZm0OyqO49DpdL4xT9dxbHTD
      ABwMXUM3LRzbotNReVk2H9vSePDlLfLVg3ZgrUqWz67foNWWuXXrLrqpUa0eTkq849g8vH2d
      2w9XcBww1Ba3v7hOptxkc+kBS5spKrldFjb2aTcqtM1u3jSH7O4m5aZKp1nm5q07dHSTtcd3
      T5YCqHKDfLGKaVns76XQDeMbocpKtYJtWei6geM4GLr+RGEAx2Z9eYH9dJ5yZpf1rU02k7ln
      n21VSyytbWJrbRaXlni8uMre9hob68tkyjIvA5XMDpHELPs7mwCYgpfXzg+xeOMuktvm3vIu
      pst1KOaiY5vY7hDXLs2DALphcfHqFXIbD8l3fFDf5/FuhXY9x36+gptu5iNZoJs0Oh02N3eZ
      nx5mYekRhrv/ZCkAWKT3tllc3aJVK/Lw9v1vhEFLpSJrS494/OghuzsbLKxs0OzoTz5q0FA6
      KI0KOcXhysVLSPZXn47EB4mFA+iqzuD4JMNhH23Jx8ULFzHah1vf+mNYX7hDptzEH4zgEp88
      4GaHVFXk3d/+nIAo4GqVufPZdSqq3vX1BUFANDt89OkNbNvBIwps7aa5+ObPGe+x2c8WmBof
      QRRcFHIprt++35V1DwZl54j3HaSWOJKbSDCAYar4fcGT4QN8hcTEzDyqXMEJDTEWt/lzzyDQ
      08doyEetWcc2za9+DSU3sUgIWVbwSXDn3j16B74KdFbzKTY3N3FduEA+ncJyBRmKCNx/+JDE
      zKWj+4rfw/zltzDaDW7c/BODZ65QLBbI7m5RkW0i0TjxgWEmAy7qDzbxS4dREKOhdHR6on3U
      qiXkaoFCroDkC+DUG/Qk5pgc6ceFgClLFNTu1CQ8HZR989PPqDp+rp4Z4o83H/H6m2+ytXjn
      ZESBnibDfddXLWZ2yT7JBj07O/GNdueO41DJ7ZMu1pD8PVyan8JxDkaDOY6DpbZYXt/BQWTm
      7DlCXheCIAAOT/tGO47zJL38x8t7mgx3dJwIBTBN85WKAp0qwNFxIkygV21QdrvdPpSSyFO+
      zYlygi3LRDdMwHmhOLvWbtFUVHAsUnt76JZDs1aiVG1+5/u7VdXULSy9zY1PP2YtmQegVtjn
      k48+IpXN8PH7H1Nvt8nmK4eytt2u8eGHH/JvH36G5TjocoVPPvqQVKnB7vJ9dvINMtvL3Hq4
      Sq2Y7XIY1GTtwT0yVYV6YY+PPv4j1Vabuzf+dPytEY8SVamR3MsieX1k93bRTAiHg8/s/mw2
      g4RDsVIn4PdRzOeQvIEn01JsyoUSNVlBrRUwPV7y+TyVYp12q0qkbxC3KIBtUioWUS1Ipfbo
      CYUQXSKaZlArFzAFDz7PX96NDqseoJLbwROfpZrfJTE6iujyEO8NUtxZp25aVBoGkiQQ6+3p
      emMswe1nZnoMuakwMjzEztY6Zy6+zt7WJjOjcYodCbmSPcil0nXcvhChQPeK812mRgMPxXSa
      qxdmWFhbpic2e7J2ABwbw7TIpFLomkYrm+Xrxz71eo3k7i5yo8rWxgpNja85ziIDQ4O4RAHF
      FBkfSSA5TQKhAXqjISzjycGaLpMuN9jb3sYC0tu7aJZKMrnHwoPHVBvHeCYgCNi2/ezsQ6kV
      KcgOF9/9DVdmp4jodXKpJJnm4TSBTG+sMDp7HkEA4dlhpIDff2Dunb94mZF4lJrcYmNjtStr
      HmSDpvH7nyqTg2XbCIKIbVsnwwd4iiC6GRoZRVVqEI4QxqbTqtNpa7g8PtweL75wDz1BH02l
      RSabI+B30xIcRJeben6fZL7KhbkZbt26xfDELHJui5oQJBBuUGiaeEWTeqVIKBIn5PEQFE0e
      PVwkEh0iFuuh3mhCtyafPCfxgXF2bt+if+oShUKBVrVMKlNBcnmIBSJceGOQ23eW6OviL+8z
      HAch2M9gSKJcKjA2McXtO3eZf+0a9+7fJdsRGR94l/jgCL1BFwW1Oz7Q02zQG59+RgM/b5yf
      4t7CNm+8/SbbC3dPRhToL9Gslag127h9QYYH+r4VrmzVy1QbCpInQGK4/3uvUylmkTsGfp/3
      oIA+8uJ9LU+zQY+OEzEh5lXTcVmWv9W065TD4dhMoKOchP6qdYXQdf20KP6IOHYfoJTL0zs8
      hK3KtDoO8d6vBl4ohQJ2fz9h0aJaVYnFwtSLObzxYfwvUDBkGhqGJeD3uZFl5Vu/sk9/eW3b
      RhBFHEOnYzkEfUfRFP3wMTpNbty4Sc/oOV47N0Ftb4UbG3muzE+x+HiNa794D61tMH4IPopt
      tbn56S2sYIxfvP0alcwWC+s7uEPDxN0ydcPPQMQh2xI5NxIlNDTe3UHZN74kOn8FfzvLg9U9
      rlx7i+3FO8cfBVKaVRYePqRYb7C7vsLK1v6z1wy1yebWNvWWjCzLJDfWWVrdori/xr998Bma
      9XymjaHKFMo1Go0GmVQGpd7g62lfxeweTUUjn87SqFfptBVK1SotpY35tfTpVq2CqinUa3Wq
      zTbVavWlK4D/LurVPLNXfomtHsT6i9kSktdLxCug2Rqbm3tkM2mM57yvPwZR8jPQF0YQDx65
      /sQZrs5NMTERYztZxuPzobbbyI0a2VyGdKY7c4IPUuBdnD07jWmZ5Koqf/3zN9jaWWJ48vXj
      VwDJ7WP+zBk0rc3I5Cx+8eumioeAx6bVUZCbbUqlCpIkIXmDeByFhvK8LcRF/D4f9VoVr9+P
      Xq99Y+pLPpOi2mihKAqlUhkcG8d22N9aZSf1VQeISqOF12OS29ylppoUsjmev7rg6JFECblV
      xzAOfK/Bs5f4zetzLCZb/Idf/4yw2UIS7UMJgzq6ysj8VVDrT+ooHDJlmUR/LwOj48SkBrHp
      N7k0PUobD61KpivrljO7rCe/upZgadSaLbxuP7LSPP4o0J8v79gWa0sPUXQYmZhlpL/nW+8V
      BLBtEEXhSfLZX+apD2AaGqYtYBoHrRE9OBTrRUpPkuHGRvqwDANBlPBIFjt7eUbHExRSe/T2
      9ZHJ5ACB4fFpBmM+FMWmlN3B3zfGYCxMtzbswxuUbbHy+D59UxcQdIWQF+493uLaO29jtluE
      w34ePVrj0tVLTw7/uri2qXL3yzuEh8/QH3HRGw1Tb9nEewOUMzskKyavX5ym0dKgU6GoeZmf
      GOrO4pbK7Zu36eDl9UvzrG0kee3aVfZWHx2/AhwFr5oTfJoMd3QcuxN8FLxqrRHb7fYrJe+r
      zIlQgB9jJr1MiKJ4qgBHxIlQgKd05DqyJtIfD7G/n2V8PPGN11P7+4yNj9OoVgnFYjhKk2LH
      ZqTv6M4sDhNNqXHrsy+5/Nd/T8wDa/dusFttc2FmnLuPV3nj3bdxHB+TXR6CAmAbDT74/eeI
      PTH+5lfv0S6nuH53ibNX30BNLWL0X8Rd32KveTAoOz4x18UwqM6DP10nePYavsYujzczXLjy
      OjtL90+WAji2ztrSKum+YZxWkb2dfd749Xs8PXKqFFIYuEFTkOUK+8kcPSMJVh/c5uzrP2O0
      Lww4JLd36I8FyFY7bK4uMzl3llxylzOX32Ri6OXs51POp/H2DHB2NsHTKKesa7glN16PG5ck
      kUmlUFWb4YG3DmHugQQcJL/BQaYskhvLtDl/4TxLZQFJknAMhUxOo6y7ee3c9E9eVWlUUCwX
      Fy6dY9+EakfkH377M64vLDJ19mfHHwY9Up60Roz6RaIDCS6MD32jf6dlGhimha7pKG2d0cQI
      bo+HeG+ESuVpH1CB0f4gt5ay+GyFSHyIgM9PX7yHSuVwcum7geM4GFqHfKFAuVKl3W4zOj7N
      5FCAdMvHL968SFCQwNSpa90virfVGq7ecTDbtDttwpEoifFxsqldSoUihWKRqQvXmB0fBZeE
      XC91ZV3HcXBsk0KhQLFYRDQ6LG3sEg72ks9unYwo0FNsy8SyDzoVg4AEFAqpZ60RZycT2JaJ
      IIi4JIdiuU5vPEajUsbv97K5nQRBoL8vTsdycXZqmGw2R7g3TrtRJRjtJ9yFTMrDSobTO012
      dtO4Q1H6o0HcWKSKDWZmptA7bXxeF/vpImPjo12vB3Ach1xqByEQJ+wVCQSDpJO79AyNUs+m
      UEyB6elJbMsGXaZpuhiKdykSZhtsb21j4GJibJhcvsz4xDjVXOr4FOD7itRPgWazeSjD9075
      NsfmA6iqemTZoKZpvlAnuONCUZRXSt5XmWNTgKeJaEqrhT8cxjF1NMMh4P8OE8JxsJ2Dk98X
      4c/boggCODYIL3Q9B8d2cBBeWJ4fwjTNw0mHdhxM00SQDoZQO46NYVi43S5Mw8TlPugKJ4rd
      dw0dx8E0DARJQpKkg+o8w0CU3Ig4OIKIgI1tczAgW/hxp/w/FtuyDkbdCg6GaeF2ubAs8/ij
      QKXsPnXdZjwxzM76NgOTZxgfOtj+LbXFwuoOZ88kKLRsGoV9wv1j+MwGhjfGxPDzmQmqXKep
      iQzEQ+ztZ5iYGDu40QA4z3p41uv170jXFnja8iezv0bbjjE33aWj+iNCqee58eVjvL3D/Ort
      K+yuPGQnV6a/N0oyU2D2/Gv4/X6mRrufDerYHe5/eZ+aZvN3v/0Vrb0NPtvKcPHcJczcCnL0
      HO76FhlZZH64h6GZc/i79nQaLN74As+ZK7jLW2znqozNzJHZWjv+KJCDyNjICJVahd7BBFrz
      qzaCrXoN3dBQ2wqy5WZ0qJ+QS2dpM8V+cu8Fukda7Kwv83Bpg0Ypy83Pbn6tNaLBB//Pv7KV
      KZMvFsgl1/n401ss3vuc/+O//hP5+pMEMUEgMTmN59jv3PPTbre49OZv6HkS95VtN7/9zW8R
      0PG5vbRqGTaWl2iqz5tk+MOIkp9Y2IPLG0IADEnCa1lomsXc2XP43BKRSASPYJAtllhYWuvK
      uuXMDmu7Rc5emMcjCbQFP3/7y7ep1HKcOffe8e8AoZ5egn4/uhXG4w5jdGBzdRHVhFAoiOBY
      mIIbPzIrG0kSU9P0R4O4Qi8SIZCYnr9w0BoxPMJ4/9dbI4qMj49RKpboDYpUq1UGBgeQjDqX
      L18m5HsyKcZx2N/eYDelMJQYxNe1w5rDJxAIcfPudbzRASqVCiHR4NPrnzE4cZFrgzItRadU
      rCHrFhFfd0+i7U6DUttC77SpVCsIbi/hcIBarchyvsRSTeIffvseHXuPTjNPVe5Ol+rY8AS9
      lsHDzz8lbYc40+vmkxv3GJmYZnvty5cvDHrQlVnDdsDlPjig+al83QdwDhYBDo5kitnks9aI
      ZyaHD2xSAawnk+rdkoRhWjTKWTLFGq5AD/NTozgOuD2erocL4RCT4RwHXdcQXR7ARhJFNE3H
      6/Vh2xaiKKLrOh6Pp+vpI45jo6kaosuNJIIoCKiajsfrxdQ0LMDn9R78+9gWliPgcXfp99mx
      UVUNGwGfx41umHi9HkxDf/kU4DB41Voj1ut1IpHIcYtxIjh2E+goeNVaI7rd7tPWiEfEq/NU
      dAHbMrEcAfeTTm1er+f5L+I4KM0asiEwEI8eSqapIAiHEorEscllUgRjw0QCHiyjw95+lpHx
      CUrZHCPjCXRVPZSCfMdxKOdTWO4eBvt6kGslssUq4dgAblOm2XEY7Asj6wJ9YS+2y4dH6v69
      tQyNeksl1humkEkdfxToKFHbDZK7ezSVDnu72xTLX6/ldahXSrTaKrl8nla9QqFYRtc6lMpV
      ng2KwaHWaJDdS6LZr5b12Cjts5su8ejRAgDVUgnTVHl0/X1Wt9a5v7hFWe5+BAjAcVTKZYXV
      5ccHsX5JQrJktveLbGxs4PG4WVtbY2V1hZ3d5HO1k38eKsUCa5tbmLpCvXnCBmXj2CiKQjK5
      h9pWKGzv8lWjQoMHX94hX25QqVYxNIVkKsfi/Ztc//wzcrWDgKmAQNDvIzowhPeQDsIOC1VX
      mfj/2juv7jaudE0/VYUMIhIAc5JIioqWJbctu/t0mnTOWWfNXMzV/Jv+N3M9M+v0WafdclKy
      lSgxR5AECBA5FypXzQUV3KfbtmyDZHORz52WQOwCia927W+/+30vXiXgO7zuaDxOVzG4+uGv
      8CDgdAo8f3ifinwUCTE+ggGH8alLiAIEwnFsW+TGlUkk22R5ZYVYLIbg2OTz+9z/Zr6n41ta
      h4dff01kYJxI0IvLHcDj+jvYCDtOBNHN8NgEqlyDUIgwNmq3g6kZSC6RRCJOrd4gGnCxl04j
      +JIEw3HGvHHcaNTrGoIosbjwEn94iKGRQXynqAYi4Tiff/Up4aFpisUiB1sLZFs2gfgQc9MT
      2AjkiytYR9AXsfUqX917wfDMLCEfxONhFCdA2AOC24uj6STHLmA6bvRmjqLWWymI5O3jkzt3
      2Ftf4PnzFzgYLL08Y2rQv0W9fEC1KeP29TE+MvidU2+jUqDS6CB5g0yNDR3pNZ1bIx4fZ6IA
      LMs6VcrTRqNxrgY9Js7EI5BlWadqH8AwDBTlaCzKz/lLztQi2DR0VO0wzFqW5Z/0Ho7jsJ9e
      Z3M3/3cTgP3OOBYr808oNt4qoIqZTVqayfPHz9Btm0ajeTRDOw4rz78mW3qbptMoZig3VbJb
      S7xc26VZzrKazqF1Gj1OiHlLt1nmwcNv6Koaz76+d7YKwFA7bKwuc1BpsL+7zdrm7l+0QffT
      GxSqLTLZLIVsmpX1beROg/XNHb7tFtg/NIbWLGMc03mGXlEr7CJGhtnZWAHA0losP31IdmsD
      0wWPn29gSEezAWc1tmn5pjjYebXItjWWnn1DrlYhUzLxynmebZXp1PPs5iv4j0hj1dVsrlwY
      YnMzja9/9GwVADj0xVLIjSqO6CHiGN9KiDEolqp0FQW5KxONx/H5/GwsL1Ip5yi/UoMKgoDc
      KKPbLpxTZrdi2RahUAyPWwQcHn/5BSpQcsJIhkbAqPDgs085aP/4/LQfQopM4etssJOv4Diw
      /Pg+dd0imzkAo0GuoTMzlsAwoJDb4c/3Hvd0fEvr8M3jJ+DYZOsac7PjNPa3z8Ya4DWiy0Ms
      6kNXBEAigE2zlKfQ6ODx+wn4fWi6TjAQYHt9DdMTI9afxOkY6J0yG2UVyetFa9SwLLFnVojH
      RTQ+wP37XxEbu0ypVOL2b/4Lrfw6rfAAfYqNx++m1FzB5/r5AsS/xkRVdC5MX6JRK3Px5i8Z
      qe9TNILUdtZAlIgnB7FsEbMt9Cwh5jWSt4+PPvwFzx9+Tk2x6fN7sBzxbHSBvs8aUddUdMNE
      lFz4fb7vbIMamopmmAiii2DgaHU659aIx8eZmAEkSfpOzY7b7Sb4Du/hdrv56aFHPw5RFI9G
      C3TOX3FmCkDqwbmC4+JcDXp8nKnbjKEpdGQVcKjXG9/5OuUHQrQdW2dlZeNvhmK0qiV6vIvf
      M2xT5fH9z9nerwDQbdWYX1zFMWW+vPsFbU2lWKr9wLv8NBxL5/G9z1ndOXjze8tvvmSv3Gbp
      2SOeLW1xsLfOk8VNWtVij9ugFunlBQ4aXdrVPJ9/8RWtrsqLb+6djRngNYYms7y0SXJ8CrmY
      IS0Gufn+VQ7nBpv1xZcEUpPYegfJkMnXdWYmB8jkq8xdnju0C3Qc9tNp2oqOw2ujP4vN5WV0
      d4gQMh5HINwXRZbbNEv7uKMjP/oA/1FQK2aIj1+nnEtzcTSBILrBMTGrWUyXw7MXW4wNJ0k6
      Ts9PulmtLC0pRTO9yszEIILRIb29TXDST1V2EerssFjrwy1YZFAY84ahr3ey7JDPR0PVKGT3
      uXXtIgtL80TDk2drBgAYmpjGVtt4glHG+7zfaoNadBWNTqdDu90mlkgyNDzM5soScrtBo3No
      omibMisbuxQyaTqq/eZn8YTpo0NHB7lRpK2oHJSrdBUVuXOC4djfwnEcJMn1xg7G3xfCLQq4
      B2aZGugnpFfZWH5JrnUEbdDoFNMpEbmrIgBLTx6Sr9bZyLW5Ohmn2Za5PDdLNBikUq3w/MXL
      nox7GJSdIxx5tdITRNwuF45jIYnS2ZoBXB4/0bCI7gUQ8eNQymyxWazjC0Xwer24PR4igRiZ
      9DaqGGJ0Yop8pU2nkiGz2cIdjPHf/vkfKeQPaOU3Wa+2CEaj1LJZosOTDCV9CG6J7a11YgMj
      2JaM4P4JB2+OgHhqjPUHD0i8CspGabC5uYkYiJOMJBgcHaHxzRKxHh+IB8AxOcjuM335BrVq
      iauf/Feu3ChRNAKUtl4QGbvMaCKMaA3TH5IoKr0Nyr7/2efU8fPB3Dj3n67wwUcfsvXy7/BQ
      /OnERlF0/P7e/NHO1aDHx5kIyrZt+9jG6gWKopwHZR8T50HZf4dYlnUelH1MnPgiOJtOYwCq
      3CBfeIcWnFIjXfjuFub3oasyzXYXsA9jUN+Bcvm7feq3Vl6ytJbmtBwN1pUmj+89pP3q2G92
      a4m7d++Sz+/zb/92l1anQa54NGpQ25S599ld5lfSb9qg6ZcP2Cy0efbwM+49fMrW2gL3ny1T
      Pcj2uA1qsPTNI7LVDtX8Nn/69C7lRpuv7909+UWw1m3w+MFDUsMDFHaz7B+k+PD9KwCU9rZR
      RReVjkbIJdGq7hPtT7FfaiHZE2y/+IbE9C1uzI6901iWobC2uElsaAy1lmNvL8d7H7yHG8BW
      KFZ12rUC8UQMUzMotRR8HhFT1xEFk0JF4cqNucPXO20c9wAhVwfNsPGfAq9Ety/E+GAE/dXT
      YKvTwe93U88XQdBY2twn6PEwmAwfGtT2EEeu0TTdVHc3uT43hd2tUWl28EV1KpUGk9cvodQy
      dFoGOUEmQqCHrWMXF6fGyJsGtWKb3378Ho9XFhgYvnHyM4A3EOXmjeuIos3FyzdIRt4uJJPD
      /WxuF+jTqoihJLHUKBdGU0QiIVRVZ3RslEql9D3v/h8RmZi5jAedUHyQ65RiFgAAFn9JREFU
      C/3ht96goo9Gfh3ZgGyhjmUojE5OodQLlNoablHAUFt035wXlzBNFdM0OQ2qhfWFxxTqyrcc
      sR26qs30xACaP8Wdm9fwyG267SYVpfdtUDE8zG8/vkk0cKi32lpbplgqs7md5v07v0Y52CA5
      c4vZkRRtw6GY2+3JuOX9LZa39hFf5R4LtkGnq+JyeVD17sl3gSzLQhQE7EO/chzLZGPl5WFQ
      9uQsyYgfUQBBcoNjI4nCq5QXC8vQQfLg835/2+5NULauolsCpqECIh4cyq0KlVfWiP0hD5Fo
      mGpLJx504QqEUTotBEtHNQwK5RZhv0CtKROIJAm7VDQpzMRwqqc2HkclhlNaZR59PY8/NcbF
      4TguW2FhI8ftj+5gdhqEgh6eLWxx6/Z7vQ/Ktg2ePnrIwPR7BCSdWDyJozZpmB5qe6u0CfH+
      lSnqzS6OUqGoerl6cfSH3/hdsFS+vv+IjuDl1tVp1jZ2uXn7ffZW5k++AI6D07YIPleDHh8n
      vgY4Dtxu96myRpRl+Twn+Jg4Pd+Kn4HQ47SRo0aSpPMCOCakP/zhD3846Ys4LlS5SUM2CPjd
      5PYPCIdDP/gz+7n973RqTi9/Q9OOEe3rrdRBUZQj2QdQmiXu/vkzGoaH4VSMzMZLHj1+hmmY
      3Lv/NZFElFrLIBo6Am9Q2+T+3X+n2LYZHkwg14vcf/iMwYkxNp9+SdEIUd9b5PnmAT5HwdUX
      w92zTpTO8y++RPbHUQ42+PLRU3x9UZ4//PxszACvsS2N1YVVwqkRrGaBnXSGD359Bx+A3SWT
      a1Mr50gNJrFUlWLHxO+20RQDFwr7FY0P77zP63vzhekp0pXTscPcaTWoFva5/g//RGHrBTDF
      2PRVDNtBsB0EwWJndx/LsBlK3cbT40WwpeTZLxlMDxwqavtiA0yOlLEdiStXLrNUcbAsC13p
      kMsr1HQP12fHf/a4miKj2yJXr10iY9qUOhb//Ps73Hu5xPjMxyffBj1WXgVlh70QTY1yZTTF
      m4afGKBd2EDy95Ert3CJArNzczhqh7am09fXh6g3eXte3EHpKodpl6egj1AvH6BaIuX8Lqoh
      YhgGG0svEPuGGJ2Z43cf38Jvmoi2RU3RfvgNfySCO8T45DidWg5NNzANDbkjo6gqsiwjyzKX
      bt7hyuQopuimUy/0ZFylXafaaCF3OsiyjGCo7OaKBHxhqtXc2egCvcYyDUwbbNPAQcCNQ7GS
      5+BVUPbYQIxgMECraxLyiojeALrWRbRNFE2nXJfxoVCstQnGkvgsBdVxMz1zoad3zKMSwzm2
      ycbqKgOTl7C1Ft1Gmf1Sk8nZawTdDn0BN6sbWS5dmu75RhiOQyGzRUcMk+hzI9g6a5u7hFOD
      OM0qLVPg+vWr2KYFWoOq5mFyuEdhfbbGy/kFNDxcuTTFzm6OuStzHKTXzkYBnLaPWK/Xz9Wg
      x8SZWAMYhnGq9gF0XUfTev8Ycs5fcyYK4LThOM55UvwxcaYKQOnUaWsSqf4+Mns5xid+WES3
      l9ljYnzib/yPxdriInXV5vb77+M5BXGphtriyf2vmProXxgKQTG9zPPtAjemR3k8v8rV2x/i
      ktxcGE32fGxbafD5w2cc1Dr8r//53ynurrC0lSc2OIJLrlFsdghHQjQ1kSsjUZJTcwR69js1
      ePHlV/hmbuGpb7O6W2TmynV2VxfOVgHgWGyvrZCLJhC7NfZ397n5m48P/X5shfRehWrxgIGh
      JLauUtVE3JbMmmrhsZrslE1+/etfvGqDioxPTuCptDktjituX5grly68EQDu5Yv4XQK6I+Dz
      eqmV9pHbOqlUjD5Pb78aoj/Kb+5cZzmrIYoCbrcHxzKQXAFmrySRMhW8kka31CJfKlPWXHxw
      beZnj9so52gYHi5fu8y+CR3Lyz///hPuLy0zc+WXZ6wNisSFS9eIB91EkiNcnhjiTSKW6Eep
      ZIilUhSaKgGfj0uXZgn4fdimRl80gdv8dhvUZPHlCkgSf9Mf5e8QQ+uwuZlmZy9Ls9Uklegn
      HItRblvcuXWZhN+PZWo0jiApHsdhfTPH3OwonXaTZqtFPDWI3Drg/r3HCJLI5MxVxocG8bgl
      5NZPO/PxHwmEYiQiPtJb26TTOwhGl6/nl4mGkmR2Fs5GF+i1GM62bRznMLQZDk8DlQoZDl6p
      QS9MDOFxSeimg1sSECQXtmUiODambaNoBnLtgFJdJhDpZzAWwhYkIpFQT21EjkoMZ5ka1Wrj
      MKU94MPrcVOr1QjF+hEsE5dbotFoE4lGeh8A7jhouoHH60HXVNwuiVqtQV8kitysYyLSH49h
      2w5YGpolEQr2yBzMsahWqpiIxKNhWi2ZWDyK3GqcjQI4bV2gZrN5HpR9TJyJNYDb7T5V4rJu
      t3tujXhMnIkCeI1tWziOgCQJmKb1ThJp0zS/43UOnVYTR/LSF/T/lVW6oRu4PO6fZKF+VEHZ
      juPQldt4A2FcIji2RUdWCIUC1Cp1ov1xTMPA4+mhuM9xaHU6hIIBKpUK4XgSr0vE0BTqrS6R
      kJ96o4Xk8eN32Ui+EBJ2b68BULsdBLcft2BRa3SI9cfoNutnSw2qdOoUSk18fi+ZnT3cXj+e
      119Sx8a0HUzzMELJtm10TSeb2yfc14dtW8hdFY/X8+pLbZPP5tjZ2yM1OIxLFMCx6XZlTEcg
      s7lJIB7DJYBl2ahdGVuQcL2DZOKo1KCG2mbpyQOE/hnCXqgX8zxd2mAsqPHF0wVkw4WJRLSH
      loSd6j7/+1+/ZEDS2K62ODioMD4ySG53i/2ddRq2n269wNLaJvVigXJDRlFUkole7oTrrH3z
      mKY3QnV7kWz+gKassLW+dbZmAByb4kGOWqOBoLWpF6tc/oc79AE4OumtDOVSmdRAEtFSaQl9
      2M08HdUmaNfZLlv87rd38AgAEj63gyN6efOdVuu8WM0iORD1e9hZ22BiZpT93QKbS4tc/+Xv
      mRiMndjH9/jDTF8Y43U6WnxwlMFKA1dkAJ+4g97Ms7C9Sfg//464/+ffgR3bYHEty9RoAm/A
      Ty2zw8DoLACDg4NU2iYzEyN0DlTCwxdp7izR1GSyuwc4Hj9XpoZ/9jWUMhsUNR+zc9NkTIGO
      6OeXH1ziy5dLTFy8ecYKQJCYuDiL0q5AKEgYG9000W0bQXCh1ouMToyTq3aYSYQYGJqinLFR
      FQV/JImwt0yzaxBxOwi2TqHSwjAsNE3HlgRE8zB4OxCMIIoiLlHn5fwiodgQg4MJCqXKiRaA
      Jld58OAJ5oiN+9IAKA2ePHmCGIhzbW4S3YBcfgXN7I3E27Ed/D6B9dUs8YAPj8uFonQpFIus
      Pr2HIoUYGJ+kXOly/VaMoeA1sgd1djYrdHukSH1tjfjVv/0rWTvEeyNh/t+nD7h07TobS1+d
      jS7Q91HO7ZKvNPEGo8xenOD7RZAOB3vblBoygUiC6ckRBCCzvUq9oxMOhwjGBkhF3yVy47s5
      t0Y8Pk7UGvGM1953ous6AwMDJ30ZZ4ITK4DjHPa0uUJUKpWed0HO+duc2BrgpxxS73YVAgE/
      pqFjI+Jxv9vl/5RD8YahIQhuXC4BRdF65vz8Lng8nqOxRXFs0hurRIcvEg/5sIwuy6s7XL42
      x/bqBhcvX0KVu4RCR2DM6zjkdjcQw8MM9YdwbJ3V5Q0mLs2hVnO0LD/JoEO5KzIa82F5+/BJ
      RygwdGz2ttZPfhHc7TQpVeokBwaQBBeWZWDpMtW2hts26B+ZwO8+bLPkMmlcvhCxsI/cQYWB
      0QkSkXd/3rZMg3KxgCsYJeBxIeHgiFAqlfB6fIjeIMnY4UH5TrtKpdglOTZEcW8XfzTB2MjA
      qYtG/TaN0h5t00NxZZmPP7rN2tIS8WSCF19+iuaP0FjYYnJyjB+2CvjxWHqVTMnAKSyRunOH
      /c1VvKEIy4svMHWRgKiQdby4RBtTjnFhZvoIruItciNPRRZOXgxXyGYRBZFsbptCqcneToZc
      7gC1VkYICuzvvzVrNU0LwdapNztIHj/lg/yPGktXmjS7JtVSnsxejtpehlIhjxX0clBsUi0X
      377YtnH5vJQKJSwbzEbtrY3iKcUwDRIDo3gP+7gYopfhoVHcsSRuy8Stlnl87wtKnd4fxnH0
      DqHEGH0BH44DuiMwODSG22wQiKYY6A8eaoFMh4P8Hl8+et7za/g2lqkSS42d/AwQCMWIxKJU
      mxbZ9DqCP8LYQBwPAuFEmP16k0ymDZKbQDhOIhKg2VWJBCIo7fqPGkuQPCSTSbRug0a5RLqm
      cPHSFMF4P17NDY5CIZ/DtB0El0gyGaPVakAgQADrVN/9ASLRJPcefEFkeJZSqcRwxMu/f/oZ
      V279Er9WRfRIFGurvT8PDEiBIarpu4iRMRq1MolYhPuf/4nxuZt0sius2EF+/aurZN1ujDYU
      1aP9agZCA+x9dQraoLoqU292QJRI9Pf/pD/OOy+CHYtqtYZlOwTDUYK+k1mInlsjHh9nIiHG
      sqxTlRCjqup5ARwTf/czwFmkVCoRDP68zbRz3o0TXwOcdlrVA/aKHS7PTrC5tkpibIZkJACA
      ZWikswdMT02wn15Dc0W5OD74gy1Zl8t1JAXgGF3uPXhIX3KKW1cvoss1Hj5e5oOPb7PwzTw3
      P/mQbqtDor9Hcg3L4PHXD6i1VW5//CtymQzvXbuMIAg0y1kWtor84tY1lp8/JjA4jdjOERic
      xS8aJBI98gT6D6idGo+fLXP99gfUMhsnXwD7W6vkqk2Gxyc5SG8RGppA7JSRIjEKO1kuXLvJ
      cOLwcEjtYJfFrTxXr8yyu7WFFIwTRKYsi9z56D1+6GiuqStsrK0THpzAb7UoyQIjqQjVah2/
      y6auuZibHkcALENldWWF1PgsolJhv6Qwc2mErfVdZq9ee9Oa3S/UGAz5WN3cIjEwQTGXIRmZ
      A8C2TDTNwLF1qm0TN0XU0QH8R9nf/h7UZoO+gQmuzUwCsLyywa3bl1n88t8xwykeP99g+uIY
      juP0xkxYcvPhJ79hcf4ZXsFE0d+ki7CRzjE3FGJ9v8r01Zusrswj2D4qmyv0p4aIxuLvpJz9
      sSy+XGT2+k0CbujSPfk2qI2b2YvjlHPbVLoO2BaCL8L02DChkJ96/W2np1qr43Q7ZAt5Bsan
      EfUOu/tFfJLAu5xi1VWZcHKURmGXheV1Svs5cgf7hOMp2q0mqtJ9k/elqzJdRWFjdZVSyyYm
      2SwsL9FV2xyU3rZmRZeLgNeNZlp4vX4k8e0TpdsXJOB1IYgeBhN9lCqNE80TcwX7MBtFPrv/
      GABbchPwB/Gkpuj3e+jTKzx7+FVPg7INpYHtjREORwl5395vRZebUMCL4zjspHe4fOMOo0NR
      vG4Xe+ll5lfTPbsGAEvr8PDrr2l1FbYWnrC0UyYWCZ38DGCoHbIVh+s3PyKa3sAbiRANeEGQ
      8Pt8hPrcPHv6BNtxMzaeYsgTZSAR4NM//pHBuY/44OZVii2Ld+rXODbp9VUGJ2cYlQTauptw
      LEk87Efx++l0bdYX5pF1k0gshuTyEg/HceQqG/kmV27PkM1UsJUKT55sgSfIcNjFYrbOjbkp
      VlfniabGWJh/gmYKpFL9ZLMZDNxIaov4yBiBI7irvSuWqSPLComBSYrFItPDcf705y+49fHv
      ETolghe8VB4u/sUX9efSqNSZmr1Au5RhbW0NFR8jyRADEQ+fv8hyY26c+f19ZNvFB5dGkPoS
      2HqHSKS3R0Ilbx+f3LlDNbfFs5VdRkMij56dEWvE15iGjmmDz/tj2ps2ma11VFeE2cmfr09/
      F87VoMfHmSgA0zRPldNaq9U6L4Bj4sQfgY4D27ZPVQGYpnnuDXpMnPgi+LRTyu3wfH6BdqfN
      4svn5MpvF8hKq8r8/Dz7pTqOpfJyce1EPbRMvcvC00c0Xq1x27UiT18s4xgtPvvTZzS6XQ6K
      7xBW/hNwbJ3HX33Bk4V1HAfa1Tyff3aXrWyFl4+/4t7Dp+xsrfD1yzXqpXyPg7JN1uefka/L
      NIp73P3sS2rtLs8efXk2ZoDXGGqHtbUNAv3D9NGlLMNQMkS11iLgspBtPzMXxxABS1dZW18j
      NjiJ0ylRrGlcmBkhs7vP5Mxlwv5Dm5VocgTb3CdfPGB48jKVQhaSh7u4nkCYRKwPpdsl2yrj
      YOPAiWmKRMnDYDxI14CoD3x9UXzuClazjClaLC6n6Y/2kUrGeq4Hsk2ZruXGJbdwgEA4xlCq
      n067Qb3e4eKNKzTy28iyQQ6FhBQk0N+r3XCRoVQ/ZV2nnK/y8e3LzK+9JJG4dLZmANPQSQxN
      orVKrG5sI9frVBoNRsfHsUyTrtzmtWJCU9p0ZYX01iYdy0vCJ7G+uYaiaTRb8pv3bJQPkCIp
      +oNeLNv6izu8bdsE+0Loco2dTI783g6ydnKSDFFy/cUZCrfHiygIuBIXeO/SBUJGg/LBPvl2
      74Oy0VVcgQiWqb1yv3aIRGPoSoeZK9cpbL0keeEqI4kYDblLemuzJ8MeBmXn8L7WdTnOq3Bz
      Ecs2z9YMgGOzu7XJ+Mwc0aCfqgyJ/iR+jwuv14tPEEmvLiDrFtF4An9fH6lYkmZui62Sxsf/
      cIO9nTyO2mB+fgfcfoKihlyqMXFhhnI2TSw1wvLCPLoF8f449VqdgbELXL16nWqlQp/35O45
      mlxjfmUPIW7jmkiB2mRvbw8xECMVDHH5VpKnz1ZJBHovAhT9/fisTcT4MPVaGcFUWd9MM3np
      Gq3iDk5wkGTYi2QOEQ26KKnenoybHJ0maak8uveANj7evzzJi5Vd3v/gNjvLz85GF+iNN6hl
      YjkCbtePsXN2aFQrWJKX/ujx2BWeq0GPjzNRAIemuKfnY9ZqtfMCOCbOxCPQUdgMvsbQVHTL
      IeDz0u12Ed0e/K822hzHQVO6iG4fHreIpul4vN4fXARLknR+KP6YOFPWiI5jo+saCAKObWGY
      NqIgYJomjm1jWDaSJCG8fq2mgSDi2Ca6YSGKApqmH77mlVislM+ws7mNLdis7+7j9QYIv7IW
      lKtZFrcO8AdDOHKZLx6vMn1h/AcL4MisEbsNPr/7Z2qai+FUjGJmg4ePnmCYGg/vfU14IEW1
      2iEaPhopdqewzd0Xu8yMD9Et7fLHLx4iePzsLD5naXMPtV1hMV0g4KiIwWhPg7Lnv7qH4o+j
      l7b54uFTgtF+5h+dsaBspVVlcSWN4PXROdhiryZw58NZdNODWt7Gjkzx0c05BAEstc0f/+//
      ITZ5k7hbp1mRCQ/7mX+6zEe//x9cHj/cqQ2FgnRNB4/bi2SptDoyIwOH/1cr1bExqNaqlNUu
      48nw4aNYr73335FarcClW7+nkFkGLpAam+GaIyC3Gui2wcbmLpJtMTzU3/OgbMe2WMnWiXoO
      NyRrlSoWEvFYP0G9TmO/QVdV6LR0cnmZuunl8oWfLz2xLQsbiStXZsiYFrm6xj/+9kPuLywy
      MvXh2WqDgoOmqYiSi1A8xY2rlxDdQW5cmWFoeIR6ucBrV8But01i+CJeTAzdwDAtJLeXS1du
      kAi/7VAUCwXcGLQ0E7fkRpbfHp3vH0jgmDZKp4mlq+zu7dLVT24t4hYl2q0aunH4IQ92NzH9
      /cxc/wX/8p9+RcTo4JYg11J6PrZS3WEvW+T5y3V02yEyPMU//e4Oi0+fEBqZZiBgMnH1E96b
      HkXBQ6eW68m41YNdNvcO3vxbNFWqjRZed4C2XOf/A9dHhESmgIT+AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
