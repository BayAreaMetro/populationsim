<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0305.1200                               -->
<workbook original-version='10.5' source-build='10.5.2 (10500.18.0305.1200)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='summary_melt' inline='true' name='federated.0c1618y0pzcyy314fgtcd18xl11n' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='summary_melt' name='textscan.1pnhni109lpp0v1c9n81r1sx10ir'>
            <connection class='textscan' directory='C:/Users/lzorn/Documents/populationsim/bay_area/output_2015' filename='summary_melt.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1pnhni109lpp0v1c9n81r1sx10ir' name='summary_melt.csv' table='[summary_melt#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='geography' ordinal='0' />
            <column datatype='integer' name='id' ordinal='1' />
            <column datatype='string' name='variable' ordinal='2' />
            <column datatype='real' name='control' ordinal='3' />
            <column datatype='integer' name='result' ordinal='4' />
            <column datatype='real' name='diff' ordinal='5' />
            <column datatype='string' name='type' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[summary_melt.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geography</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geography]</local-name>
            <parent-name>[summary_melt.csv]</parent-name>
            <remote-alias>geography</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[summary_melt.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variable</remote-name>
            <remote-type>129</remote-type>
            <local-name>[variable]</local-name>
            <parent-name>[summary_melt.csv]</parent-name>
            <remote-alias>variable</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>control</remote-name>
            <remote-type>5</remote-type>
            <local-name>[control]</local-name>
            <parent-name>[summary_melt.csv]</parent-name>
            <remote-alias>control</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result</remote-name>
            <remote-type>20</remote-type>
            <local-name>[result]</local-name>
            <parent-name>[summary_melt.csv]</parent-name>
            <remote-alias>result</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diff]</local-name>
            <parent-name>[summary_melt.csv]</parent-name>
            <remote-alias>diff</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[summary_melt.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Percent Diff StdDevP' datatype='real' default-format='p0.00%' name='[Average Percent Diff (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='STDEVP([Calculation_654147898635972608])' />
      </column>
      <column caption='Percent Diff' datatype='real' default-format='p0.0%' name='[Calculation_654147898635972608]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[diff]/[control]' />
      </column>
      <column caption='Percent Diff Average' datatype='real' default-format='p0.0%' name='[Calculation_654147898733780993]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Calculation_654147898635972608])' />
      </column>
      <column caption='Percent Diff Min' datatype='real' default-format='p0.0%' name='[Calculation_654147898734182402]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Min([Calculation_654147898635972608])' />
      </column>
      <column caption='Variable Group' datatype='string' name='[Calculation_870039169981157376]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if(findnth([variable],&quot;_&quot;,2)==0) then&#13;&#10;  [variable]&#13;&#10;else&#13;&#10;  left([variable],findnth([variable],&quot;_&quot;,2)-1)&#13;&#10;end' />
      </column>
      <column aggregation='None' datatype='integer' name='[Diff (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[diff]' peg='0' size='1' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='integer' name='[Percent Diff (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-2' formula='[Calculation_654147898635972608]' peg='0' size='0.01' />
      </column>
      <column caption='Percent Diff Max' datatype='real' default-format='p0.0%' name='[Percent Diff Min (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Max([Calculation_654147898635972608])' />
      </column>
      <column caption='Control' datatype='real' name='[control]' role='measure' type='quantitative' />
      <column caption='Diff' datatype='real' name='[diff]' role='measure' type='quantitative' />
      <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Result' datatype='integer' name='[result]' role='measure' type='quantitative' />
      <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
      <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.465776' measure-ordering='alphabetic' measure-percentage='0.534224' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:variable:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;hh_size_4_plus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;gq_num_hh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;hh_inc_15&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;hh_inc_30&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;pers_occ_manual&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;gq_num_hh_county&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;hh_inc_100_plus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;hh_no_kids&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;pers_occ_services&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;gq_type_univ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;hh_wrks_2&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;hh_kids_no&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;hh_with_kids&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;hh_size_1&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;pers_age_65_plus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;hh_inc_15_30&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;pers_occ_military&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;hh_kids_yes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;pers_age_20_39&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;hh_size_2&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;hh_wrks_3_plus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;num_hh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;pers_age_35_64&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;pers_age_20_34&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;pers_occ_management&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;gq_type_othnon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;hh_wrks_0&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;hh_size_3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;gq_type_mil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;hh_inc_30_60&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;pers_occ_professional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;pers_age_00_19&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;hh_wrks_1&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;hh_inc_60_100&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;hh_inc_60_plus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;pers_occ_retail&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='HH Pct Diff Bars'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</run>
            <run>&gt; Controls</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='summary_melt' name='federated.0c1618y0pzcyy314fgtcd18xl11n' />
          </datasources>
          <datasource-dependencies datasource='federated.0c1618y0pzcyy314fgtcd18xl11n'>
            <column caption='Percent Diff' datatype='real' default-format='p0.0%' name='[Calculation_654147898635972608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[diff]/[control]' />
            </column>
            <column caption='Variable Group' datatype='string' name='[Calculation_870039169981157376]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if(findnth([variable],&quot;_&quot;,2)==0) then&#13;&#10;  [variable]&#13;&#10;else&#13;&#10;  left([variable],findnth([variable],&quot;_&quot;,2)-1)&#13;&#10;end' />
            </column>
            <column-instance column='[id]' derivation='Attribute' name='[attr:id:qk]' pivot='key' type='quantitative' />
            <column caption='Control' datatype='real' name='[control]' role='measure' type='quantitative' />
            <column caption='Diff' datatype='real' name='[diff]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_870039169981157376]' derivation='None' name='[none:Calculation_870039169981157376:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column caption='Result' datatype='integer' name='[result]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_654147898635972608]' derivation='Sum' name='[sum:Calculation_654147898635972608:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control]' derivation='Sum' name='[sum:control:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diff]' derivation='Sum' name='[sum:diff:qk]' pivot='key' type='quantitative' />
            <column-instance column='[result]' derivation='Sum' name='[sum:result:qk]' pivot='key' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]'>
            <groupfilter function='member' level='[none:geography:nk]' member='&quot;TAZ&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]' field-type='quantitative' max='1.0' min='-1.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]' scope='cols' value='true' />
            <format attr='height' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]' value='42' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]' value='39' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='solid' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline1' value='false' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='solid' />
            <format attr='stroke-size' id='refline1' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:control:qk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:result:qk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:diff:qk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:id:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]' z-order='1' />
            <reference-line axis-column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='stdev' id='refline1' label-type='none' scope='per-cell' symmetric='false' type='sample' value-column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]' z-order='2'>
              <reference-line-value factor='-1' />
              <reference-line-value factor='1' />
            </reference-line>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Variable Group:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Variable:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]&gt;</run>
                <run>&#10;Id:&#9;&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:id:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Control:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:control:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Result:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:result:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Diff:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:diff:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percent Diff:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk] / [federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk])</rows>
        <cols>[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='HH Pct Diff Distribution'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</run>
            <run>&gt; Controls</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='summary_melt' name='federated.0c1618y0pzcyy314fgtcd18xl11n' />
          </datasources>
          <datasource-dependencies datasource='federated.0c1618y0pzcyy314fgtcd18xl11n'>
            <column caption='Percent Diff' datatype='real' default-format='p0.0%' name='[Calculation_654147898635972608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[diff]/[control]' />
            </column>
            <column caption='Variable Group' datatype='string' name='[Calculation_870039169981157376]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if(findnth([variable],&quot;_&quot;,2)==0) then&#13;&#10;  [variable]&#13;&#10;else&#13;&#10;  left([variable],findnth([variable],&quot;_&quot;,2)-1)&#13;&#10;end' />
            </column>
            <column aggregation='None' datatype='integer' name='[Percent Diff (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-2' formula='[Calculation_654147898635972608]' peg='0' size='0.01' />
            </column>
            <column-instance column='[geography]' derivation='Attribute' name='[attr:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[id]' derivation='Attribute' name='[attr:id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_654147898635972608]' derivation='Count' name='[cnt:Calculation_654147898635972608:qk]' pivot='key' type='quantitative' />
            <column caption='Control' datatype='real' name='[control]' role='measure' type='quantitative' />
            <column caption='Diff' datatype='real' name='[diff]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_870039169981157376]' derivation='None' name='[none:Calculation_870039169981157376:nk]' pivot='key' type='nominal' />
            <column-instance column='[Percent Diff (bin)]' derivation='None' name='[none:Percent Diff (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column caption='Result' datatype='integer' name='[result]' role='measure' type='quantitative' />
            <column-instance column='[control]' derivation='Sum' name='[sum:control:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diff]' derivation='Sum' name='[sum:diff:qk]' pivot='key' type='quantitative' />
            <column-instance column='[result]' derivation='Sum' name='[sum:result:qk]' pivot='key' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]'>
            <groupfilter function='member' level='[none:geography:nk]' member='&quot;MAZ&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Percent Diff (bin):qk]' field-type='quantitative' max='1.0' min='-1.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Percent Diff (bin):qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Percent Diff (bin):qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]' value='104' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:control:qk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:diff:qk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:result:qk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:geography:nk]' />
              <tooltip column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:id:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Variable Group:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percent Diff (bin):&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Percent Diff (bin):qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Variable:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Id:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:geography:nk]&gt;</run>
                <run fontcolor='#787878'>Æ  </run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[attr:id:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Percent Diff:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[cnt:Calculation_654147898635972608:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Control:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:control:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Diff:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:diff:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Result:&#9;</run>
                <run bold='true'>&lt;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:result:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.75762432813644409' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk] / [federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]) * [federated.0c1618y0pzcyy314fgtcd18xl11n].[cnt:Calculation_654147898635972608:qk])</rows>
        <cols>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Percent Diff (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[Percent Diff (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='HH Raw'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</run>
            <run>&gt; Controls</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='summary_melt' name='federated.0c1618y0pzcyy314fgtcd18xl11n' />
          </datasources>
          <datasource-dependencies datasource='federated.0c1618y0pzcyy314fgtcd18xl11n'>
            <column caption='Percent Diff' datatype='real' default-format='p0.0%' name='[Calculation_654147898635972608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[diff]/[control]' />
            </column>
            <column caption='Variable Group' datatype='string' name='[Calculation_870039169981157376]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if(findnth([variable],&quot;_&quot;,2)==0) then&#13;&#10;  [variable]&#13;&#10;else&#13;&#10;  left([variable],findnth([variable],&quot;_&quot;,2)-1)&#13;&#10;end' />
            </column>
            <column caption='Control' datatype='real' name='[control]' role='measure' type='quantitative' />
            <column caption='Diff' datatype='real' name='[diff]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_870039169981157376]' derivation='None' name='[none:Calculation_870039169981157376:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column caption='Result' datatype='integer' name='[result]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_654147898635972608]' derivation='Sum' name='[sum:Calculation_654147898635972608:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control]' derivation='Sum' name='[sum:control:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diff]' derivation='Sum' name='[sum:diff:qk]' pivot='key' type='quantitative' />
            <column-instance column='[result]' derivation='Sum' name='[sum:result:qk]' pivot='key' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:control:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:result:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:diff:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:Calculation_654147898635972608:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:control:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:result:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[sum:diff:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]'>
            <groupfilter function='member' level='[none:geography:nk]' member='&quot;TAZ&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]</column>
            <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]' value='36' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]</rows>
        <cols>([federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk] / ([federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk] / [federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='HH Summaries'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</run>
            <run>&gt; Controls</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='summary_melt' name='federated.0c1618y0pzcyy314fgtcd18xl11n' />
          </datasources>
          <datasource-dependencies datasource='federated.0c1618y0pzcyy314fgtcd18xl11n'>
            <column caption='Percent Diff StdDevP' datatype='real' default-format='p0.00%' name='[Average Percent Diff (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='STDEVP([Calculation_654147898635972608])' />
            </column>
            <column caption='Percent Diff' datatype='real' default-format='p0.0%' name='[Calculation_654147898635972608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[diff]/[control]' />
            </column>
            <column caption='Percent Diff Average' datatype='real' default-format='p0.0%' name='[Calculation_654147898733780993]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Calculation_654147898635972608])' />
            </column>
            <column caption='Percent Diff Min' datatype='real' default-format='p0.0%' name='[Calculation_654147898734182402]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Min([Calculation_654147898635972608])' />
            </column>
            <column caption='Variable Group' datatype='string' name='[Calculation_870039169981157376]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if(findnth([variable],&quot;_&quot;,2)==0) then&#13;&#10;  [variable]&#13;&#10;else&#13;&#10;  left([variable],findnth([variable],&quot;_&quot;,2)-1)&#13;&#10;end' />
            </column>
            <column caption='Percent Diff Max' datatype='real' default-format='p0.0%' name='[Percent Diff Min (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Max([Calculation_654147898635972608])' />
            </column>
            <column caption='Control' datatype='real' name='[control]' role='measure' type='quantitative' />
            <column caption='Diff' datatype='real' name='[diff]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_870039169981157376]' derivation='None' name='[none:Calculation_870039169981157376:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[Average Percent Diff (copy)]' derivation='User' name='[usr:Average Percent Diff (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_654147898733780993]' derivation='User' name='[usr:Calculation_654147898733780993:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_654147898734182402]' derivation='User' name='[usr:Calculation_654147898734182402:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Diff Min (copy)]' derivation='User' name='[usr:Percent Diff Min (copy):qk]' pivot='key' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[usr:Calculation_654147898733780993:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[usr:Average Percent Diff (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[usr:Calculation_654147898734182402:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[usr:Percent Diff Min (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[usr:Calculation_654147898733780993:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[usr:Average Percent Diff (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[usr:Calculation_654147898734182402:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c1618y0pzcyy314fgtcd18xl11n].[usr:Percent Diff Min (copy):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]'>
            <groupfilter function='member' level='[none:geography:nk]' member='&quot;MAZ&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</column>
            <column>[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]' value='98' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]' value='128' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0c1618y0pzcyy314fgtcd18xl11n].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk] / [federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk])</rows>
        <cols>[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='HH Raw'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card mode='radiolist' param='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='HH Summaries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card mode='radiolist' param='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[:Measure Names]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='HH Pct Diff Distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='radiolist' param='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='HH Pct Diff Bars'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='radiolist' param='[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[io:Household Income:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:Calculation_870039169981157376:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:geography:nk]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:id:ok]</field>
            <field>[federated.0c1618y0pzcyy314fgtcd18xl11n].[none:variable:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='HH Pct Diff Bars' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='HH Pct Diff Distribution' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='HH Raw' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='HH Summaries' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29Z3Qc15Xv+6uqrs4RjZyJSIIkwJwpiqQok5QsWcFRzr62x2HujO07a2Y0
      z8/Pa711Z55nfJ/v+L7rKOcg25JlyZIlWmImxSSSYAABIueMRufcVe8DKAmkAFIgQRJk1+8T
      sKv69Knq+p86Ye+zBVVVVTQ00hTxdldAQ+N2oglAI63RBKCR1mgC0EhrNAFopDWaADTualRV
      JR6PT3tcE4DGXU0ikaCjo2Pa45oANNIaTQAaaY0mAI20RhOARlqjCUAjrdEEoJHWaALQSGs0
      AWikNZoANNIaTQAaaY0mAI20RhOARlqjCUAjrdEEoJHWaALQSGs0AWikNZoANNIaTQAaaY0m
      AI20RhOARlqjCUAjrdEEoJHWaALQSGs0AWikNZoANNIaTQAaaY0mAI20RhOARlqjCUAjrdEE
      oJHWaALQSGs0AWikNZoANNIaYbpE2bFYjObm5ltdHw2NWUVVVRKJBHq9fsrj0wpASyCvcTfw
      ZoqkqqqqKY/rpvugIAg3rVIaGrea6Z5nbQygkdZoAtBIazQBpCmhoSHampvxX2EPTmO/W9EE
      kKYkIhECPh+JK+zJSISA3/8O+93KtIPg6VCVFLGQD68/REKVkHU6TC43dhliIR/j/hBJdBgk
      CaPLjd0gTVmOkowT9I8RU2RSsQgJ9Dgzs7BISUJBP5IlE7MMMd8QYTkTp0Eh6B8nFFchGScp
      mLBZJaLBEAlVxup0Ybfob4uiVSVByO8nHE8hCDoMZjNmixFJiRPyB962m8yYrcZpb3oqGiKc
      UkhGoyQUAYPJitViRAkHSOjNmGUJJRknlkgg6S3olRC+iEIqHiGp6jAY9YhKnGgshWi0kmE3
      cbWpjFQiSmB8DCWRQtBbcTnNgHqZXdRbcTrNTP0r3vnMTACqSszbzqu/+RV7LnrAYEIZjlD7
      tf+LjxR5ePU3v2TvxXGwWtENhKj56jf5VK1ryqLCo5384fvfoFm/Gpu/g9YeP2u++G98tGyc
      V577GRk7/o2t86DxmX9md9l/8OXFXl742bc5OJJNgTBMc6fA8h1LiDSfpXVQYPH2j/HxR1eQ
      cct/qQTejjMcOHKK7vEYaspIXkUdmx5ciq7jDAdeP02PN4qaNJBbvpR7H1pF9jQl+c/v46W+
      CMrIMN5giozyZWzeup7ooRdoq9jB/eUZxD1d1De246h5DzX+g/z6SARbtI+xkI6M7CwchhAD
      A14ipkV88tNbmPruA8Tx9F3gfEczIU+QpG4eD33mIZzE8fRe4HxbE8HxEIpcxkOffi8lU0+j
      3/HM8A2gMta0m9das3jiyX9kRXY3P/vSU5BIMtq4mz3tOTzx5D+xPLubn37xx5BUrl6cZKVi
      7SN8bGMO9T/8Ir9sHYKyq9xpnY3KDY/zpR1u/vrNr3DctIl//j8f48KLv2JPezfe6AoyLDO7
      ohsmPsz5xlFyVz3MA5VuxtsaONcUnLBfGCN/zft4sCIDb0cTDY3X6lkrCM4qHrz/EWzhTs5c
      7MIXAsNVPiFnLuDhLe9FHGnl+OlmXEsf4YFcidO/epFBuIoAQLYWsGrlvVS6ZNpf+h29fnAC
      sq2AVVs2UemUaXvp9/T4oSRzxnfmjmBmPQZVJT4yRqxwARV5ZkRJQhIEBJUJe8F8yvPMiJI4
      Yb9GcZLBgN1ux6gzYjSKXHPpQdZjtlgw6nToRAFHZhYWg4TBbMagqnA71u6ifiKuEirzMtAJ
      wsQ9mWzPdaF712sqBvJKSnAZJWTZgNlsuuYnXLkF2PU6dLKZzNwcMlw2dJIZs+VaP60eZ2YO
      2ZlWdJIBu938Vh2cmTlkuyfsDvu163AnMzMBCAKy24mhp5nOsQhxvx9vPI4igN7tRN/TQtdY
      9G37dVYqFosTCgcIjbbQ1Bm85ovktmK0IQ930j4SQEklCPu8BFOA3oDS30bLSPCSfXzCfh2I
      QopoNImSijDa30HPUHhWLyGdmWEXSMC94D2sy/4W//q5PTirSpCGwqwQRDIX3M/azH/nv39u
      N87qEqThMCuvo0IGi51MXYwffv0zvFSzmcWpJNd8ldxO5FyWLmzl2ee+x5+D4MwqpiivDAxF
      rK7r4tnn/jcvBQWcWUUU55df11fkL6pk729+xDefEcnNy8WVmzPLF5G+TOsLNDUqsUgfXc0h
      dE4D8b5j/PJ3Q+x48lOsz7ZOOq+Fn3/hRyif+So5r36RH5+4vBRJX84XvvvvbMm6VAlBmJHv
      kSDAm6dP/huEa3ejZp0Qg50jxEQDRr3CcHczg8Ec1m6pwfJWxVKMXRoDZBT6OLTrMH2XDQfM
      VG/ayc576sjQX7oO1Es9OoGp+3Zvn3P5/RMu3ROV8HgzL//kl9R7J39OxJmzgQ9+eRuFAJe6
      qhOfn/RdV9jvVM+YeDxOR0cH1dXVUx6fsQCCY+d5/vu/4o2hCFgLWPPg+3loVSkm3eTeVB+v
      fvdl2PEBtlXYb+wK5jxB2o8e5tCZVnwJAVdxHRvuWUWpU550Tgr/QA9dvWGKVtbgvG11TT9m
      WQAaGncW1xKAthKskdZM+waIx+N0dnbe4upoaMwuqqoSDoexWKZeIJpWAIqiEI/Hb2rl7jTi
      8Tip1HXOZWrcFpLJJMPDw+Tn5095fNppUFEUMRqNN61idyKCIGgCuMMQRRFBEDAYpl5P18YA
      GmmNJgCNtOb2CSDm5+Kx3fz1VA+x21YJjZkQ6O+kvaefcPJ212T2uH0CSITpaTzJiZbhtAm+
      uCbBNo6eH55TO3IkE10cevY4w0DEM0j/yBjxueybNUNmHBCjxPw07P4FP356P/1JN6W5Oaz6
      /Fd4tFSkYffPeerpA/SLuVRnZbL0s1/hsap3rgQryTgnfvtN/v3pRqLCPo4/XcfH/4+NdD21
      i3lf/Z88UgHDp1/g6bNxduwoY++Tv2Sgwkrn6Sb0VffxqU9/iJXzHETbXuHf/vWnNPj0zN/y
      AT7zoe2Uu+Qpan2HkPAz5Jlb9Zd0uSzZkokBGL/dlbkJzDAgRmG46U/8/I+j7Pz6U9w3r4+f
      fvkpAoE4wxde5hfPeXjg60+xdV4fP/nij/EHp27bBUlm1Ye/wT/Iv+CYaSt/94FlWFCor/8T
      3991nO2l82g634vJtASXQ8Q35KP4b7/BP/1dhEO//AGvvXaEokfzePqbu1jwlX/lM8YBXn36
      VV7Zn88T712O85YGxaQIDzWz7697ONvjQ5AyqFiyinveU4dl8CJ7/7qHs71+BMlBee06Nu9Y
      ylSu9cGOIzz3lz00DiQ5f9BMbtlK6hbbUJMOFiwuxyKqDNe/yHnzBirjTdSfOkPXmB9/XM/C
      Le9n+4oCxNAgZw7v5cjZLqK6XFa992E2VGZM8yNH6ax/g3PnLtA15sUfk6hcvhZ9z0kuDsYp
      XLOdHWtrsIpt7H7Bz6ZPrLm5t/E2MeOIsEhnN8HqDayotCMxhCyIKKpKuKuXUPUGllfakRhE
      FqfvXb1jjxZBQECi5j3vJ/f/foWjF99Lb0wib+E8nIYhBNFCVrYTg8lBRVUBhxqGCbd5OD3c
      TcNPvsNRAcDOMpsRQYFbGr+XHOPsGx3YVzzK157IwtfZSENL+JK9E8fKx/hvH8vC39VMU0tg
      2mKs89bysY8Yef6cm4c2FiEIAvHRZo63eBnzxrE4AjR3mpn/oIVUo0zWgk1sWjofc6yPg3/a
      x4Xyx3B2t+FRcti4cwlycowL+w/RW/oQpdO+VCQc5Wv48OM1WEPH+fXzEbY99lkeULo42Bwl
      EklgvdUBRreYmQlAEJAsFnTeYTzBBA4pQiSVRC+AzmKeZI8STia5aiiFICCqCslIhFhSwSIJ
      6LJXc+/SF3nlz6eYn5dBZVk2OoYAhZSikIp66e/3IekrMbhN5Lnmse5v/4UHKxyo0QBhRY/l
      VodERrxE3OUsKcxEFgVESYdOAMJewpnlLCvKQr5OV0q9u5DcjtOMjHlw+RsYza1jvQy9shmH
      wYZRFtHpClhQKdHkCYNvhMGBMMGoDwGwFOUjJ4DpBCDbyMpyYTPpEGUX2TlZFDmNEDJglJW7
      Ng54MjOOB3BWrWHh7t/zk+/0UlSop30szHxEnFWrWbD3D/z0Oz0UFupp80SouVpRejO5RdnE
      X3ye/2+4hx1PbGdpno2KFcsJ/K83SC3+PEWOiZ8glRhizy/+k2b8hFIOVmxfSmaJhYc2H+KP
      P/pPLmZbMBgyWLjpPtYvLEZ3K4f2ehOSt51+fx4Oi4FoKEAkBcgyymgnfb487GYDsVBwwn4N
      Ql4vcaUIPSlUyUxRkYXmpg4iowHKt7kRSfBmg6CqCklfNxe6dWSVy+g8Dgqqqlixaj4OWSHo
      8aDMeJSXXszwDQCm7DK2PPohxhJJUsFm2kzZ5LhlbPnLeOy/WOkaCiHa/ET3diKkEuz/0X/l
      2XOXFyPJxXzwya+yZNUDfNy9kLGohQKbEVEQkGQL+S438xaWYbrUcIqSjfKla1hpF7BmF1Ja
      lIdJJ7Lqg5/H1dKDP66iMzooKHIzzSYUNw99NvOL2tnz2h94PSFiNDlwOArAkMfC4k72vfoH
      Xk+KGIx2XK7Cq5dlzaEg8io///FJsuatYNP9i8nIqqD0wvMcMy7mI45Lyo6N0nBsP68fMqCT
      LZQtu5eKDAtqMp+BI2/wzM8Po0h6ckuXsHpDDo6bfxfuWGYcD+AbOspPv/FdDg2FUU05LH3g
      E/zNo6vINE3WUjM/+5sfwef+kceKwoxHrvhSQY8rLxfrFfI79oNP8z+O2tn20S/zxL0VmCSA
      ev7j4aeY//3v8mDedV7lLBGLxaZwhYgyPuQlkhKRdSlGupvp9ThZc38dtmQEfyBMPJUiONRH
      T1+czHw/R/ccZ+Cy4YCJinX3c//6BZhjAQLRJJLBgs1uQpfyU//iHgLLNrGxyAXE6L7QxEhY
      JK8kF72kx2q3Y9QJqEqSaDhEOBpHQURvlAn0nWTXM68zOPnrdBbmLXsPO+8pwyxIyHodqHHC
      YbBY9KAkiMRVZFlGEhOEAgomuxE1FiGhiugNBqQ7JEAmkUjQ19dHaWnplMdnLIDpzr58YKtO
      ith693fqsqq8FVT/Zlm3PyppagEEaN6/m90nmhhPCLjLVnLf/Rsoc+knRXKm8PZ10NYRYt76
      2qvs1HD5NUYGGvjrawcJl27lodXlWPQiEKe/rYuwYKW4LI+r71Yy/e818XXX3rjgTmeWBZDe
      TC0AjbnMtQSg+QJppDXaHMEM0Ol0iFdZ39CYm4iiiCxPPResCWAGSJKEJKXD7Pjdg6qqCIIw
      rQC05kwjrdEEoJHWaALQSGs0AWhck2Q0ykhvL6HbXZGbgCaAuUS4m/pmz20PiImN9tE1MEzo
      UuRXPBSir7kZ322t1c1BE8BcIjZMa+/tz86V8I0y6PESu4siv6ZDmwadBZRgN3uf/xMHL46h
      M+axeO16NmxejCvYxd4//YmDzWOIhmwWr7mXe7Yuwj1FGcHWg/zuhV2c60tSv8dCfuUaVqzI
      xoCTqpoSjKh4L77KKXUl1bRx9uQJmnqG8SasrHv8s9xfY4foKGcP7OK1Y81E5CLu+/hHWZs/
      /dY2CV8Px3a/woFzPaTslez44COUhM/x4tPPccEvIOtljHWP8d+2FBIaa2X3bxvpaRpGzF/H
      Ex/fQm4yQMvJvdQPeult7Sair+SR//J+ap0w3HKCV17eT6tXpGj5dj6wvRZzxEvzqX2cGRin
      t7WHiKGKxz73fhY5b1/6GU0AN4oyyrFXjhBf8DBPfjgfb9t5zjb5SSmjHHv5KPGa9/HkEwX4
      L+0OPZ0jhaV8A5/+pIln6zN5bHMJAPHB8xxqHcQxnk+JI8z5M2HmPWoieS6GuXQtn3x/LdZo
      Gy//+g/U5z2Bq6cFr6GCxz9zH/rkIEdf3EXXZx6mZKqli4SHhtPnCGau50v/XIXsOccLz7+C
      4+OP8f4Pm2mImKisqsQlT8QCxxWJkhUP8/jjdrp3PUfzSJxcRwJ/MIKz+n4efjSX8Bu/Zm93
      krLkAGfO9lHz+N/z4ewUrX/9HX8+XcgHqpL4g1FcC7bz8GM5hE/8kr3dCotu427BmgBulOAo
      gdxaVlfmoxdFJJ2MLADBEfx5taypzEf/Lrz4BEG4LA+CIAgYckvJba/HMzpKVvgCfZkrWS9D
      t8GG2+jAYhCR9eWsWnKE88NBUgNtnDo5yNkzxwABs2Me8QhgneILwwFCOjPZxSU49DrUrEUs
      LT1G77BAHlyqy5vOeXpcWfPIrszBBGRm2ukXRUDC4S4go6IIix4smZmIUYgmvKSkSqoKLcjA
      gtUL2L1vEKpycGQWkllROHF+ViZi7Pa642kCuFFkPVKwn5FgEU6LnngkTFQBJB2qb4DhSfZ3
      06eOBAIkVJBVBVW0Ma9QZndHF/HRYUo3bUYkDqqCoiqoqkoqOEBLn4CjVIfelkvtPStYvaoK
      q04h4vehTJdgTDagVxKEvD6iBSbE8DCDXjN2C+BLEAkLJJLKdQTUCOgkI4IywJg/jsWi4ukb
      xegomGlBtwRNADeKMZdyVwtH975AvU5GSAnojHlgyqXC2cLxPX+mXtZBSkA2Tb0/5VuYMsnw
      HeCZ3zWTVbiIlRurceZXk9f4Z06nqvlI1qU5i/g4zWdO0tBgRacqmPJWU5djRY276Tv+Bs8/
      U49Op8OVVU7tWjfWqbwAjC6Kc12cPneA5y6oCIKENWcVS11gUMzEz9Wzq7kRW8Vq3lNhm8EN
      EbDY8yjIbuXYX57jKCBgZMWmXGD6mOjbhSaAG0WQcBRXU2cJkSKFf6SfsZARvWhj3rI1yNlD
      BOMKUb8XzxiMXTzI3sOnGQpOLsTIvBX3sHFlORu2bqB3PIrRnokRQNShi+gpXFbGW/HpOjNZ
      hWU487LR6y3kFRfjkETUwvmsNrgY8QRJImHLyCTZ+zpP/+UNhid/nc5M8aJ72ba2hhXmDEZ8
      YVTZSm5REXYJyJjH8pUmhr1hBKcLg81EWV3dW7EHtupV1Jr0SJJE0fxahDeDvwtWsV7RI5v0
      VCxdjzV3lGACzK5cinKMSCmR4vmLEN4clxesZr1ye7eB0eIBbhgvDbte4ZXjjXgTAq6SJWy5
      fyu1RbZJc8wpRtsbaWj0U7l1McZg5IrEfwJ6sw2r2XhZPHOk7wwvvbybsexNPHZfHZlmHRCl
      s6GZgOCgqqbkqilUQSERCxPwhbl8MzcR2WTFYTPe9fPgWoaYm87UUVfTRcjNJArryp9moszr
      KytduZYAtC7QDfNuQjWvL5xz6nDS2x8aejehCWAGpFIpFCUNlkfvIpLJJKqqkkhMvUuhJoAZ
      kEwmtZjgO4xEIoGiKNMK4G4fA2loXBVNABppjSYAjbRGE4BGWqMJYC4RG6G9L3DbA2KmI+Ef
      pK27n2Ds7pkI0AQwlwj3cq5tLudhmZvCvBG0adBZQAkPcvLgAc50+5D0mZQvqqVueTm28CAn
      D0zYRb2LsoXLWLqybMrdmsO99by27wBne2Gw0U5m0UIWzHchCzaKS3PRoxLsPs5FdQHF9NHa
      1EjX8DiBpInFWx5idakVIealpf4Yb1zoJirlsHLndhZnThdsEqLrYg8JfSYl8zKRkuOc39tC
      7rYlqJ0d9HV30DMwxEgA8pfex7blBaTCPgIRI25Vof3APpQVW6kwA+E+znTGKS4qxGWbWyme
      roUmgBsmQMP+owza57Pz4WxCfZ10DY8RJ4uG/UcYtC9g5/uyCA/00Dc0SoKyKUsxZldxz4YA
      4QsOtq7MR6c3IfpaqR8IYsnMJs+aoP1MP+YttUTbxonq81i9bQPGaBdHdu+i9UMPYR/sJyTn
      s2nHUqSUh/MHjpLz6D1kT/mNSYI+L1GDDRVQ1RievmEcKKiefvq8IuWrtrFKN87p/Q0MLy/A
      GfHi8VnIT+nIzAixry1IxWIr3r4RoikTguHOe5zuvBrPNQKDjLoWsGFhGU6ryHhknOERPwQG
      GXHWsHFxGQ6LiCfsYWh4endgUW/G6bBisjrJzHQjCAKqrRRXbxPesTHc8VZaTCt41CLSq3eQ
      W2CnIDcLPZlsqG3nwoCfUMcpXj3UTkI/EQJmdlVT4Ifsd+YpvDr6TCpqMigvzUNKZlHo6rwi
      kk3AVFWL+dk3GKyuY9SvYHe6scl3no+GJoAbRZQQYn4CsSROq45kPEZCAQQRNeLFH0visOhI
      xeMT9muQiEZJqSCpCogOynIVDg30ozT1krtkNaKQAFSUSwNlJepjYCyFOVdEdBSz/uENLKst
      xiipxCMR1Ku5i74ZWKOkiAW9BOJXHL/kdDTVYy2JBZTPO0fzuUGsgkpmluuOyRkwGU0AN4o5
      iwKplTMnDtNp1RP3B4iomWDKJFds4fTxCXvMFyAmTJUfchIGOwbPOQ4cHMHlLqZyURHWwgqc
      bfs57Svg4dxLcxYJP70d7YyMdCJG/fikhazPs6JGzZxoOMMBbxcmWcRgcFJSu5jcKbcz1WM3
      QU/XOQ77u5CSo4zF3/3jIEoizqI8Tuxpprh2MVm2O3PPVE0AN4pgJKeinEDHEKGkgiBL6BQZ
      WXIyf8USuNiFJ6JgsFoRo+DrPsu5htYrsuboya2upba6kDXLgzQPhhBEcWKKTmfBnlBw11bw
      Vk9GEJFEEQEB2VHC6kULcetE1NL51AkGuge9JAQdVrcbZbSBPccv4p38daKB7LIl1JWWU6p0
      MBIEW2EtG3MFXOggL5+kZEACREkir6YGA6B3l1Bp0mPVT9TB4ipj6VI9htw8jHdg6w9aPMCM
      mDpBhp+Ww69zvKmHkAJGVxGLl61icdnk/Lwpxjov0tQSoGRVKYlhD9HLIlQkrO4ccjId6CdN
      TEdHWnn9yDGGpCruvXcJeRYZiNHd2EpQtFNeXXSNgJgUkcAYg71jRCebBQmzK5eCHPtd3wJq
      GWJmkakFkCIWChGKxEipApLeiNVqQS9dHhCTSiSIJxT0ZuO7Tj+qJKIEQ2FU2YLNrEe8FBCT
      iF/KAaaXtYCYa3AtAdztDcAtQMJgsWO4akJpAUnWY5rhFLkoG7E7r9zYSkDWX73d13j3TCuA
      VCpFMBic7nBa8qZvucadw5sxHNM9y9MKQFEUfL67cTtUjXTizSi+aDQ65fFpBSDLMsXFxTet
      Yhoat4J4PE48Hp/2Wdac4TTSGk0AGmnNDAWgMNLxPN/6m29zwnO5fbjtT3zri/+DN27Am1dV
      FcLeYUa8kWl3UZ57KETDERIp5Qpn4enstxdVVUnGQvi8XgLhOOk+pJ9TbwA1laTlwO94Zn8L
      kWufPkcIceHIaXr9VyYQCtLw+ml6/eEbKz7qpXPQQyw5O4+qGuij/uQRdr34MvtOtjP10DB9
      uI51AJVEeJSLJ3bT5/dA9kI2r6mcsIdGaTq+m95L9i1rq7Hrp1r2UUnFgnSeO8rZ9jGSkpV5
      y9dTV2jDXVZLnaEQebSdQ6fO0OuJMbHVdzHL712DO9LDufp6OkeiGDKrWH/PEtx3lgv6zIiO
      0zWYwu20Y9DdeHulBscIGEuoXZVPSJvkuz4BxGJBfL4Qxlgvr/+2BUvRF6m7wn74ty1Yi7/M
      ffOm8MVVVXwDZ3jtuaOkFpTjYozh8RipXCMtrz/LLlcWyzcbmNgDME7r7t/TmPsJFq8a4uTR
      wzT0x7DZ9Iwd/yO/xcnnt5ZyWzWgRBi8cJTzAx5i+gyqlq5mYdEle+MRzvd7iBncVC9ZRU2R
      fZqVYJVQfwNHTzYxGhFxFy9g+fIFuACL2YwoCgRaDvLSyb5L55spX72OuhIXvtajHDvbR1Tv
      prpuCdVF7stcKiYj5dexOT/BYGfbXZn0bqZchwAEjPZ86jZuZ21WO77DT9HrjVPnEDC9ZW/D
      e/Aper1Tb0YEAuaMeazbKTAWGuD8kTN0GhezseptsRgyy1m5cIjzz7Sw5rNf532583EHGnmp
      bYB5Gz/C9iXZhPsv0plw3v5+nCBjzcoiw5VH0Bch1NuGv6gcBB3WzGwyHHkEfBGCfe34i5bg
      mrKQFJ7W0xw+2YGjsIo8qw2DCAQHudhrpawgG0tGMQurRLp7BlAsheQ6zUSb/spTv99D72CA
      pM5EfZuHD37oPdTkTSc0jclclwB0kh6DQY+kk9AJAoo6YZd0eozGS3ZRuEoIqUoy7COVUUpd
      TTUu30W+3dJO7L6Kt85QfE388Ze7CFY+yPK65bgMIqlhCxb/ECfONrGiOpMMZxbW3gBRnFzV
      E+FmI+iwZhVS6rIR7O+nraODBFwSRhGlLivBvj7aurqYrkkAidwVD/LZvG4udnTQd+YwJtdj
      rJx0ht6RTYZlCH/RCpYsLsIsS3jOd5K77at8quJSMyAZsDsst79RuEOYoQAEJJ0FZ7YTowQg
      Y892oxgkJNmCK8s50Wqhx57lRjWIBEZ68L5jpKVDjI2w74ff5ki3F8Fexs7PrsRi0mOyZ5Fp
      1TPYfJrG7jOcO36Ww78WySjewOe/8WXe+9h2fvvLp/mvH/tPsJew+Ykv86mpN/69wwjQ3zuG
      asxm/kIbts5mkpEYTHIFGus6xokmA0tXmwmNj5OyOXBWLCb4zGH6C9eTb1DwDvlRZRmDwzKl
      o1wy7MUTDOMZ9+L3w+jwKE67A6tBRkxDz7qb6g2qJBMc/MnXePb85XZJLuKDT/4Da6ZKl3jH
      Eaa1vhNreSk5NjPRsTH6h4Zw15QycroTe+U8sq0mImNjDAwNYc13ERwaI3LZq0DClpUBfQ0c
      OtWIJ66nYNEGtq5dgMPXyN5eIyvmF9O1+3vsaXtzNshCzdadbJifzdAbz7P7VD9h1Uh25TLu
      qc3BN+4jccXMkd5VgGNwL7873DvJamXhtgfYWJ0z7bjhTkbLDzDH8Hae5viZi3iuCIjJr1nG
      0gWlzMqmCiMX+POhC4Ril6fFsJSt5r6lJZjku/BJnwZNABppzbUEkD5NgYbGFGgC0EhrtIiw
      GTB1SKTGXCaRSJBKpQiHp3ZJ0d4AGmmNJgCNtEYTgEZaowlAI63RBsE3TIim41HNMuMAABCI
      SURBVK3Y5leQb5/sfhCi8Vgr9ppK8m3mObN/j5oM0LD3eXaf7iUqZVC7aRsb60qx3oEb284G
      mgBuGIVYJIZJuXI9USEWiZJM3WAgy9BZnj6X5P61i8iwTLfX/7tn/Mw+2uwb+ORXCjGGOtlz
      oIPePBdVBXPAq/Y2oAlgNlCTBEf7aRtKkZJMZGTn4bZP2ENjV9oN0zxoKvHAKP1DHiJJAZPd
      TW6OG6OjhHuXidiMOmLjPbQPvrm/jQ5nXgHZDiOx8X76R4IkRSPu7Bwy7KZpd2p2Ln2Ah0UR
      UEmZ7GS77RjSyDXiSjQBzAYJDx1Nw6QSKaJxyCiuZd3aXEiM0944SiqRnLCX1LFuTcU0rtsh
      Os+c5sKwHwUZe04ZFrcbo6eZQ61mtq6oRufpobFxECUyzoBXR+19O3AbvDScaWTIFyQhSJg9
      VaxcWE6GdWqnIlEUQVWI+kfo6Won7sglw2pOy9YfNAHMDoKRnOoFLC7LI9bfRXPHMGFyQTCQ
      U72Q2rJcIn2dtHSNEGE6ASjEgkHispOyecXk5+XhuOIZtpWv45HiIINdbfRFnVQWu0n1/IUD
      Z8coLLAjJcdoOneRgoI8nFbHlA+1qqqEx7toujCILjuf+UUF2E3p+xik75XPJrKd7CwHBkkk
      KZswGibb7eglkbhswnjVLryVipUrkbv7GRhq51R3J+Urt7Bg0hlqKsZIXzu9YTuVFQXYTRLj
      nhGcC1azuHCiz1Mj28h3m6YddKvJQc6+MUD2ovkU5Lgw3olZLWaRdH3zzUHC+KIG8itqWb1i
      CcWuFF5v7PIzxttp6ZUpryzCYdYhAPa8AqK9IzhKq5lfVU6WSYeipKYNxgs1HsdXXEdpXkba
      P/ygvQFmARGDyTARAgoIkoTeYEBCxGAyopMm2hhRktAbjajRIOOhCJfHqojozTpivSd54chZ
      RmN6SpZuYecKM3gMWE16RAEu7vsT+y4q7NsPYKNu56Pct3gr2yue5pn/9S3Cqom8mjVsW2dE
      jYZQrpiZkow2Rgd6OfnGdzj5ljWfTR99L6tLMm/vxgK3CS0eYAbMhjOcp+UI+46dZeSyLRmM
      FC9dx7qlle/o918Xg6f5zV9PE7g87Az7/Ht5eG0l5rsx9GsatAQZs4jmDXrncS0BpE9ToKEx
      BZoANNIabRA8A/R6PVqP8c5CFEVEUcRovDLV1ASaAGaAIAgIgjZ1eCchiiKCIEysgE91/BbX
      R0NjTqEJQCOt0QSgkdZoY4AbJkxrfdelrREn++CEaZm0NeJcGTnEhi6w67VD9IzFES3Z1G3Y
      yLLKPIxp2hRqArhhUvjHxpFKCq+wJ/GPedGV3uDC2eBpflGf4IENS3BbbzwgJjgyRs6K7Sy3
      61E8rRxquEC2w0Z5rnXOiPRWoglgNlAV4iE/Y8kIqiBjstqwGAE1RTzsZywZnrDbbFgMumke
      NJVULIw/ECahgGy0YLWakTPn88g9ImajfGln5/il80WMNgdWo45kxE8gFEMRZExWK+ar7PSc
      sXADq96ssz1Kbm8/QmrCeU4TgMb1kfDQdLSd4SEvYdVC+bLNbF2XOWE/0jFhx0LFss1sWVuG
      acpConSf3Mv+cx0EEjJZ85awaesa8kbreaHZyo7VCxDaDvH0vnbUeBBP0MTKRz7AfdUGGl/f
      z6nmQaKyjeJFq9i4pALntD7+KoHBVjoGfXgHh0hlVuF229J2MKgJYDZQwVGxgfveV0K8t5UL
      LQMEyARVwFG5kW3vKyba00pj2yABphfA6FAMZ8VyVpXk43a5cF7hGOeqfZC/rYkw2n2RZq+J
      6vJs6H+F/U0pqucvQI6PcLGpmb6iPOyFUwfEoKoEBpq50BLB5sokx2ZGRE3bN0C6Cn92MWRS
      UpKFWSeh09uwmCfZi7Mw6SRkvfVt+5Q4qF5eTaYQoLOlgVOnz9Dju3z8oKbieAba6fAaqSgv
      JcMqEx7oI+XKwCCCaMxiQVUpLtv0YwVBlChY9gAffP/7uHd5MZG2Vno8/rRNl6q9AeYMUaL6
      XGqXl5AID9PccIaB0RgVk0QT8XXS3JmiZHE5WY6J4HpLdi5ym4WatavI0SfxjHiRpt3iJEjH
      +T6sJaVk2GT0skjEHyAcT8ypXMa3Ek0AcwaVYPMBfnv4LKMxmcLaTTyYbwTv22ece+knPFOv
      YtylRxRsLH3fh9ixcAtrzv2cp/6fl4kLZnLmr2Hn/auwT/m20aELt/C77/2O4UASyeRmwdot
      rMjJSNuEelo8wA2j8tYdFATe+kfg7SSBk+zDZ1/hj7sO0+efXIaZ6k072XlPHRmX9V4EhEv9
      8xnRfZBv/2Yf3lD8MnPG8kf57I46rIZ39nzvVh8nLUOMRlqjZYjR0LgKmgA00hptEDwD3sw2
      onHnkEgkUBSFaPQdyaoBTQAzQlEUFCVdZ8zvTBRFQVXVaX83rQukkdZoAtBIazQBaKQ1mgBu
      mCh9rV14wrErFqyi9LV04YlcaZ8LqETH+zi5dy/1HSPErv2Bd6CkkvScO05/ZNYrd0vRBHDD
      JBjtGyIQT7zDPtI3SCB2pX2GjDXzlyMX8IVvsJxJqMkIg72NnG0YwDPu5XpKVpUUI+1NjF2P
      euYQ2izQXMdRzPrFKlbjLP1UqkrYN0hPT4J5NSWY0tUJ6BKaAGaD5DiNe5/h+ZZ+wnImSzY9
      wJZldkh5J9mzWLJpJ1uWFTC1s3KCgdN7eOlAPcNhHfnz13D/jvXke87x6qUMMcqFP/L9XS2o
      qTjRhI0Vj36Q7Ysy6Hj9RXYf6yBkyKJ2/WY21pZinWYDXDUVobfhNGLNNoqGGxm61qUlBnjt
      5y8wqIYZGEngqlzNjvtWU2B523co2H6EY6M2ahcuIssYZ+DMK5yUN7GzIsyJPa/x+rkeorKN
      ms0f4uFlWdd7l28KmgBmg2QcuWg9n36wjHhfK03tvfiogUQMuXgDn35wHvHeVpo6e/FTQOaU
      hfjp6UlSdc/D7MjLwGgwYL7i13Gv+ABPLo3jH2ihYUigvDwXcfggx/tyWL9zMXJskHPdnQwU
      ZFGRZ5siwEUh0HeaNnU520r19A2/m4sTMFgLuOfB7ZTog1zcv4+LfR6yK9xX/ZQKxD1DeA2F
      bHpkEwUuC5LpqgERtwVNALOBMYeKijwssgRGBzaL9217eS4WWUI12rGZvVcpxEnFgkyOX2ym
      fsSMw5VN2fxFl0WPqUqSwFgPHWMiJaXzyLLL+Bu7GA7b6Gj2AGAw5iEbxKkjvGJDnHitHm9R
      iiMH2vF09RGQLUiuLOoKnMhTdocEZFsmGVYdEk7K5tnpDAq8m/VAY2YRhVYPHc3nGTWZceVV
      YV1oYupNCm8PmgDmDAlEdzUbN1bh9w7QerGZruFK8icpIBbso60zRMa8cvLcRkTA4HDhzqrg
      3u01uHQpAr4golmeJrxRInvhUuR4cpLtWnNUKqqSRFFUUrFxWrvDGPMEJu80KAiQTCRJqSli
      oVG6+zxQCknFQOGCZeRXpfAPt1B/uomihfnkXucduhloApgzpPC1vsHrFzoJJESchfNZkynD
      pEQaLQeeZdc5AXvGUXSCmap7trGmaB2VF17k2V+8DoIBe8F81q+txWyc4g1gyGbxmuxL/0Tp
      PH6GIUMG84ud02eHURX83cd45qeNiMg4ixayJt/J5Myqxsw8zOeP8udfn0Bnd5N96aAa89B0
      7DgXejwkRTPFizZin52bNWto8QAzYOoEGQqxcBzRoEcniajJJIlkEp1RT3IKu6f1IC/vOc5A
      YHIZJirWbWPzslJ0ySgpVUQ2WrBZjEipKIGEgNmgJx4Y5a1dURAxWu1YjDqSYR+BSAIFEZ3B
      hNVzmh/88XV84csDYlxLHuTj9y3CapAAhUQ0TkoQ0RuG+Ot//oGTgSsm9V1LeeKJxXTtaaZ4
      Yy1WJIxmK2aTjAjEQgEEkx2DmCQSChGOxEGnxyiLIJsx6xQi4RCRWAJFkDBbHZgN0i0Nvtcy
      xMwis5Eh5uq3W2BWArPUq0eRvTP6a1JU2xUoqTFOH+ylavOSOdd6vxuuJQCtC3SLuSWhh4Iw
      w1Z2euFJukxWbJ563upuQFsJ1khrpu0CJRIJBgYGbnV95jSpVErLEHOHoSgKwWAQu33qDty0
      XSBRFHE4HDetYhoat4JEIkEsFsPtnnrhbloBSJKkCUDjjicejzM2Njbts6yNATTSGk0AGmnN
      3BZApJ9ju96gJ3qlx/o4Da8d5OJYfMqP3b0kCQRGGBwMXmFXCAfGGR70XJdvfzoztwUQaufl
      X7zKxfCVURdDHPn1HzkxeIdHY8yYJF5vH52dVzrVKQTHh+nuGtIEMEPmtgA0NG4yM1wJVvH0
      7ObX39pLuAiaTrailD7APz75ODm+E7z8mwCb/ulBiujkj1/fR+7fPcrCxEWe/d8/plVx09/a
      ga7uft6b3cuLr50lVbKOj332M2yuuNoiu4dTf/h/+cOBc0RzlvHE577AtvkAEVr3/JC//7cT
      DFqrefxTn+PhVQXTO3XdNII0HDrJ8Hgn9Wc78Mu5rL7/YbYuETnxUgcFaxdTnGHE29NGS1uQ
      8nuXET68i9PjvTSf6iLmLKZuUSXR5uNcGFZYsPOTPL48e/oV41SYgYZ9/OxYDx0eKNn6IT59
      TxGoccbaTvH7U3+mayCMa8Vj/M1Di6cJvtF4kxm+AVRSyQBjXlj40Nf4/lNPstpzmiOtQVKJ
      EN6R4KVXcBz/iJdwSkFJRPCGddQ9+g/84DtfoLDxAiN1H+N/fu8/eCB/lKOn2iY7PE5J1sqP
      850ffJdPLJQ4feA0I5fsxvKd/Pcffo+v3ZdF+/7j9IZnfP2zgEpsfBC/fRmf/od/4UuPrsc4
      0M44ScKBMPHUxMJZKhEnEoqSAhLhMWJZ6/jiP/0Ln9haTnAgTN3jX+Kf//49+Np6r/518QSK
      qYDNH/07vv6Pj2NrbZ24H6kYcZ2LVY98gSe//mUW9zXQdrMv/S7gOrpAImZLBjnZGRisZiw6
      +ZqFGE1mMlwuDHodkuCmqDQDs2zA4XCgqMo1PNIzKCp1Y5IljEYzutSb55soLCnEbJIwmE3o
      VQX1dm3aZi6itrYUu17GYHbjvKbXWBaV1XmY9BIGRwHlZcXkZ5qR7Xac0jWCdE0OCsoqKXGb
      0ZndZNsvna+zkVdSSWmuDVnOJDtLc/N6N8ziGEAhmYoQiyYIDo8yFomlbdqdCQRQkyQUFSUR
      xTc6hC/dJq3uAGapmRDQG91IiRf51XcClJfKjIST1/7YXY2douwIJ3b/mXOyESEeQzCX3O5K
      aVzBDOMBVOLhYXrbw2RUz8Mph+g93wNFZeSa4vS3NNLnB1tOBrIP3DXFOJQA/T3DWArnk6kb
      p7XRg2N+CVlSitHBPrzRAI37X+XAme7LN2jKX8oT79tERlTFVVNCpk5hfGAAb8pKfrGB4bM9
      iPMqKbCBf2SAsYBMTnHuOwLJbz5JfKMBZIcNk6wjFY0SjkQwuJwI/iG6+8eIqXosVhtmgwFH
      tovU6ChJhwObrCMRDROOKFhdNnSEGRhIYo2f5dnnT3FZEhlBwLX0vTy+PINYTI/TaQQSjA34
      seW5UCNhojGwOq1IQGBgACEvD+utvh1zjLmfISYVwzc+jj8cv3wsIJvJyHBiNaRfXzYVCzDu
      DXNl6I3O7MJ9lQyQGu/kWgL4/wEFfb7G/Ou9nAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
